* 
* ==> Audit <==
* |---------|--------------------------------------|----------|---------|---------|---------------------|---------------------|
| Command |                 Args                 | Profile  |  User   | Version |     Start Time      |      End Time       |
|---------|--------------------------------------|----------|---------|---------|---------------------|---------------------|
| image   | load                                 | minikube | T971012 | v1.32.0 | 25 Mar 25 18:51 EDT | 25 Mar 25 18:51 EDT |
|         | moduscreate/quarkus-hello-service:v1 |          |         |         |                     |                     |
| stop    |                                      | minikube | T971012 | v1.32.0 | 26 Mar 25 16:57 EDT | 26 Mar 25 16:57 EDT |
| start   |                                      | minikube | T971012 | v1.32.0 | 26 Mar 25 16:58 EDT | 26 Mar 25 16:59 EDT |
| stop    |                                      | minikube | T971012 | v1.32.0 | 27 Mar 25 17:16 EDT | 27 Mar 25 17:17 EDT |
| start   | --cpus 6 --memory 8192               | minikube | T971012 | v1.32.0 | 27 Mar 25 17:19 EDT |                     |
| start   |                                      | minikube | T971012 | v1.32.0 | 27 Mar 25 17:22 EDT | 27 Mar 25 17:22 EDT |
| delete  |                                      | minikube | T971012 | v1.32.0 | 27 Mar 25 17:53 EDT | 27 Mar 25 17:53 EDT |
| start   | --vm-driver=qemu2                    | minikube | T971012 | v1.32.0 | 27 Mar 25 17:56 EDT | 27 Mar 25 17:57 EDT |
| start   |                                      | minikube | T971012 | v1.32.0 | 28 Mar 25 14:37 EDT | 28 Mar 25 14:37 EDT |
| stop    |                                      | minikube | T971012 | v1.32.0 | 28 Mar 25 14:53 EDT | 28 Mar 25 14:53 EDT |
| image   | load                                 | minikube | T971012 | v1.32.0 | 29 Mar 25 13:29 EDT |                     |
|         | docker.io/library/mytestimage:v1     |          |         |         |                     |                     |
| image   | load mytestimage:v1                  | minikube | T971012 | v1.32.0 | 29 Mar 25 13:32 EDT |                     |
| cache   | add mytestimage:v1                   | minikube | T971012 | v1.32.0 | 29 Mar 25 13:40 EDT |                     |
| image   | load mytestimage:v1                  | minikube | T971012 | v1.32.0 | 29 Mar 25 13:42 EDT |                     |
| start   |                                      | minikube | T971012 | v1.32.0 | 29 Mar 25 14:46 EDT | 29 Mar 25 14:47 EDT |
| ip      |                                      | minikube | T971012 | v1.32.0 | 01 Apr 25 19:52 EDT | 01 Apr 25 19:52 EDT |
| ip      |                                      | minikube | T971012 | v1.32.0 | 01 Apr 25 19:58 EDT | 01 Apr 25 19:58 EDT |
| service | grafana-ext --url                    | minikube | T971012 | v1.32.0 | 01 Apr 25 20:28 EDT |                     |
| stop    |                                      | minikube | T971012 | v1.32.0 | 01 Apr 25 20:30 EDT | 01 Apr 25 20:31 EDT |
| start   | --network=socket_vmnet               | minikube | T971012 | v1.32.0 | 01 Apr 25 20:31 EDT |                     |
| start   |                                      | minikube | T971012 | v1.32.0 | 01 Apr 25 20:41 EDT |                     |
| start   |                                      | minikube | T971012 | v1.32.0 | 01 Apr 25 21:06 EDT |                     |
| delete  |                                      | minikube | T971012 | v1.32.0 | 01 Apr 25 21:16 EDT | 01 Apr 25 21:16 EDT |
| start   | --network=socket-vmnet               | minikube | T971012 | v1.32.0 | 01 Apr 25 21:16 EDT | 01 Apr 25 21:17 EDT |
| ip      |                                      | minikube | T971012 | v1.32.0 | 01 Apr 25 21:45 EDT | 01 Apr 25 21:45 EDT |
| ip      |                                      | minikube | T971012 | v1.32.0 | 01 Apr 25 22:00 EDT | 01 Apr 25 22:00 EDT |
| ip      |                                      | minikube | T971012 | v1.32.0 | 01 Apr 25 22:20 EDT | 01 Apr 25 22:20 EDT |
| service | prometheus-server-ext -n             | minikube | T971012 | v1.32.0 | 01 Apr 25 22:24 EDT | 01 Apr 25 22:26 EDT |
|         | monitoring                           |          |         |         |                     |                     |
| service | grafana-ext                          | minikube | T971012 | v1.32.0 | 01 Apr 25 22:30 EDT | 02 Apr 25 16:46 EDT |
| service | prometheus-server-ext                | minikube | T971012 | v1.32.0 | 02 Apr 25 12:45 EDT |                     |
| service | prometheus-server-ext -n             | minikube | T971012 | v1.32.0 | 02 Apr 25 12:46 EDT | 02 Apr 25 15:19 EDT |
|         | monitoring                           |          |         |         |                     |                     |
| stop    |                                      | minikube | T971012 | v1.32.0 | 02 Apr 25 16:27 EDT | 02 Apr 25 16:28 EDT |
| delete  |                                      | minikube | T971012 | v1.32.0 | 02 Apr 25 16:28 EDT | 02 Apr 25 16:28 EDT |
| start   |                                      | minikube | T971012 | v1.32.0 | 02 Apr 25 16:28 EDT | 02 Apr 25 16:28 EDT |
| stop    |                                      | minikube | T971012 | v1.32.0 | 02 Apr 25 17:04 EDT | 02 Apr 25 17:05 EDT |
| start   |                                      | minikube | T971012 | v1.32.0 | 02 Apr 25 17:05 EDT | 02 Apr 25 17:05 EDT |
| stop    |                                      | minikube | T971012 | v1.32.0 | 03 Apr 25 09:49 EDT | 03 Apr 25 09:49 EDT |
| delete  |                                      | minikube | T971012 | v1.32.0 | 03 Apr 25 09:49 EDT | 03 Apr 25 09:49 EDT |
| start   |                                      | minikube | T971012 | v1.32.0 | 03 Apr 25 10:10 EDT | 03 Apr 25 10:10 EDT |
| ip      |                                      | minikube | T971012 | v1.32.0 | 03 Apr 25 10:24 EDT | 03 Apr 25 10:24 EDT |
| stop    |                                      | minikube | T971012 | v1.32.0 | 03 Apr 25 10:29 EDT | 03 Apr 25 10:29 EDT |
| start   |                                      | minikube | T971012 | v1.32.0 | 03 Apr 25 10:29 EDT | 03 Apr 25 10:30 EDT |
| ip      |                                      | minikube | T971012 | v1.32.0 | 03 Apr 25 10:30 EDT | 03 Apr 25 10:30 EDT |
| service | prometheus-grafana                   | minikube | T971012 | v1.32.0 | 03 Apr 25 10:58 EDT |                     |
| stop    |                                      | minikube | T971012 | v1.32.0 | 03 Apr 25 11:28 EDT | 03 Apr 25 11:28 EDT |
| delete  |                                      | minikube | T971012 | v1.32.0 | 03 Apr 25 11:28 EDT | 03 Apr 25 11:28 EDT |
| start   |                                      | minikube | T971012 | v1.32.0 | 03 Apr 25 11:29 EDT | 03 Apr 25 11:29 EDT |
| start   |                                      | minikube | T971012 | v1.32.0 | 03 Apr 25 11:29 EDT | 03 Apr 25 11:30 EDT |
| stop    |                                      | minikube | T971012 | v1.32.0 | 03 Apr 25 12:14 EDT | 03 Apr 25 12:14 EDT |
| delete  |                                      | minikube | T971012 | v1.32.0 | 03 Apr 25 12:14 EDT | 03 Apr 25 12:14 EDT |
| start   | --cpus 6 --memory 8192               | minikube | T971012 | v1.32.0 | 03 Apr 25 12:15 EDT |                     |
| start   | --cpus 4 --memory 8192               | minikube | T971012 | v1.32.0 | 03 Apr 25 12:16 EDT |                     |
| start   | --cpus 2 --memory 8192               | minikube | T971012 | v1.32.0 | 03 Apr 25 12:16 EDT |                     |
| start   |                                      | minikube | T971012 | v1.32.0 | 03 Apr 25 12:20 EDT | 03 Apr 25 12:21 EDT |
| service | prometheus-service                   | minikube | T971012 | v1.32.0 | 03 Apr 25 15:01 EDT |                     |
| stop    |                                      | minikube | T971012 | v1.32.0 | 03 Apr 25 15:01 EDT | 03 Apr 25 15:02 EDT |
| start   | --network=socket-vmnet               | minikube | T971012 | v1.32.0 | 03 Apr 25 15:03 EDT |                     |
| start   | --network=socket_vmnet               | minikube | T971012 | v1.32.0 | 03 Apr 25 15:13 EDT |                     |
| start   | --network=socket_vmnet               | minikube | T971012 | v1.32.0 | 03 Apr 25 15:23 EDT |                     |
| start   | --memory 8192                        | minikube | T971012 | v1.32.0 | 03 Apr 25 15:36 EDT |                     |
|         | --network=socket_vmnet               |          |         |         |                     |                     |
|---------|--------------------------------------|----------|---------|---------|---------------------|---------------------|

* 
* ==> Last Start <==
* Log file created at: 2025/04/03 15:36:26
Running on machine: Yasirs-MBP
Binary: Built with gc go1.21.4 for darwin/arm64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0403 15:36:26.750693    2883 out.go:296] Setting OutFile to fd 1 ...
I0403 15:36:26.750835    2883 out.go:348] isatty.IsTerminal(1) = true
I0403 15:36:26.750837    2883 out.go:309] Setting ErrFile to fd 2...
I0403 15:36:26.750839    2883 out.go:348] isatty.IsTerminal(2) = true
I0403 15:36:26.750934    2883 root.go:338] Updating PATH: /Users/T971012/.minikube/bin
I0403 15:36:26.751361    2883 out.go:303] Setting JSON to false
I0403 15:36:26.785887    2883 start.go:128] hostinfo: {"hostname":"Yasirs-MBP","uptime":11900,"bootTime":1743697086,"procs":549,"os":"darwin","platform":"darwin","platformFamily":"Standalone Workstation","platformVersion":"14.1.2","kernelVersion":"23.1.0","kernelArch":"arm64","virtualizationSystem":"","virtualizationRole":"","hostId":"30e65217-f86b-5d50-ab74-55873e9f6131"}
W0403 15:36:26.786074    2883 start.go:136] gopshost.Virtualization returned error: not implemented yet
I0403 15:36:26.791155    2883 out.go:177] 😄  minikube v1.32.0 on Darwin 14.1.2 (arm64)
I0403 15:36:26.799289    2883 notify.go:220] Checking for updates...
I0403 15:36:26.799595    2883 config.go:182] Loaded profile config "minikube": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.28.3
I0403 15:36:26.799648    2883 driver.go:378] Setting default libvirt URI to qemu:///system
I0403 15:36:26.803129    2883 out.go:177] ✨  Using the qemu2 driver based on existing profile
I0403 15:36:26.810194    2883 start.go:298] selected driver: qemu2
I0403 15:36:26.810199    2883 start.go:902] validating driver "qemu2" against &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube/iso/minikube-v1.32.1-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:49663 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:10.0.2.15 Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 AutoPauseInterval:1m0s GPUs:}
I0403 15:36:26.810250    2883 start.go:913] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
W0403 15:36:26.810375    2883 out.go:239] ❗  You cannot change the memory size for an existing minikube cluster. Please first delete the cluster.
I0403 15:36:26.810408    2883 cni.go:84] Creating CNI manager for ""
I0403 15:36:26.810420    2883 cni.go:158] "qemu2" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0403 15:36:26.810424    2883 start_flags.go:323] config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube/iso/minikube-v1.32.1-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:49663 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:10.0.2.15 Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 AutoPauseInterval:1m0s GPUs:}
I0403 15:36:26.853154    2883 iso.go:125] acquiring lock: {Name:mkc8ab7f924e48b4198a29583c9e5b531c4a8dd7 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0403 15:36:26.856976    2883 out.go:177] 👍  Starting control plane node minikube in cluster minikube
I0403 15:36:26.865133    2883 preload.go:132] Checking if preload exists for k8s version v1.28.3 and runtime docker
I0403 15:36:26.865160    2883 preload.go:148] Found local preload: /Users/T971012/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.28.3-docker-overlay2-arm64.tar.lz4
I0403 15:36:26.865168    2883 cache.go:56] Caching tarball of preloaded images
I0403 15:36:26.865243    2883 preload.go:174] Found /Users/T971012/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.28.3-docker-overlay2-arm64.tar.lz4 in cache, skipping download
I0403 15:36:26.865250    2883 cache.go:59] Finished verifying existence of preloaded tar for  v1.28.3 on docker
I0403 15:36:26.865300    2883 profile.go:148] Saving config to /Users/T971012/.minikube/profiles/minikube/config.json ...
I0403 15:36:26.866199    2883 start.go:365] acquiring machines lock for minikube: {Name:mk29d72dd80c98d91a0d85c89b2ec43fff8a7685 Clock:{} Delay:500ms Timeout:13m0s Cancel:<nil>}
I0403 15:36:26.866256    2883 start.go:369] acquired machines lock for "minikube" in 45.459µs
I0403 15:36:26.866267    2883 start.go:96] Skipping create...Using existing machine configuration
I0403 15:36:26.866272    2883 fix.go:54] fixHost starting: 
I0403 15:36:26.867198    2883 fix.go:102] recreateIfNeeded on minikube: state=Running err=<nil>
W0403 15:36:26.867204    2883 fix.go:128] unexpected machine state, will restart: <nil>
I0403 15:36:26.874135    2883 out.go:177] 🏃  Updating the running qemu2 "minikube" VM ...
I0403 15:36:26.878111    2883 machine.go:88] provisioning docker machine ...
I0403 15:36:26.878125    2883 buildroot.go:166] provisioning hostname "minikube"
I0403 15:36:26.878183    2883 main.go:141] libmachine: Using SSH client type: native
I0403 15:36:26.878437    2883 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x102adef80] 0x102ae16f0 <nil>  [] 0s} localhost 49627 <nil> <nil>}
I0403 15:36:26.878444    2883 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0403 15:36:26.947491    2883 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0403 15:36:26.947555    2883 main.go:141] libmachine: Using SSH client type: native
I0403 15:36:26.947814    2883 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x102adef80] 0x102ae16f0 <nil>  [] 0s} localhost 49627 <nil> <nil>}
I0403 15:36:26.947820    2883 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0403 15:36:27.013372    2883 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0403 15:36:27.013380    2883 buildroot.go:172] set auth options {CertDir:/Users/T971012/.minikube CaCertPath:/Users/T971012/.minikube/certs/ca.pem CaPrivateKeyPath:/Users/T971012/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/Users/T971012/.minikube/machines/server.pem ServerKeyPath:/Users/T971012/.minikube/machines/server-key.pem ClientKeyPath:/Users/T971012/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/Users/T971012/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/Users/T971012/.minikube}
I0403 15:36:27.013389    2883 buildroot.go:174] setting up certificates
I0403 15:36:27.013393    2883 provision.go:83] configureAuth start
I0403 15:36:27.013395    2883 provision.go:138] copyHostCerts
I0403 15:36:27.013455    2883 exec_runner.go:144] found /Users/T971012/.minikube/ca.pem, removing ...
I0403 15:36:27.013459    2883 exec_runner.go:203] rm: /Users/T971012/.minikube/ca.pem
I0403 15:36:27.013898    2883 exec_runner.go:151] cp: /Users/T971012/.minikube/certs/ca.pem --> /Users/T971012/.minikube/ca.pem (1082 bytes)
I0403 15:36:27.014838    2883 exec_runner.go:144] found /Users/T971012/.minikube/cert.pem, removing ...
I0403 15:36:27.014842    2883 exec_runner.go:203] rm: /Users/T971012/.minikube/cert.pem
I0403 15:36:27.015162    2883 exec_runner.go:151] cp: /Users/T971012/.minikube/certs/cert.pem --> /Users/T971012/.minikube/cert.pem (1123 bytes)
I0403 15:36:27.015766    2883 exec_runner.go:144] found /Users/T971012/.minikube/key.pem, removing ...
I0403 15:36:27.015772    2883 exec_runner.go:203] rm: /Users/T971012/.minikube/key.pem
I0403 15:36:27.016221    2883 exec_runner.go:151] cp: /Users/T971012/.minikube/certs/key.pem --> /Users/T971012/.minikube/key.pem (1675 bytes)
I0403 15:36:27.016701    2883 provision.go:112] generating server cert: /Users/T971012/.minikube/machines/server.pem ca-key=/Users/T971012/.minikube/certs/ca.pem private-key=/Users/T971012/.minikube/certs/ca-key.pem org=T971012.minikube san=[127.0.0.1 localhost localhost 127.0.0.1 minikube minikube]
I0403 15:36:27.199192    2883 provision.go:172] copyRemoteCerts
I0403 15:36:27.199236    2883 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0403 15:36:27.199241    2883 sshutil.go:53] new ssh client: &{IP:localhost Port:49627 SSHKeyPath:/Users/T971012/.minikube/machines/minikube/id_rsa Username:docker}
I0403 15:36:27.235371    2883 ssh_runner.go:362] scp /Users/T971012/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1679 bytes)
I0403 15:36:27.245767    2883 ssh_runner.go:362] scp /Users/T971012/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1082 bytes)
I0403 15:36:27.255365    2883 ssh_runner.go:362] scp /Users/T971012/.minikube/machines/server.pem --> /etc/docker/server.pem (1212 bytes)
I0403 15:36:27.265824    2883 provision.go:86] duration metric: configureAuth took 252.426209ms
I0403 15:36:27.265848    2883 buildroot.go:189] setting minikube options for container-runtime
I0403 15:36:27.266071    2883 config.go:182] Loaded profile config "minikube": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.28.3
I0403 15:36:27.266129    2883 main.go:141] libmachine: Using SSH client type: native
I0403 15:36:27.266369    2883 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x102adef80] 0x102ae16f0 <nil>  [] 0s} localhost 49627 <nil> <nil>}
I0403 15:36:27.266372    2883 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0403 15:36:27.331521    2883 main.go:141] libmachine: SSH cmd err, output: <nil>: tmpfs

I0403 15:36:27.331532    2883 buildroot.go:70] root file system type: tmpfs
I0403 15:36:27.331599    2883 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...
I0403 15:36:27.331682    2883 main.go:141] libmachine: Using SSH client type: native
I0403 15:36:27.331888    2883 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x102adef80] 0x102ae16f0 <nil>  [] 0s} localhost 49627 <nil> <nil>}
I0403 15:36:27.331927    2883 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
After=network.target  minikube-automount.service docker.socket
Requires= minikube-automount.service docker.socket 
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=qemu2 --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0403 15:36:27.400232    2883 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
After=network.target  minikube-automount.service docker.socket
Requires= minikube-automount.service docker.socket 
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=qemu2 --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0403 15:36:27.400279    2883 main.go:141] libmachine: Using SSH client type: native
I0403 15:36:27.400497    2883 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x102adef80] 0x102ae16f0 <nil>  [] 0s} localhost 49627 <nil> <nil>}
I0403 15:36:27.400503    2883 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0403 15:36:27.465538    2883 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0403 15:36:27.465544    2883 machine.go:91] provisioned docker machine in 587.429416ms
I0403 15:36:27.465547    2883 start.go:300] post-start starting for "minikube" (driver="qemu2")
I0403 15:36:27.465552    2883 start.go:329] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0403 15:36:27.465609    2883 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0403 15:36:27.465615    2883 sshutil.go:53] new ssh client: &{IP:localhost Port:49627 SSHKeyPath:/Users/T971012/.minikube/machines/minikube/id_rsa Username:docker}
I0403 15:36:27.502268    2883 ssh_runner.go:195] Run: cat /etc/os-release
I0403 15:36:27.503975    2883 info.go:137] Remote host: Buildroot 2021.02.12
I0403 15:36:27.503979    2883 filesync.go:126] Scanning /Users/T971012/.minikube/addons for local assets ...
I0403 15:36:27.504049    2883 filesync.go:126] Scanning /Users/T971012/.minikube/files for local assets ...
I0403 15:36:27.504081    2883 start.go:303] post-start completed in 38.531083ms
I0403 15:36:27.504083    2883 fix.go:56] fixHost completed within 637.814166ms
I0403 15:36:27.504106    2883 main.go:141] libmachine: Using SSH client type: native
I0403 15:36:27.504295    2883 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x102adef80] 0x102ae16f0 <nil>  [] 0s} localhost 49627 <nil> <nil>}
I0403 15:36:27.504297    2883 main.go:141] libmachine: About to run SSH command:
date +%!s(MISSING).%!N(MISSING)
I0403 15:36:27.567253    2883 main.go:141] libmachine: SSH cmd err, output: <nil>: 1743709059.439842607

I0403 15:36:27.567256    2883 fix.go:206] guest clock: 1743709059.439842607
I0403 15:36:27.567259    2883 fix.go:219] Guest: 2025-04-03 15:37:39.439842607 -0400 EDT Remote: 2025-04-03 15:36:27.504084 -0400 EDT m=+0.781694543 (delta=1m11.935758607s)
I0403 15:36:27.567305    2883 main.go:141] libmachine: Using SSH client type: native
I0403 15:36:27.567512    2883 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x102adef80] 0x102ae16f0 <nil>  [] 0s} localhost 49627 <nil> <nil>}
I0403 15:36:27.567515    2883 main.go:141] libmachine: About to run SSH command:
sudo date -s @1743708987
I0403 15:36:27.633497    2883 main.go:141] libmachine: SSH cmd err, output: <nil>: Thu Apr  3 19:36:27 UTC 2025

I0403 15:36:27.633500    2883 fix.go:226] clock set: Thu Apr  3 19:36:27 UTC 2025
 (err=<nil>)
I0403 15:36:27.633503    2883 start.go:83] releasing machines lock for "minikube", held for 767.242417ms
I0403 15:36:27.633565    2883 ssh_runner.go:195] Run: cat /version.json
I0403 15:36:27.633570    2883 sshutil.go:53] new ssh client: &{IP:localhost Port:49627 SSHKeyPath:/Users/T971012/.minikube/machines/minikube/id_rsa Username:docker}
I0403 15:36:27.633577    2883 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0403 15:36:27.633601    2883 sshutil.go:53] new ssh client: &{IP:localhost Port:49627 SSHKeyPath:/Users/T971012/.minikube/machines/minikube/id_rsa Username:docker}
W0403 15:36:27.634467    2883 sshutil.go:64] dial failure (will retry): dial tcp 127.0.0.1:49627: connect: connection reset by peer
I0403 15:36:27.634485    2883 retry.go:31] will retry after 244.983536ms: dial tcp 127.0.0.1:49627: connect: connection reset by peer
I0403 15:36:27.913860    2883 ssh_runner.go:195] Run: systemctl --version
I0403 15:36:27.916623    2883 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
W0403 15:36:27.919764    2883 cni.go:209] loopback cni configuration skipped: "/etc/cni/net.d/*loopback.conf*" not found
I0403 15:36:27.919798    2883 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%!p(MISSING), " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0403 15:36:27.923806    2883 cni.go:259] no active bridge cni configs found in "/etc/cni/net.d" - nothing to disable
I0403 15:36:27.923810    2883 start.go:472] detecting cgroup driver to use...
I0403 15:36:27.923871    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0403 15:36:27.931670    2883 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.9"|' /etc/containerd/config.toml"
I0403 15:36:27.936058    2883 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0403 15:36:27.940052    2883 containerd.go:145] configuring containerd to use "cgroupfs" as cgroup driver...
I0403 15:36:27.940085    2883 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = false|g' /etc/containerd/config.toml"
I0403 15:36:27.944848    2883 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0403 15:36:27.949061    2883 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0403 15:36:27.953601    2883 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0403 15:36:27.958391    2883 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0403 15:36:27.963865    2883 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0403 15:36:27.968662    2883 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0403 15:36:27.973258    2883 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0403 15:36:27.977385    2883 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0403 15:36:28.076496    2883 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0403 15:36:28.086209    2883 start.go:472] detecting cgroup driver to use...
I0403 15:36:28.086293    2883 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0403 15:36:28.096085    2883 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service containerd
I0403 15:36:28.103263    2883 ssh_runner.go:195] Run: sudo systemctl stop -f containerd
I0403 15:36:28.112073    2883 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service containerd
I0403 15:36:28.119002    2883 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0403 15:36:28.124985    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0403 15:36:28.132927    2883 ssh_runner.go:195] Run: which cri-dockerd
I0403 15:36:28.134979    2883 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0403 15:36:28.138386    2883 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)
I0403 15:36:28.146063    2883 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0403 15:36:28.245306    2883 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0403 15:36:28.344616    2883 docker.go:560] configuring docker to use "cgroupfs" as cgroup driver...
I0403 15:36:28.344726    2883 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (130 bytes)
I0403 15:36:28.351801    2883 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0403 15:36:28.450741    2883 ssh_runner.go:195] Run: sudo systemctl restart docker
I0403 15:36:39.789174    2883 ssh_runner.go:235] Completed: sudo systemctl restart docker: (11.338418667s)
I0403 15:36:39.789286    2883 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0403 15:36:39.874524    2883 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0403 15:36:39.968367    2883 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0403 15:36:40.052497    2883 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0403 15:36:40.135232    2883 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0403 15:36:40.147241    2883 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0403 15:36:40.231415    2883 ssh_runner.go:195] Run: sudo systemctl restart cri-docker
I0403 15:36:40.264671    2883 start.go:519] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0403 15:36:40.264782    2883 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0403 15:36:40.268388    2883 start.go:540] Will wait 60s for crictl version
I0403 15:36:40.268471    2883 ssh_runner.go:195] Run: which crictl
I0403 15:36:40.270758    2883 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0403 15:36:40.290025    2883 start.go:556] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  24.0.7
RuntimeApiVersion:  v1
I0403 15:36:40.290063    2883 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0403 15:36:40.300554    2883 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0403 15:36:40.312404    2883 out.go:204] 🐳  Preparing Kubernetes v1.28.3 on Docker 24.0.7 ...
I0403 15:36:40.312520    2883 ssh_runner.go:195] Run: grep 10.0.2.2	host.minikube.internal$ /etc/hosts
I0403 15:36:40.314149    2883 preload.go:132] Checking if preload exists for k8s version v1.28.3 and runtime docker
I0403 15:36:40.314174    2883 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0403 15:36:40.321160    2883 docker.go:671] Got preloaded images: -- stdout --
nowshahri/istiocanary:v1
registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.5.2
grafana/grafana:11.6.0
quay.io/prometheus-operator/prometheus-config-reloader:v0.81.0
quay.io/prometheus-operator/prometheus-operator:v0.81.0
quay.io/prometheus/alertmanager:v0.28.1
quay.io/prometheus/prometheus:v3.2.1
quay.io/prometheus/node-exporter:v1.9.0
registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0
quay.io/kiwigrid/k8s-sidecar:1.30.0
registry.k8s.io/kube-apiserver:v1.28.3
registry.k8s.io/kube-scheduler:v1.28.3
registry.k8s.io/kube-controller-manager:v1.28.3
registry.k8s.io/kube-proxy:v1.28.3
registry.k8s.io/etcd:3.5.9-0
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0403 15:36:40.321170    2883 docker.go:601] Images already preloaded, skipping extraction
I0403 15:36:40.321202    2883 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0403 15:36:40.328445    2883 docker.go:671] Got preloaded images: -- stdout --
nowshahri/istiocanary:v1
registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.5.2
grafana/grafana:11.6.0
quay.io/prometheus-operator/prometheus-config-reloader:v0.81.0
quay.io/prometheus-operator/prometheus-operator:v0.81.0
quay.io/prometheus/alertmanager:v0.28.1
quay.io/prometheus/prometheus:v3.2.1
quay.io/prometheus/node-exporter:v1.9.0
registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0
quay.io/kiwigrid/k8s-sidecar:1.30.0
registry.k8s.io/kube-apiserver:v1.28.3
registry.k8s.io/kube-scheduler:v1.28.3
registry.k8s.io/kube-controller-manager:v1.28.3
registry.k8s.io/kube-proxy:v1.28.3
registry.k8s.io/etcd:3.5.9-0
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0403 15:36:40.328449    2883 cache_images.go:84] Images are preloaded, skipping loading
I0403 15:36:40.328482    2883 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0403 15:36:40.338218    2883 cni.go:84] Creating CNI manager for ""
I0403 15:36:40.338227    2883 cni.go:158] "qemu2" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0403 15:36:40.338233    2883 kubeadm.go:87] Using pod CIDR: 10.244.0.0/16
I0403 15:36:40.338244    2883 kubeadm.go:176] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:10.0.2.15 APIServerPort:8443 KubernetesVersion:v1.28.3 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "10.0.2.15"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:10.0.2.15 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I0403 15:36:40.338308    2883 kubeadm.go:181] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 10.0.2.15
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 10.0.2.15
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "10.0.2.15"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.28.3
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%!"(MISSING)
  nodefs.inodesFree: "0%!"(MISSING)
  imagefs.available: "0%!"(MISSING)
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0403 15:36:40.338339    2883 kubeadm.go:976] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.28.3/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime-endpoint=unix:///var/run/cri-dockerd.sock --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=10.0.2.15

[Install]
 config:
{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:}
I0403 15:36:40.338370    2883 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.28.3
I0403 15:36:40.343569    2883 binaries.go:44] Found k8s binaries, skipping transfer
I0403 15:36:40.343687    2883 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0403 15:36:40.347772    2883 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (366 bytes)
I0403 15:36:40.358282    2883 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0403 15:36:40.366907    2883 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2082 bytes)
I0403 15:36:40.374579    2883 ssh_runner.go:195] Run: grep 10.0.2.15	control-plane.minikube.internal$ /etc/hosts
I0403 15:36:40.376674    2883 certs.go:56] Setting up /Users/T971012/.minikube/profiles/minikube for IP: 10.0.2.15
I0403 15:36:40.376684    2883 certs.go:190] acquiring lock for shared ca certs: {Name:mk98ce5648784de18c57a3a668c75fa2d78a82b5 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0403 15:36:40.377055    2883 certs.go:199] skipping minikubeCA CA generation: /Users/T971012/.minikube/ca.key
I0403 15:36:40.377546    2883 certs.go:199] skipping proxyClientCA CA generation: /Users/T971012/.minikube/proxy-client-ca.key
I0403 15:36:40.377708    2883 certs.go:315] skipping minikube-user signed cert generation: /Users/T971012/.minikube/profiles/minikube/client.key
I0403 15:36:40.377975    2883 certs.go:315] skipping minikube signed cert generation: /Users/T971012/.minikube/profiles/minikube/apiserver.key.49504c3e
I0403 15:36:40.378202    2883 certs.go:315] skipping aggregator signed cert generation: /Users/T971012/.minikube/profiles/minikube/proxy-client.key
I0403 15:36:40.378471    2883 certs.go:437] found cert: /Users/T971012/.minikube/certs/Users/T971012/.minikube/certs/ca-key.pem (1675 bytes)
I0403 15:36:40.378503    2883 certs.go:437] found cert: /Users/T971012/.minikube/certs/Users/T971012/.minikube/certs/ca.pem (1082 bytes)
I0403 15:36:40.378559    2883 certs.go:437] found cert: /Users/T971012/.minikube/certs/Users/T971012/.minikube/certs/cert.pem (1123 bytes)
I0403 15:36:40.378635    2883 certs.go:437] found cert: /Users/T971012/.minikube/certs/Users/T971012/.minikube/certs/key.pem (1675 bytes)
I0403 15:36:40.379319    2883 ssh_runner.go:362] scp /Users/T971012/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1399 bytes)
I0403 15:36:40.386991    2883 ssh_runner.go:362] scp /Users/T971012/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1675 bytes)
I0403 15:36:40.394229    2883 ssh_runner.go:362] scp /Users/T971012/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0403 15:36:40.401885    2883 ssh_runner.go:362] scp /Users/T971012/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I0403 15:36:40.409404    2883 ssh_runner.go:362] scp /Users/T971012/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0403 15:36:40.420520    2883 ssh_runner.go:362] scp /Users/T971012/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1675 bytes)
I0403 15:36:40.429214    2883 ssh_runner.go:362] scp /Users/T971012/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0403 15:36:40.438881    2883 ssh_runner.go:362] scp /Users/T971012/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1675 bytes)
I0403 15:36:40.447856    2883 ssh_runner.go:362] scp /Users/T971012/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0403 15:36:40.459933    2883 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0403 15:36:40.468941    2883 ssh_runner.go:195] Run: openssl version
I0403 15:36:40.471896    2883 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0403 15:36:40.476440    2883 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0403 15:36:40.478983    2883 certs.go:480] hashing: -rw-r--r-- 1 root root 1111 Dec  6  2023 /usr/share/ca-certificates/minikubeCA.pem
I0403 15:36:40.479038    2883 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0403 15:36:40.482009    2883 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0403 15:36:40.486435    2883 ssh_runner.go:195] Run: ls /var/lib/minikube/certs/etcd
I0403 15:36:40.488068    2883 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-etcd-client.crt -checkend 86400
I0403 15:36:40.490521    2883 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-kubelet-client.crt -checkend 86400
I0403 15:36:40.492551    2883 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/server.crt -checkend 86400
I0403 15:36:40.495486    2883 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/healthcheck-client.crt -checkend 86400
I0403 15:36:40.497532    2883 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/peer.crt -checkend 86400
I0403 15:36:40.500693    2883 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/front-proxy-client.crt -checkend 86400
I0403 15:36:40.503607    2883 kubeadm.go:404] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube/iso/minikube-v1.32.1-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:49663 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:10.0.2.15 Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 AutoPauseInterval:1m0s GPUs:}
I0403 15:36:40.503668    2883 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0403 15:36:40.510578    2883 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0403 15:36:40.514501    2883 host.go:66] Checking if "minikube" exists ...
I0403 15:36:40.515570    2883 main.go:141] libmachine: Using SSH client type: external
I0403 15:36:40.515584    2883 main.go:141] libmachine: Using SSH private key: /Users/T971012/.minikube/machines/minikube/id_rsa (-rw-------)
I0403 15:36:40.515597    2883 main.go:141] libmachine: &{[-F /dev/null -o ConnectionAttempts=3 -o ConnectTimeout=10 -o ControlMaster=no -o ControlPath=none -o LogLevel=quiet -o PasswordAuthentication=no -o ServerAliveInterval=60 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null docker@localhost -o IdentitiesOnly=yes -i /Users/T971012/.minikube/machines/minikube/id_rsa -p 49627] /usr/bin/ssh <nil>}
I0403 15:36:40.515609    2883 main.go:141] libmachine: /usr/bin/ssh -F /dev/null -o ConnectionAttempts=3 -o ConnectTimeout=10 -o ControlMaster=no -o ControlPath=none -o LogLevel=quiet -o PasswordAuthentication=no -o ServerAliveInterval=60 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null docker@localhost -o IdentitiesOnly=yes -i /Users/T971012/.minikube/machines/minikube/id_rsa -p 49627 -f -NTL 49663:localhost:8443
I0403 15:36:40.573380    2883 kubeadm.go:419] found existing configuration files, will attempt cluster restart
I0403 15:36:40.573440    2883 kubeadm.go:636] restartCluster start
I0403 15:36:40.573517    2883 ssh_runner.go:195] Run: sudo test -d /data/minikube
I0403 15:36:40.578455    2883 kubeadm.go:127] /data/minikube skipping compat symlinks: sudo test -d /data/minikube: Process exited with status 1
stdout:

stderr:
I0403 15:36:40.579420    2883 kubeconfig.go:92] found "minikube" server: "https://10.0.2.15:8443"
I0403 15:36:40.582238    2883 ssh_runner.go:195] Run: sudo diff -u /var/tmp/minikube/kubeadm.yaml /var/tmp/minikube/kubeadm.yaml.new
I0403 15:36:40.585975    2883 api_server.go:166] Checking apiserver status ...
I0403 15:36:40.586055    2883 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0403 15:36:40.591069    2883 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0403 15:36:40.591073    2883 api_server.go:166] Checking apiserver status ...
I0403 15:36:40.591129    2883 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0403 15:36:40.597152    2883 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0403 15:36:41.097477    2883 api_server.go:166] Checking apiserver status ...
I0403 15:36:41.097707    2883 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0403 15:36:41.107572    2883 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0403 15:36:41.598268    2883 api_server.go:166] Checking apiserver status ...
I0403 15:36:41.598464    2883 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0403 15:36:41.607166    2883 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0403 15:36:42.098290    2883 api_server.go:166] Checking apiserver status ...
I0403 15:36:42.098568    2883 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0403 15:36:42.106405    2883 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0403 15:36:42.598257    2883 api_server.go:166] Checking apiserver status ...
I0403 15:36:42.598494    2883 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0403 15:36:42.607395    2883 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0403 15:36:43.098295    2883 api_server.go:166] Checking apiserver status ...
I0403 15:36:43.098568    2883 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0403 15:36:43.107126    2883 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0403 15:36:43.598275    2883 api_server.go:166] Checking apiserver status ...
I0403 15:36:43.598446    2883 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0403 15:36:43.606899    2883 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0403 15:36:44.098228    2883 api_server.go:166] Checking apiserver status ...
I0403 15:36:44.098429    2883 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0403 15:36:44.106404    2883 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0403 15:36:44.598190    2883 api_server.go:166] Checking apiserver status ...
I0403 15:36:44.598309    2883 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0403 15:36:44.606219    2883 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0403 15:36:45.098317    2883 api_server.go:166] Checking apiserver status ...
I0403 15:36:45.098473    2883 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0403 15:36:45.105553    2883 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0403 15:36:45.597837    2883 api_server.go:166] Checking apiserver status ...
I0403 15:36:45.597952    2883 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0403 15:36:45.612100    2883 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0403 15:36:46.098208    2883 api_server.go:166] Checking apiserver status ...
I0403 15:36:46.098330    2883 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0403 15:36:46.112256    2883 ssh_runner.go:195] Run: sudo egrep ^[0-9]+:freezer: /proc/81433/cgroup
I0403 15:36:46.123388    2883 api_server.go:182] apiserver freezer: "6:freezer:/kubepods/burstable/pod842672fed952e0ab68deac178344590a/359e5ce85b6334a6ed5d1731cbb95acfc182af5336b494594d292b77b9c41928"
I0403 15:36:46.123576    2883 ssh_runner.go:195] Run: sudo cat /sys/fs/cgroup/freezer/kubepods/burstable/pod842672fed952e0ab68deac178344590a/359e5ce85b6334a6ed5d1731cbb95acfc182af5336b494594d292b77b9c41928/freezer.state
I0403 15:36:46.129193    2883 api_server.go:204] freezer state: "THAWED"
I0403 15:36:46.129206    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:36:51.130013    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:36:51.130068    2883 retry.go:31] will retry after 200.652342ms: state is "Stopped"
I0403 15:36:51.331669    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:36:56.333022    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:36:56.333049    2883 retry.go:31] will retry after 288.204826ms: state is "Stopped"
I0403 15:36:56.622302    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:37:01.623545    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:37:01.623566    2883 kubeadm.go:611] needs reconfigure: apiserver error: context deadline exceeded
I0403 15:37:01.623573    2883 kubeadm.go:1128] stopping kube-system containers ...
I0403 15:37:01.623665    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0403 15:37:01.634121    2883 docker.go:469] Stopping containers: [62fc41ad1270 7760f7aed06d 83fd7afc80b2 0536a7df6c85 9055b4f68636 97226e36242b d7a89c2bc54b 359e5ce85b63 ecc60eb7282f 4a193a621bde ebaccde8eaa7 c82a34ec2090 d8a8be14132e 673ba312b0d8 f2550af15236 06ee16a74663 3ee067d931a1 b2872826cb3c 29e7a4ee689f 63e31540577e 4d67a6a39d24 215a94c751d3 054d1e67a5ba 94e8cbffeac4 79831e78f72e e45c5240f10c b7a9f170c9d4 648c0d063eaf c57330e40614 799f99b49b26 ef578b4e20e7 6061b84161ba]
I0403 15:37:01.634169    2883 ssh_runner.go:195] Run: docker stop 62fc41ad1270 7760f7aed06d 83fd7afc80b2 0536a7df6c85 9055b4f68636 97226e36242b d7a89c2bc54b 359e5ce85b63 ecc60eb7282f 4a193a621bde ebaccde8eaa7 c82a34ec2090 d8a8be14132e 673ba312b0d8 f2550af15236 06ee16a74663 3ee067d931a1 b2872826cb3c 29e7a4ee689f 63e31540577e 4d67a6a39d24 215a94c751d3 054d1e67a5ba 94e8cbffeac4 79831e78f72e e45c5240f10c b7a9f170c9d4 648c0d063eaf c57330e40614 799f99b49b26 ef578b4e20e7 6061b84161ba
I0403 15:37:06.754264    2883 ssh_runner.go:235] Completed: docker stop 62fc41ad1270 7760f7aed06d 83fd7afc80b2 0536a7df6c85 9055b4f68636 97226e36242b d7a89c2bc54b 359e5ce85b63 ecc60eb7282f 4a193a621bde ebaccde8eaa7 c82a34ec2090 d8a8be14132e 673ba312b0d8 f2550af15236 06ee16a74663 3ee067d931a1 b2872826cb3c 29e7a4ee689f 63e31540577e 4d67a6a39d24 215a94c751d3 054d1e67a5ba 94e8cbffeac4 79831e78f72e e45c5240f10c b7a9f170c9d4 648c0d063eaf c57330e40614 799f99b49b26 ef578b4e20e7 6061b84161ba: (5.120060125s)
I0403 15:37:06.755046    2883 ssh_runner.go:195] Run: sudo systemctl stop kubelet
I0403 15:37:06.864373    2883 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0403 15:37:06.869214    2883 kubeadm.go:155] found existing configuration files:
-rw------- 1 root root 5639 Apr  3 19:28 /etc/kubernetes/admin.conf
-rw------- 1 root root 5649 Apr  3 19:28 /etc/kubernetes/controller-manager.conf
-rw------- 1 root root 1971 Apr  3 19:29 /etc/kubernetes/kubelet.conf
-rw------- 1 root root 5601 Apr  3 19:28 /etc/kubernetes/scheduler.conf

I0403 15:37:06.869274    2883 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf
I0403 15:37:06.873992    2883 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf
I0403 15:37:06.881428    2883 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf
I0403 15:37:06.885755    2883 kubeadm.go:166] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/controller-manager.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf: Process exited with status 1
stdout:

stderr:
I0403 15:37:06.885788    2883 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/controller-manager.conf
I0403 15:37:06.890346    2883 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf
I0403 15:37:06.893956    2883 kubeadm.go:166] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/scheduler.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf: Process exited with status 1
stdout:

stderr:
I0403 15:37:06.894018    2883 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/scheduler.conf
I0403 15:37:06.897919    2883 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0403 15:37:06.902097    2883 kubeadm.go:713] reconfiguring cluster from /var/tmp/minikube/kubeadm.yaml
I0403 15:37:06.902100    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init phase certs all --config /var/tmp/minikube/kubeadm.yaml"
I0403 15:37:06.944170    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init phase kubeconfig all --config /var/tmp/minikube/kubeadm.yaml"
I0403 15:37:07.902094    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init phase kubelet-start --config /var/tmp/minikube/kubeadm.yaml"
I0403 15:37:08.045944    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init phase control-plane all --config /var/tmp/minikube/kubeadm.yaml"
I0403 15:37:08.083616    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init phase etcd local --config /var/tmp/minikube/kubeadm.yaml"
I0403 15:37:08.128840    2883 api_server.go:52] waiting for apiserver process to appear ...
I0403 15:37:08.128949    2883 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0403 15:37:08.138862    2883 api_server.go:72] duration metric: took 10.0255ms to wait for apiserver process to appear ...
I0403 15:37:08.138867    2883 api_server.go:88] waiting for apiserver healthz status ...
I0403 15:37:08.138872    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:37:13.140691    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": dial tcp 10.0.2.15:8443: i/o timeout (Client.Timeout exceeded while awaiting headers)
I0403 15:37:13.140723    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:37:18.141754    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:37:18.642916    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:37:23.643440    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:37:23.643463    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:37:28.643940    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:37:28.643954    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:37:33.644414    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:37:33.644447    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:37:38.645039    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:37:38.645392    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:37:43.645840    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:37:43.645865    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:37:48.646470    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:37:48.646487    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:37:53.646800    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:37:53.646811    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:37:58.647585    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:37:58.647617    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:38:03.648061    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:38:03.648083    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:38:08.649098    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:38:08.649198    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:38:08.658417    2883 logs.go:284] 2 containers: [14caac7d67b1 2f77f96d6667]
I0403 15:38:08.658487    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:38:08.666224    2883 logs.go:284] 2 containers: [b924a1708183 d7a89c2bc54b]
I0403 15:38:08.666280    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:38:08.673001    2883 logs.go:284] 4 containers: [cd07d4a273ba 8f2060347218 7760f7aed06d 83fd7afc80b2]
I0403 15:38:08.673051    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:38:08.680218    2883 logs.go:284] 2 containers: [bc6cd12c51a6 0536a7df6c85]
I0403 15:38:08.680244    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:38:08.687262    2883 logs.go:284] 2 containers: [91d639e0bd94 97226e36242b]
I0403 15:38:08.687292    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:38:08.694758    2883 logs.go:284] 2 containers: [e87664bdd7db 9055b4f68636]
I0403 15:38:08.694857    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:38:08.701584    2883 logs.go:284] 0 containers: []
W0403 15:38:08.701590    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:38:08.701655    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:38:08.711754    2883 logs.go:284] 2 containers: [5f5a3a10483d 62fc41ad1270]
I0403 15:38:08.711776    2883 logs.go:123] Gathering logs for etcd [d7a89c2bc54b] ...
I0403 15:38:08.711781    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d7a89c2bc54b"
I0403 15:38:08.727234    2883 logs.go:123] Gathering logs for kube-scheduler [0536a7df6c85] ...
I0403 15:38:08.727237    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0536a7df6c85"
I0403 15:38:08.737475    2883 logs.go:123] Gathering logs for kube-apiserver [14caac7d67b1] ...
I0403 15:38:08.737480    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 14caac7d67b1"
I0403 15:38:08.750787    2883 logs.go:123] Gathering logs for kube-apiserver [2f77f96d6667] ...
I0403 15:38:08.750793    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2f77f96d6667"
I0403 15:38:08.761467    2883 logs.go:123] Gathering logs for coredns [8f2060347218] ...
I0403 15:38:08.761470    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8f2060347218"
I0403 15:38:08.774513    2883 logs.go:123] Gathering logs for coredns [7760f7aed06d] ...
I0403 15:38:08.774516    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7760f7aed06d"
I0403 15:38:08.783925    2883 logs.go:123] Gathering logs for kube-proxy [91d639e0bd94] ...
I0403 15:38:08.783937    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 91d639e0bd94"
I0403 15:38:08.800382    2883 logs.go:123] Gathering logs for kube-proxy [97226e36242b] ...
I0403 15:38:08.800385    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 97226e36242b"
I0403 15:38:08.812533    2883 logs.go:123] Gathering logs for container status ...
I0403 15:38:08.812536    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:38:08.841935    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:38:08.841943    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:38:08.884734    2883 logs.go:123] Gathering logs for etcd [b924a1708183] ...
I0403 15:38:08.884738    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b924a1708183"
I0403 15:38:08.895702    2883 logs.go:123] Gathering logs for kube-scheduler [bc6cd12c51a6] ...
I0403 15:38:08.895705    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 bc6cd12c51a6"
I0403 15:38:08.904904    2883 logs.go:123] Gathering logs for kube-controller-manager [e87664bdd7db] ...
I0403 15:38:08.904908    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e87664bdd7db"
I0403 15:38:08.919599    2883 logs.go:123] Gathering logs for kube-controller-manager [9055b4f68636] ...
I0403 15:38:08.919602    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 9055b4f68636"
I0403 15:38:08.933645    2883 logs.go:123] Gathering logs for storage-provisioner [5f5a3a10483d] ...
I0403 15:38:08.933648    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 5f5a3a10483d"
I0403 15:38:08.944423    2883 logs.go:123] Gathering logs for storage-provisioner [62fc41ad1270] ...
I0403 15:38:08.944428    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 62fc41ad1270"
I0403 15:38:08.953648    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:38:08.953663    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:38:08.989935    2883 logs.go:123] Gathering logs for coredns [cd07d4a273ba] ...
I0403 15:38:08.989938    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 cd07d4a273ba"
I0403 15:38:08.998116    2883 logs.go:123] Gathering logs for coredns [83fd7afc80b2] ...
I0403 15:38:08.998119    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 83fd7afc80b2"
I0403 15:38:09.007661    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:38:09.007668    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:38:09.014065    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:38:09.014068    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:38:11.577332    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:38:16.578306    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:38:16.578403    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:38:16.586261    2883 logs.go:284] 2 containers: [14caac7d67b1 2f77f96d6667]
I0403 15:38:16.586316    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:38:16.594321    2883 logs.go:284] 2 containers: [b924a1708183 d7a89c2bc54b]
I0403 15:38:16.594347    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:38:16.602011    2883 logs.go:284] 4 containers: [cd07d4a273ba 8f2060347218 7760f7aed06d 83fd7afc80b2]
I0403 15:38:16.602085    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:38:16.608933    2883 logs.go:284] 2 containers: [bc6cd12c51a6 0536a7df6c85]
I0403 15:38:16.608966    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:38:16.618416    2883 logs.go:284] 2 containers: [91d639e0bd94 97226e36242b]
I0403 15:38:16.618514    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:38:16.626445    2883 logs.go:284] 2 containers: [e87664bdd7db 9055b4f68636]
I0403 15:38:16.626530    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:38:16.633035    2883 logs.go:284] 0 containers: []
W0403 15:38:16.633039    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:38:16.633100    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:38:16.641761    2883 logs.go:284] 2 containers: [5f5a3a10483d 62fc41ad1270]
I0403 15:38:16.641771    2883 logs.go:123] Gathering logs for kube-controller-manager [9055b4f68636] ...
I0403 15:38:16.641775    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 9055b4f68636"
I0403 15:38:16.660873    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:38:16.660877    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:38:16.689623    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:38:16.689627    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:38:16.696690    2883 logs.go:123] Gathering logs for coredns [cd07d4a273ba] ...
I0403 15:38:16.696694    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 cd07d4a273ba"
I0403 15:38:16.707865    2883 logs.go:123] Gathering logs for coredns [8f2060347218] ...
I0403 15:38:16.707873    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8f2060347218"
I0403 15:38:16.717449    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:38:16.717455    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:38:16.772300    2883 logs.go:123] Gathering logs for kube-apiserver [14caac7d67b1] ...
I0403 15:38:16.772308    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 14caac7d67b1"
I0403 15:38:16.789148    2883 logs.go:123] Gathering logs for coredns [7760f7aed06d] ...
I0403 15:38:16.789154    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7760f7aed06d"
I0403 15:38:16.797076    2883 logs.go:123] Gathering logs for coredns [83fd7afc80b2] ...
I0403 15:38:16.797078    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 83fd7afc80b2"
I0403 15:38:16.804864    2883 logs.go:123] Gathering logs for kube-proxy [97226e36242b] ...
I0403 15:38:16.804868    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 97226e36242b"
I0403 15:38:16.815490    2883 logs.go:123] Gathering logs for storage-provisioner [5f5a3a10483d] ...
I0403 15:38:16.815495    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 5f5a3a10483d"
I0403 15:38:16.827674    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:38:16.827681    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:38:16.875424    2883 logs.go:123] Gathering logs for etcd [b924a1708183] ...
I0403 15:38:16.875428    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b924a1708183"
I0403 15:38:16.886797    2883 logs.go:123] Gathering logs for etcd [d7a89c2bc54b] ...
I0403 15:38:16.886801    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d7a89c2bc54b"
I0403 15:38:16.898327    2883 logs.go:123] Gathering logs for kube-scheduler [bc6cd12c51a6] ...
I0403 15:38:16.898331    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 bc6cd12c51a6"
I0403 15:38:16.906875    2883 logs.go:123] Gathering logs for kube-scheduler [0536a7df6c85] ...
I0403 15:38:16.906879    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0536a7df6c85"
I0403 15:38:16.915470    2883 logs.go:123] Gathering logs for kube-proxy [91d639e0bd94] ...
I0403 15:38:16.915474    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 91d639e0bd94"
I0403 15:38:16.926034    2883 logs.go:123] Gathering logs for kube-controller-manager [e87664bdd7db] ...
I0403 15:38:16.926041    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e87664bdd7db"
I0403 15:38:16.942274    2883 logs.go:123] Gathering logs for storage-provisioner [62fc41ad1270] ...
I0403 15:38:16.942278    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 62fc41ad1270"
I0403 15:38:16.950135    2883 logs.go:123] Gathering logs for kube-apiserver [2f77f96d6667] ...
I0403 15:38:16.950149    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2f77f96d6667"
I0403 15:38:16.961620    2883 logs.go:123] Gathering logs for container status ...
I0403 15:38:16.961623    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:38:19.494903    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:38:24.496202    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:38:24.496315    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:38:24.506020    2883 logs.go:284] 2 containers: [14caac7d67b1 2f77f96d6667]
I0403 15:38:24.506068    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:38:24.522604    2883 logs.go:284] 2 containers: [b924a1708183 d7a89c2bc54b]
I0403 15:38:24.522740    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:38:24.530395    2883 logs.go:284] 4 containers: [cd07d4a273ba 8f2060347218 7760f7aed06d 83fd7afc80b2]
I0403 15:38:24.530426    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:38:24.546078    2883 logs.go:284] 2 containers: [bc6cd12c51a6 0536a7df6c85]
I0403 15:38:24.546102    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:38:24.554130    2883 logs.go:284] 2 containers: [91d639e0bd94 97226e36242b]
I0403 15:38:24.554150    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:38:24.566148    2883 logs.go:284] 2 containers: [e87664bdd7db 9055b4f68636]
I0403 15:38:24.566224    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:38:24.572996    2883 logs.go:284] 0 containers: []
W0403 15:38:24.572999    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:38:24.573016    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:38:24.579354    2883 logs.go:284] 2 containers: [5f5a3a10483d 62fc41ad1270]
I0403 15:38:24.579371    2883 logs.go:123] Gathering logs for container status ...
I0403 15:38:24.579375    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:38:24.608822    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:38:24.608839    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:38:24.650317    2883 logs.go:123] Gathering logs for etcd [d7a89c2bc54b] ...
I0403 15:38:24.650321    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d7a89c2bc54b"
I0403 15:38:24.661580    2883 logs.go:123] Gathering logs for kube-proxy [91d639e0bd94] ...
I0403 15:38:24.661587    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 91d639e0bd94"
I0403 15:38:24.670601    2883 logs.go:123] Gathering logs for kube-proxy [97226e36242b] ...
I0403 15:38:24.670603    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 97226e36242b"
I0403 15:38:24.679232    2883 logs.go:123] Gathering logs for kube-controller-manager [e87664bdd7db] ...
I0403 15:38:24.679235    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e87664bdd7db"
I0403 15:38:24.698761    2883 logs.go:123] Gathering logs for kube-controller-manager [9055b4f68636] ...
I0403 15:38:24.698769    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 9055b4f68636"
I0403 15:38:24.715097    2883 logs.go:123] Gathering logs for storage-provisioner [5f5a3a10483d] ...
I0403 15:38:24.715100    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 5f5a3a10483d"
I0403 15:38:24.723444    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:38:24.723452    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:38:24.730339    2883 logs.go:123] Gathering logs for coredns [cd07d4a273ba] ...
I0403 15:38:24.730341    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 cd07d4a273ba"
I0403 15:38:24.738361    2883 logs.go:123] Gathering logs for coredns [7760f7aed06d] ...
I0403 15:38:24.738364    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7760f7aed06d"
I0403 15:38:24.746036    2883 logs.go:123] Gathering logs for coredns [83fd7afc80b2] ...
I0403 15:38:24.746039    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 83fd7afc80b2"
I0403 15:38:24.754469    2883 logs.go:123] Gathering logs for storage-provisioner [62fc41ad1270] ...
I0403 15:38:24.754472    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 62fc41ad1270"
I0403 15:38:24.762408    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:38:24.762412    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:38:24.793240    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:38:24.793252    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:38:24.847267    2883 logs.go:123] Gathering logs for kube-apiserver [14caac7d67b1] ...
I0403 15:38:24.847274    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 14caac7d67b1"
I0403 15:38:24.860130    2883 logs.go:123] Gathering logs for kube-apiserver [2f77f96d6667] ...
I0403 15:38:24.860133    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2f77f96d6667"
I0403 15:38:24.871537    2883 logs.go:123] Gathering logs for etcd [b924a1708183] ...
I0403 15:38:24.871541    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b924a1708183"
I0403 15:38:24.883573    2883 logs.go:123] Gathering logs for coredns [8f2060347218] ...
I0403 15:38:24.883575    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8f2060347218"
I0403 15:38:24.896111    2883 logs.go:123] Gathering logs for kube-scheduler [bc6cd12c51a6] ...
I0403 15:38:24.896114    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 bc6cd12c51a6"
I0403 15:38:24.905901    2883 logs.go:123] Gathering logs for kube-scheduler [0536a7df6c85] ...
I0403 15:38:24.905907    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0536a7df6c85"
I0403 15:38:27.415905    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:38:32.417250    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:38:32.417457    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:38:32.425181    2883 logs.go:284] 2 containers: [14caac7d67b1 2f77f96d6667]
I0403 15:38:32.425266    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:38:32.432008    2883 logs.go:284] 2 containers: [b924a1708183 d7a89c2bc54b]
I0403 15:38:32.432065    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:38:32.439877    2883 logs.go:284] 4 containers: [cd07d4a273ba 8f2060347218 7760f7aed06d 83fd7afc80b2]
I0403 15:38:32.439938    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:38:32.447593    2883 logs.go:284] 2 containers: [bc6cd12c51a6 0536a7df6c85]
I0403 15:38:32.447622    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:38:32.458794    2883 logs.go:284] 2 containers: [91d639e0bd94 97226e36242b]
I0403 15:38:32.458872    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:38:32.466084    2883 logs.go:284] 2 containers: [e87664bdd7db 9055b4f68636]
I0403 15:38:32.466104    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:38:32.473625    2883 logs.go:284] 0 containers: []
W0403 15:38:32.473634    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:38:32.473741    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:38:32.481305    2883 logs.go:284] 2 containers: [5f5a3a10483d 62fc41ad1270]
I0403 15:38:32.481315    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:38:32.481319    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:38:32.533647    2883 logs.go:123] Gathering logs for coredns [cd07d4a273ba] ...
I0403 15:38:32.533651    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 cd07d4a273ba"
I0403 15:38:32.542829    2883 logs.go:123] Gathering logs for coredns [83fd7afc80b2] ...
I0403 15:38:32.542865    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 83fd7afc80b2"
I0403 15:38:32.550313    2883 logs.go:123] Gathering logs for kube-controller-manager [9055b4f68636] ...
I0403 15:38:32.550316    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 9055b4f68636"
I0403 15:38:32.567196    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:38:32.567199    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:38:32.600031    2883 logs.go:123] Gathering logs for kube-apiserver [2f77f96d6667] ...
I0403 15:38:32.600040    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2f77f96d6667"
I0403 15:38:32.610852    2883 logs.go:123] Gathering logs for coredns [8f2060347218] ...
I0403 15:38:32.610856    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8f2060347218"
I0403 15:38:32.619204    2883 logs.go:123] Gathering logs for kube-controller-manager [e87664bdd7db] ...
I0403 15:38:32.619211    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e87664bdd7db"
I0403 15:38:32.634844    2883 logs.go:123] Gathering logs for storage-provisioner [62fc41ad1270] ...
I0403 15:38:32.634848    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 62fc41ad1270"
I0403 15:38:32.644193    2883 logs.go:123] Gathering logs for storage-provisioner [5f5a3a10483d] ...
I0403 15:38:32.644195    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 5f5a3a10483d"
I0403 15:38:32.653000    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:38:32.653006    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:38:32.659920    2883 logs.go:123] Gathering logs for etcd [b924a1708183] ...
I0403 15:38:32.659924    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b924a1708183"
I0403 15:38:32.671939    2883 logs.go:123] Gathering logs for etcd [d7a89c2bc54b] ...
I0403 15:38:32.671943    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d7a89c2bc54b"
I0403 15:38:32.689576    2883 logs.go:123] Gathering logs for kube-scheduler [bc6cd12c51a6] ...
I0403 15:38:32.689583    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 bc6cd12c51a6"
I0403 15:38:32.699265    2883 logs.go:123] Gathering logs for kube-scheduler [0536a7df6c85] ...
I0403 15:38:32.699273    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0536a7df6c85"
I0403 15:38:32.719161    2883 logs.go:123] Gathering logs for kube-proxy [91d639e0bd94] ...
I0403 15:38:32.719165    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 91d639e0bd94"
I0403 15:38:32.731138    2883 logs.go:123] Gathering logs for kube-proxy [97226e36242b] ...
I0403 15:38:32.731142    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 97226e36242b"
I0403 15:38:32.739698    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:38:32.739702    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:38:32.787129    2883 logs.go:123] Gathering logs for kube-apiserver [14caac7d67b1] ...
I0403 15:38:32.787149    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 14caac7d67b1"
I0403 15:38:32.799617    2883 logs.go:123] Gathering logs for coredns [7760f7aed06d] ...
I0403 15:38:32.799621    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7760f7aed06d"
I0403 15:38:32.808539    2883 logs.go:123] Gathering logs for container status ...
I0403 15:38:32.808542    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:38:35.336519    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:38:40.337742    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:38:40.337867    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:38:40.349204    2883 logs.go:284] 2 containers: [14caac7d67b1 2f77f96d6667]
I0403 15:38:40.349276    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:38:40.359029    2883 logs.go:284] 2 containers: [b924a1708183 d7a89c2bc54b]
I0403 15:38:40.359062    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:38:40.366449    2883 logs.go:284] 4 containers: [cd07d4a273ba 8f2060347218 7760f7aed06d 83fd7afc80b2]
I0403 15:38:40.366476    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:38:40.381164    2883 logs.go:284] 2 containers: [bc6cd12c51a6 0536a7df6c85]
I0403 15:38:40.381189    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:38:40.388679    2883 logs.go:284] 2 containers: [91d639e0bd94 97226e36242b]
I0403 15:38:40.388700    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:38:40.396011    2883 logs.go:284] 2 containers: [e87664bdd7db 9055b4f68636]
I0403 15:38:40.396095    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:38:40.407038    2883 logs.go:284] 0 containers: []
W0403 15:38:40.407041    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:38:40.407059    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:38:40.414577    2883 logs.go:284] 2 containers: [5f5a3a10483d 62fc41ad1270]
I0403 15:38:40.414587    2883 logs.go:123] Gathering logs for etcd [d7a89c2bc54b] ...
I0403 15:38:40.414591    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d7a89c2bc54b"
I0403 15:38:40.430615    2883 logs.go:123] Gathering logs for coredns [7760f7aed06d] ...
I0403 15:38:40.430617    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7760f7aed06d"
I0403 15:38:40.438703    2883 logs.go:123] Gathering logs for kube-scheduler [bc6cd12c51a6] ...
I0403 15:38:40.438706    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 bc6cd12c51a6"
I0403 15:38:40.446819    2883 logs.go:123] Gathering logs for storage-provisioner [5f5a3a10483d] ...
I0403 15:38:40.446822    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 5f5a3a10483d"
I0403 15:38:40.456254    2883 logs.go:123] Gathering logs for storage-provisioner [62fc41ad1270] ...
I0403 15:38:40.456259    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 62fc41ad1270"
I0403 15:38:40.465181    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:38:40.465192    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:38:40.496407    2883 logs.go:123] Gathering logs for container status ...
I0403 15:38:40.496411    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:38:40.524272    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:38:40.524276    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:38:40.531150    2883 logs.go:123] Gathering logs for kube-controller-manager [9055b4f68636] ...
I0403 15:38:40.531152    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 9055b4f68636"
I0403 15:38:40.546464    2883 logs.go:123] Gathering logs for kube-proxy [97226e36242b] ...
I0403 15:38:40.546474    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 97226e36242b"
I0403 15:38:40.558119    2883 logs.go:123] Gathering logs for etcd [b924a1708183] ...
I0403 15:38:40.558126    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b924a1708183"
I0403 15:38:40.569328    2883 logs.go:123] Gathering logs for coredns [cd07d4a273ba] ...
I0403 15:38:40.569334    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 cd07d4a273ba"
I0403 15:38:40.577902    2883 logs.go:123] Gathering logs for coredns [83fd7afc80b2] ...
I0403 15:38:40.577906    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 83fd7afc80b2"
I0403 15:38:40.586435    2883 logs.go:123] Gathering logs for kube-scheduler [0536a7df6c85] ...
I0403 15:38:40.586437    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0536a7df6c85"
I0403 15:38:40.594832    2883 logs.go:123] Gathering logs for kube-proxy [91d639e0bd94] ...
I0403 15:38:40.594834    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 91d639e0bd94"
I0403 15:38:40.602601    2883 logs.go:123] Gathering logs for kube-apiserver [14caac7d67b1] ...
I0403 15:38:40.602604    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 14caac7d67b1"
I0403 15:38:40.614517    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:38:40.614519    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:38:40.667810    2883 logs.go:123] Gathering logs for kube-apiserver [2f77f96d6667] ...
I0403 15:38:40.667815    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2f77f96d6667"
I0403 15:38:40.679462    2883 logs.go:123] Gathering logs for coredns [8f2060347218] ...
I0403 15:38:40.679465    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8f2060347218"
I0403 15:38:40.693568    2883 logs.go:123] Gathering logs for kube-controller-manager [e87664bdd7db] ...
I0403 15:38:40.693585    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e87664bdd7db"
I0403 15:38:40.711689    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:38:40.711692    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:38:43.259089    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:38:48.260434    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:38:48.260531    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:38:48.268981    2883 logs.go:284] 2 containers: [14caac7d67b1 2f77f96d6667]
I0403 15:38:48.269036    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:38:48.280529    2883 logs.go:284] 2 containers: [b924a1708183 d7a89c2bc54b]
I0403 15:38:48.280579    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:38:48.291967    2883 logs.go:284] 4 containers: [cd07d4a273ba 8f2060347218 7760f7aed06d 83fd7afc80b2]
I0403 15:38:48.292009    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:38:48.304388    2883 logs.go:284] 2 containers: [bc6cd12c51a6 0536a7df6c85]
I0403 15:38:48.304414    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:38:48.312197    2883 logs.go:284] 2 containers: [91d639e0bd94 97226e36242b]
I0403 15:38:48.312219    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:38:48.319428    2883 logs.go:284] 2 containers: [e87664bdd7db 9055b4f68636]
I0403 15:38:48.319457    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:38:48.328353    2883 logs.go:284] 0 containers: []
W0403 15:38:48.328357    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:38:48.328385    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:38:48.336597    2883 logs.go:284] 2 containers: [5f5a3a10483d 62fc41ad1270]
I0403 15:38:48.336605    2883 logs.go:123] Gathering logs for container status ...
I0403 15:38:48.336610    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:38:48.363540    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:38:48.363545    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:38:48.410707    2883 logs.go:123] Gathering logs for coredns [8f2060347218] ...
I0403 15:38:48.410714    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8f2060347218"
I0403 15:38:48.419780    2883 logs.go:123] Gathering logs for kube-scheduler [bc6cd12c51a6] ...
I0403 15:38:48.419787    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 bc6cd12c51a6"
I0403 15:38:48.434155    2883 logs.go:123] Gathering logs for kube-controller-manager [e87664bdd7db] ...
I0403 15:38:48.434160    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e87664bdd7db"
I0403 15:38:48.452736    2883 logs.go:123] Gathering logs for storage-provisioner [62fc41ad1270] ...
I0403 15:38:48.452739    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 62fc41ad1270"
I0403 15:38:48.461201    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:38:48.461220    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:38:48.468147    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:38:48.468150    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:38:48.521989    2883 logs.go:123] Gathering logs for etcd [d7a89c2bc54b] ...
I0403 15:38:48.521991    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d7a89c2bc54b"
I0403 15:38:48.536190    2883 logs.go:123] Gathering logs for kube-controller-manager [9055b4f68636] ...
I0403 15:38:48.536195    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 9055b4f68636"
I0403 15:38:48.555544    2883 logs.go:123] Gathering logs for kube-proxy [97226e36242b] ...
I0403 15:38:48.555549    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 97226e36242b"
I0403 15:38:48.564392    2883 logs.go:123] Gathering logs for kube-apiserver [2f77f96d6667] ...
I0403 15:38:48.564394    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2f77f96d6667"
I0403 15:38:48.575277    2883 logs.go:123] Gathering logs for etcd [b924a1708183] ...
I0403 15:38:48.575280    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b924a1708183"
I0403 15:38:48.588071    2883 logs.go:123] Gathering logs for coredns [7760f7aed06d] ...
I0403 15:38:48.588073    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7760f7aed06d"
I0403 15:38:48.598592    2883 logs.go:123] Gathering logs for kube-proxy [91d639e0bd94] ...
I0403 15:38:48.598594    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 91d639e0bd94"
I0403 15:38:48.606780    2883 logs.go:123] Gathering logs for storage-provisioner [5f5a3a10483d] ...
I0403 15:38:48.606783    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 5f5a3a10483d"
I0403 15:38:48.614199    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:38:48.614202    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:38:48.646849    2883 logs.go:123] Gathering logs for kube-apiserver [14caac7d67b1] ...
I0403 15:38:48.646852    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 14caac7d67b1"
I0403 15:38:48.657975    2883 logs.go:123] Gathering logs for coredns [cd07d4a273ba] ...
I0403 15:38:48.657978    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 cd07d4a273ba"
I0403 15:38:48.675856    2883 logs.go:123] Gathering logs for coredns [83fd7afc80b2] ...
I0403 15:38:48.675860    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 83fd7afc80b2"
I0403 15:38:48.686569    2883 logs.go:123] Gathering logs for kube-scheduler [0536a7df6c85] ...
I0403 15:38:48.686572    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0536a7df6c85"
I0403 15:38:51.198738    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:38:56.199934    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:38:56.200057    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:38:56.208415    2883 logs.go:284] 2 containers: [14caac7d67b1 2f77f96d6667]
I0403 15:38:56.208478    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:38:56.217268    2883 logs.go:284] 2 containers: [b924a1708183 d7a89c2bc54b]
I0403 15:38:56.217295    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:38:56.232188    2883 logs.go:284] 4 containers: [cd07d4a273ba 8f2060347218 7760f7aed06d 83fd7afc80b2]
I0403 15:38:56.232268    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:38:56.239597    2883 logs.go:284] 2 containers: [bc6cd12c51a6 0536a7df6c85]
I0403 15:38:56.239661    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:38:56.247210    2883 logs.go:284] 2 containers: [91d639e0bd94 97226e36242b]
I0403 15:38:56.247238    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:38:56.254728    2883 logs.go:284] 2 containers: [e87664bdd7db 9055b4f68636]
I0403 15:38:56.254825    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:38:56.261795    2883 logs.go:284] 0 containers: []
W0403 15:38:56.261800    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:38:56.261861    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:38:56.269315    2883 logs.go:284] 2 containers: [5f5a3a10483d 62fc41ad1270]
I0403 15:38:56.269330    2883 logs.go:123] Gathering logs for kube-controller-manager [e87664bdd7db] ...
I0403 15:38:56.269332    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e87664bdd7db"
I0403 15:38:56.283755    2883 logs.go:123] Gathering logs for storage-provisioner [62fc41ad1270] ...
I0403 15:38:56.283758    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 62fc41ad1270"
I0403 15:38:56.291956    2883 logs.go:123] Gathering logs for kube-apiserver [14caac7d67b1] ...
I0403 15:38:56.291965    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 14caac7d67b1"
I0403 15:38:56.304171    2883 logs.go:123] Gathering logs for kube-apiserver [2f77f96d6667] ...
I0403 15:38:56.304177    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2f77f96d6667"
I0403 15:38:56.315978    2883 logs.go:123] Gathering logs for etcd [b924a1708183] ...
I0403 15:38:56.315984    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b924a1708183"
I0403 15:38:56.326535    2883 logs.go:123] Gathering logs for coredns [cd07d4a273ba] ...
I0403 15:38:56.326539    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 cd07d4a273ba"
I0403 15:38:56.335082    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:38:56.335090    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:38:56.379327    2883 logs.go:123] Gathering logs for coredns [8f2060347218] ...
I0403 15:38:56.379332    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8f2060347218"
I0403 15:38:56.387556    2883 logs.go:123] Gathering logs for coredns [7760f7aed06d] ...
I0403 15:38:56.387559    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7760f7aed06d"
I0403 15:38:56.396056    2883 logs.go:123] Gathering logs for kube-proxy [91d639e0bd94] ...
I0403 15:38:56.396060    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 91d639e0bd94"
I0403 15:38:56.405256    2883 logs.go:123] Gathering logs for kube-proxy [97226e36242b] ...
I0403 15:38:56.405259    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 97226e36242b"
I0403 15:38:56.414109    2883 logs.go:123] Gathering logs for storage-provisioner [5f5a3a10483d] ...
I0403 15:38:56.414114    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 5f5a3a10483d"
I0403 15:38:56.424178    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:38:56.424186    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:38:56.456772    2883 logs.go:123] Gathering logs for container status ...
I0403 15:38:56.456776    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:38:56.483263    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:38:56.483268    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:38:56.539838    2883 logs.go:123] Gathering logs for etcd [d7a89c2bc54b] ...
I0403 15:38:56.539844    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d7a89c2bc54b"
I0403 15:38:56.556629    2883 logs.go:123] Gathering logs for coredns [83fd7afc80b2] ...
I0403 15:38:56.556633    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 83fd7afc80b2"
I0403 15:38:56.564924    2883 logs.go:123] Gathering logs for kube-scheduler [bc6cd12c51a6] ...
I0403 15:38:56.564936    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 bc6cd12c51a6"
I0403 15:38:56.577148    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:38:56.577152    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:38:56.584188    2883 logs.go:123] Gathering logs for kube-scheduler [0536a7df6c85] ...
I0403 15:38:56.584191    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0536a7df6c85"
I0403 15:38:56.592098    2883 logs.go:123] Gathering logs for kube-controller-manager [9055b4f68636] ...
I0403 15:38:56.592101    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 9055b4f68636"
I0403 15:38:59.107025    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:39:04.108345    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:39:04.108507    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:39:04.116419    2883 logs.go:284] 2 containers: [14caac7d67b1 2f77f96d6667]
I0403 15:39:04.116484    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:39:04.123919    2883 logs.go:284] 2 containers: [b924a1708183 d7a89c2bc54b]
I0403 15:39:04.123988    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:39:04.133696    2883 logs.go:284] 4 containers: [cd07d4a273ba 8f2060347218 7760f7aed06d 83fd7afc80b2]
I0403 15:39:04.133735    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:39:04.140303    2883 logs.go:284] 2 containers: [bc6cd12c51a6 0536a7df6c85]
I0403 15:39:04.140323    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:39:04.147470    2883 logs.go:284] 2 containers: [91d639e0bd94 97226e36242b]
I0403 15:39:04.147550    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:39:04.160500    2883 logs.go:284] 2 containers: [e87664bdd7db 9055b4f68636]
I0403 15:39:04.160562    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:39:04.171904    2883 logs.go:284] 0 containers: []
W0403 15:39:04.171908    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:39:04.171936    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:39:04.179414    2883 logs.go:284] 2 containers: [5f5a3a10483d 62fc41ad1270]
I0403 15:39:04.179420    2883 logs.go:123] Gathering logs for storage-provisioner [5f5a3a10483d] ...
I0403 15:39:04.179422    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 5f5a3a10483d"
I0403 15:39:04.187646    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:39:04.187651    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:39:04.218739    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:39:04.218773    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:39:04.265415    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:39:04.265419    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:39:04.272064    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:39:04.272067    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:39:04.328552    2883 logs.go:123] Gathering logs for coredns [7760f7aed06d] ...
I0403 15:39:04.328562    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7760f7aed06d"
I0403 15:39:04.337236    2883 logs.go:123] Gathering logs for kube-apiserver [2f77f96d6667] ...
I0403 15:39:04.337239    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2f77f96d6667"
I0403 15:39:04.352871    2883 logs.go:123] Gathering logs for kube-scheduler [0536a7df6c85] ...
I0403 15:39:04.352875    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0536a7df6c85"
I0403 15:39:04.361356    2883 logs.go:123] Gathering logs for kube-controller-manager [e87664bdd7db] ...
I0403 15:39:04.361360    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e87664bdd7db"
I0403 15:39:04.374925    2883 logs.go:123] Gathering logs for storage-provisioner [62fc41ad1270] ...
I0403 15:39:04.374928    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 62fc41ad1270"
I0403 15:39:04.385419    2883 logs.go:123] Gathering logs for coredns [8f2060347218] ...
I0403 15:39:04.385423    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8f2060347218"
I0403 15:39:04.394278    2883 logs.go:123] Gathering logs for kube-scheduler [bc6cd12c51a6] ...
I0403 15:39:04.394282    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 bc6cd12c51a6"
I0403 15:39:04.402414    2883 logs.go:123] Gathering logs for kube-proxy [91d639e0bd94] ...
I0403 15:39:04.402417    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 91d639e0bd94"
I0403 15:39:04.411833    2883 logs.go:123] Gathering logs for kube-proxy [97226e36242b] ...
I0403 15:39:04.411836    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 97226e36242b"
I0403 15:39:04.419830    2883 logs.go:123] Gathering logs for coredns [83fd7afc80b2] ...
I0403 15:39:04.419833    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 83fd7afc80b2"
I0403 15:39:04.427350    2883 logs.go:123] Gathering logs for kube-controller-manager [9055b4f68636] ...
I0403 15:39:04.427354    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 9055b4f68636"
I0403 15:39:04.441385    2883 logs.go:123] Gathering logs for container status ...
I0403 15:39:04.441389    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:39:04.467610    2883 logs.go:123] Gathering logs for kube-apiserver [14caac7d67b1] ...
I0403 15:39:04.467613    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 14caac7d67b1"
I0403 15:39:04.479418    2883 logs.go:123] Gathering logs for etcd [b924a1708183] ...
I0403 15:39:04.479425    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b924a1708183"
I0403 15:39:04.494544    2883 logs.go:123] Gathering logs for etcd [d7a89c2bc54b] ...
I0403 15:39:04.494549    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d7a89c2bc54b"
I0403 15:39:04.508110    2883 logs.go:123] Gathering logs for coredns [cd07d4a273ba] ...
I0403 15:39:04.508118    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 cd07d4a273ba"
I0403 15:39:07.020772    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:39:12.021527    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:39:12.021626    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:39:12.029931    2883 logs.go:284] 2 containers: [14caac7d67b1 2f77f96d6667]
I0403 15:39:12.029990    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:39:12.037108    2883 logs.go:284] 2 containers: [b924a1708183 d7a89c2bc54b]
I0403 15:39:12.037128    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:39:12.048178    2883 logs.go:284] 4 containers: [cd07d4a273ba 8f2060347218 7760f7aed06d 83fd7afc80b2]
I0403 15:39:12.048251    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:39:12.055803    2883 logs.go:284] 2 containers: [bc6cd12c51a6 0536a7df6c85]
I0403 15:39:12.055828    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:39:12.064767    2883 logs.go:284] 2 containers: [91d639e0bd94 97226e36242b]
I0403 15:39:12.064807    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:39:12.073569    2883 logs.go:284] 2 containers: [e87664bdd7db 9055b4f68636]
I0403 15:39:12.073647    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:39:12.080363    2883 logs.go:284] 0 containers: []
W0403 15:39:12.080378    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:39:12.080431    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:39:12.093117    2883 logs.go:284] 2 containers: [5f5a3a10483d 62fc41ad1270]
I0403 15:39:12.093122    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:39:12.093125    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:39:12.099762    2883 logs.go:123] Gathering logs for coredns [83fd7afc80b2] ...
I0403 15:39:12.099765    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 83fd7afc80b2"
I0403 15:39:12.107769    2883 logs.go:123] Gathering logs for kube-proxy [97226e36242b] ...
I0403 15:39:12.107771    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 97226e36242b"
I0403 15:39:12.116367    2883 logs.go:123] Gathering logs for kube-controller-manager [e87664bdd7db] ...
I0403 15:39:12.116370    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e87664bdd7db"
I0403 15:39:12.134657    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:39:12.134663    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:39:12.162361    2883 logs.go:123] Gathering logs for kube-scheduler [0536a7df6c85] ...
I0403 15:39:12.162368    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0536a7df6c85"
I0403 15:39:12.171830    2883 logs.go:123] Gathering logs for storage-provisioner [62fc41ad1270] ...
I0403 15:39:12.171835    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 62fc41ad1270"
I0403 15:39:12.180909    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:39:12.180918    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:39:12.222552    2883 logs.go:123] Gathering logs for etcd [b924a1708183] ...
I0403 15:39:12.222561    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b924a1708183"
I0403 15:39:12.243484    2883 logs.go:123] Gathering logs for etcd [d7a89c2bc54b] ...
I0403 15:39:12.243489    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d7a89c2bc54b"
I0403 15:39:12.255442    2883 logs.go:123] Gathering logs for coredns [cd07d4a273ba] ...
I0403 15:39:12.255445    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 cd07d4a273ba"
I0403 15:39:12.265499    2883 logs.go:123] Gathering logs for coredns [8f2060347218] ...
I0403 15:39:12.265508    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8f2060347218"
I0403 15:39:12.274325    2883 logs.go:123] Gathering logs for storage-provisioner [5f5a3a10483d] ...
I0403 15:39:12.274330    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 5f5a3a10483d"
I0403 15:39:12.292386    2883 logs.go:123] Gathering logs for kube-apiserver [14caac7d67b1] ...
I0403 15:39:12.292390    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 14caac7d67b1"
I0403 15:39:12.303446    2883 logs.go:123] Gathering logs for coredns [7760f7aed06d] ...
I0403 15:39:12.303448    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7760f7aed06d"
I0403 15:39:12.312554    2883 logs.go:123] Gathering logs for kube-scheduler [bc6cd12c51a6] ...
I0403 15:39:12.312557    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 bc6cd12c51a6"
I0403 15:39:12.321939    2883 logs.go:123] Gathering logs for kube-proxy [91d639e0bd94] ...
I0403 15:39:12.321951    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 91d639e0bd94"
I0403 15:39:12.331136    2883 logs.go:123] Gathering logs for kube-controller-manager [9055b4f68636] ...
I0403 15:39:12.331139    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 9055b4f68636"
I0403 15:39:12.344698    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:39:12.344702    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:39:12.400585    2883 logs.go:123] Gathering logs for kube-apiserver [2f77f96d6667] ...
I0403 15:39:12.400591    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2f77f96d6667"
I0403 15:39:12.415790    2883 logs.go:123] Gathering logs for container status ...
I0403 15:39:12.415793    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:39:14.945428    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:39:19.946636    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:39:19.946780    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:39:19.954925    2883 logs.go:284] 2 containers: [14caac7d67b1 2f77f96d6667]
I0403 15:39:19.954977    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:39:19.966129    2883 logs.go:284] 2 containers: [b924a1708183 d7a89c2bc54b]
I0403 15:39:19.966154    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:39:19.973555    2883 logs.go:284] 4 containers: [cd07d4a273ba 8f2060347218 7760f7aed06d 83fd7afc80b2]
I0403 15:39:19.973621    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:39:19.981387    2883 logs.go:284] 2 containers: [bc6cd12c51a6 0536a7df6c85]
I0403 15:39:19.981416    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:39:19.988229    2883 logs.go:284] 2 containers: [91d639e0bd94 97226e36242b]
I0403 15:39:19.988248    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:39:19.994981    2883 logs.go:284] 2 containers: [e87664bdd7db 9055b4f68636]
I0403 15:39:19.995069    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:39:20.002608    2883 logs.go:284] 0 containers: []
W0403 15:39:20.002613    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:39:20.002672    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:39:20.009725    2883 logs.go:284] 2 containers: [5f5a3a10483d 62fc41ad1270]
I0403 15:39:20.009733    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:39:20.009736    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:39:20.053272    2883 logs.go:123] Gathering logs for kube-controller-manager [e87664bdd7db] ...
I0403 15:39:20.053283    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e87664bdd7db"
I0403 15:39:20.068447    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:39:20.068454    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:39:20.101814    2883 logs.go:123] Gathering logs for kube-apiserver [2f77f96d6667] ...
I0403 15:39:20.101826    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2f77f96d6667"
I0403 15:39:20.112496    2883 logs.go:123] Gathering logs for coredns [cd07d4a273ba] ...
I0403 15:39:20.112500    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 cd07d4a273ba"
I0403 15:39:20.120552    2883 logs.go:123] Gathering logs for kube-scheduler [bc6cd12c51a6] ...
I0403 15:39:20.120555    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 bc6cd12c51a6"
I0403 15:39:20.128317    2883 logs.go:123] Gathering logs for storage-provisioner [62fc41ad1270] ...
I0403 15:39:20.128319    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 62fc41ad1270"
I0403 15:39:20.137013    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:39:20.137016    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:39:20.144295    2883 logs.go:123] Gathering logs for kube-apiserver [14caac7d67b1] ...
I0403 15:39:20.144298    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 14caac7d67b1"
I0403 15:39:20.161778    2883 logs.go:123] Gathering logs for etcd [b924a1708183] ...
I0403 15:39:20.161781    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b924a1708183"
I0403 15:39:20.173718    2883 logs.go:123] Gathering logs for etcd [d7a89c2bc54b] ...
I0403 15:39:20.173721    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d7a89c2bc54b"
I0403 15:39:20.184387    2883 logs.go:123] Gathering logs for coredns [8f2060347218] ...
I0403 15:39:20.184390    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8f2060347218"
I0403 15:39:20.191968    2883 logs.go:123] Gathering logs for kube-scheduler [0536a7df6c85] ...
I0403 15:39:20.191970    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0536a7df6c85"
I0403 15:39:20.201209    2883 logs.go:123] Gathering logs for kube-proxy [91d639e0bd94] ...
I0403 15:39:20.201211    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 91d639e0bd94"
I0403 15:39:20.209395    2883 logs.go:123] Gathering logs for kube-proxy [97226e36242b] ...
I0403 15:39:20.209397    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 97226e36242b"
I0403 15:39:20.221576    2883 logs.go:123] Gathering logs for storage-provisioner [5f5a3a10483d] ...
I0403 15:39:20.221579    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 5f5a3a10483d"
I0403 15:39:20.229368    2883 logs.go:123] Gathering logs for container status ...
I0403 15:39:20.229371    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:39:20.259249    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:39:20.259255    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:39:20.320972    2883 logs.go:123] Gathering logs for coredns [7760f7aed06d] ...
I0403 15:39:20.320975    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7760f7aed06d"
I0403 15:39:20.336773    2883 logs.go:123] Gathering logs for coredns [83fd7afc80b2] ...
I0403 15:39:20.336776    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 83fd7afc80b2"
I0403 15:39:20.352352    2883 logs.go:123] Gathering logs for kube-controller-manager [9055b4f68636] ...
I0403 15:39:20.352357    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 9055b4f68636"
I0403 15:39:22.872154    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:39:27.873518    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:39:27.873642    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:39:27.891320    2883 logs.go:284] 2 containers: [14caac7d67b1 2f77f96d6667]
I0403 15:39:27.891373    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:39:27.898983    2883 logs.go:284] 2 containers: [b924a1708183 d7a89c2bc54b]
I0403 15:39:27.899031    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:39:27.906813    2883 logs.go:284] 4 containers: [cd07d4a273ba 8f2060347218 7760f7aed06d 83fd7afc80b2]
I0403 15:39:27.906837    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:39:27.916026    2883 logs.go:284] 2 containers: [bc6cd12c51a6 0536a7df6c85]
I0403 15:39:27.916117    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:39:27.923621    2883 logs.go:284] 2 containers: [91d639e0bd94 97226e36242b]
I0403 15:39:27.923686    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:39:27.931806    2883 logs.go:284] 2 containers: [e87664bdd7db 9055b4f68636]
I0403 15:39:27.931840    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:39:27.938755    2883 logs.go:284] 0 containers: []
W0403 15:39:27.938761    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:39:27.938874    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:39:27.945235    2883 logs.go:284] 2 containers: [5f5a3a10483d 62fc41ad1270]
I0403 15:39:27.945243    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:39:27.945255    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:39:27.987048    2883 logs.go:123] Gathering logs for kube-apiserver [2f77f96d6667] ...
I0403 15:39:27.987054    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2f77f96d6667"
I0403 15:39:27.997921    2883 logs.go:123] Gathering logs for etcd [d7a89c2bc54b] ...
I0403 15:39:27.997926    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d7a89c2bc54b"
I0403 15:39:28.015925    2883 logs.go:123] Gathering logs for coredns [cd07d4a273ba] ...
I0403 15:39:28.015930    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 cd07d4a273ba"
I0403 15:39:28.024990    2883 logs.go:123] Gathering logs for coredns [8f2060347218] ...
I0403 15:39:28.024997    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8f2060347218"
I0403 15:39:28.033763    2883 logs.go:123] Gathering logs for coredns [7760f7aed06d] ...
I0403 15:39:28.033774    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7760f7aed06d"
I0403 15:39:28.041392    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:39:28.041401    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:39:28.047958    2883 logs.go:123] Gathering logs for kube-apiserver [14caac7d67b1] ...
I0403 15:39:28.047963    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 14caac7d67b1"
I0403 15:39:28.061942    2883 logs.go:123] Gathering logs for etcd [b924a1708183] ...
I0403 15:39:28.061945    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b924a1708183"
I0403 15:39:28.074321    2883 logs.go:123] Gathering logs for kube-scheduler [0536a7df6c85] ...
I0403 15:39:28.074325    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0536a7df6c85"
I0403 15:39:28.083382    2883 logs.go:123] Gathering logs for kube-proxy [97226e36242b] ...
I0403 15:39:28.083384    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 97226e36242b"
I0403 15:39:28.091915    2883 logs.go:123] Gathering logs for kube-scheduler [bc6cd12c51a6] ...
I0403 15:39:28.091917    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 bc6cd12c51a6"
I0403 15:39:28.101246    2883 logs.go:123] Gathering logs for kube-controller-manager [e87664bdd7db] ...
I0403 15:39:28.101249    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e87664bdd7db"
I0403 15:39:28.116548    2883 logs.go:123] Gathering logs for kube-controller-manager [9055b4f68636] ...
I0403 15:39:28.116552    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 9055b4f68636"
I0403 15:39:28.135954    2883 logs.go:123] Gathering logs for storage-provisioner [5f5a3a10483d] ...
I0403 15:39:28.135958    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 5f5a3a10483d"
I0403 15:39:28.145152    2883 logs.go:123] Gathering logs for storage-provisioner [62fc41ad1270] ...
I0403 15:39:28.145155    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 62fc41ad1270"
I0403 15:39:28.154085    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:39:28.154094    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:39:28.209460    2883 logs.go:123] Gathering logs for coredns [83fd7afc80b2] ...
I0403 15:39:28.209466    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 83fd7afc80b2"
I0403 15:39:28.219005    2883 logs.go:123] Gathering logs for kube-proxy [91d639e0bd94] ...
I0403 15:39:28.219010    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 91d639e0bd94"
I0403 15:39:28.228538    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:39:28.228542    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:39:28.261097    2883 logs.go:123] Gathering logs for container status ...
I0403 15:39:28.261100    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:39:30.791013    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:39:35.792461    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:39:35.792595    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:39:35.801823    2883 logs.go:284] 2 containers: [14caac7d67b1 2f77f96d6667]
I0403 15:39:35.801946    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:39:35.814638    2883 logs.go:284] 2 containers: [b924a1708183 d7a89c2bc54b]
I0403 15:39:35.814700    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:39:35.821978    2883 logs.go:284] 4 containers: [cd07d4a273ba 8f2060347218 7760f7aed06d 83fd7afc80b2]
I0403 15:39:35.822046    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:39:35.828945    2883 logs.go:284] 2 containers: [bc6cd12c51a6 0536a7df6c85]
I0403 15:39:35.828972    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:39:35.835765    2883 logs.go:284] 2 containers: [91d639e0bd94 97226e36242b]
I0403 15:39:35.835785    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:39:35.842981    2883 logs.go:284] 2 containers: [e87664bdd7db 9055b4f68636]
I0403 15:39:35.843048    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:39:35.849708    2883 logs.go:284] 0 containers: []
W0403 15:39:35.849712    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:39:35.849733    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:39:35.857038    2883 logs.go:284] 2 containers: [5f5a3a10483d 62fc41ad1270]
I0403 15:39:35.857044    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:39:35.857047    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:39:35.897481    2883 logs.go:123] Gathering logs for kube-apiserver [14caac7d67b1] ...
I0403 15:39:35.897486    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 14caac7d67b1"
I0403 15:39:35.909993    2883 logs.go:123] Gathering logs for kube-proxy [97226e36242b] ...
I0403 15:39:35.909997    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 97226e36242b"
I0403 15:39:35.919116    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:39:35.919120    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:39:35.948212    2883 logs.go:123] Gathering logs for container status ...
I0403 15:39:35.948234    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:39:35.975191    2883 logs.go:123] Gathering logs for kube-controller-manager [e87664bdd7db] ...
I0403 15:39:35.975194    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e87664bdd7db"
I0403 15:39:35.989746    2883 logs.go:123] Gathering logs for storage-provisioner [5f5a3a10483d] ...
I0403 15:39:35.989750    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 5f5a3a10483d"
I0403 15:39:36.000538    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:39:36.000544    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:39:36.007151    2883 logs.go:123] Gathering logs for kube-apiserver [2f77f96d6667] ...
I0403 15:39:36.007154    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2f77f96d6667"
I0403 15:39:36.019939    2883 logs.go:123] Gathering logs for coredns [cd07d4a273ba] ...
I0403 15:39:36.019943    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 cd07d4a273ba"
I0403 15:39:36.028348    2883 logs.go:123] Gathering logs for coredns [83fd7afc80b2] ...
I0403 15:39:36.028361    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 83fd7afc80b2"
I0403 15:39:36.036466    2883 logs.go:123] Gathering logs for kube-scheduler [0536a7df6c85] ...
I0403 15:39:36.036471    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0536a7df6c85"
I0403 15:39:36.044977    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:39:36.044980    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:39:36.097083    2883 logs.go:123] Gathering logs for etcd [b924a1708183] ...
I0403 15:39:36.097089    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b924a1708183"
I0403 15:39:36.111928    2883 logs.go:123] Gathering logs for etcd [d7a89c2bc54b] ...
I0403 15:39:36.111943    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d7a89c2bc54b"
I0403 15:39:36.123044    2883 logs.go:123] Gathering logs for coredns [8f2060347218] ...
I0403 15:39:36.123049    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8f2060347218"
I0403 15:39:36.131094    2883 logs.go:123] Gathering logs for coredns [7760f7aed06d] ...
I0403 15:39:36.131100    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7760f7aed06d"
I0403 15:39:36.139297    2883 logs.go:123] Gathering logs for kube-scheduler [bc6cd12c51a6] ...
I0403 15:39:36.139303    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 bc6cd12c51a6"
I0403 15:39:36.147661    2883 logs.go:123] Gathering logs for kube-proxy [91d639e0bd94] ...
I0403 15:39:36.147665    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 91d639e0bd94"
I0403 15:39:36.157591    2883 logs.go:123] Gathering logs for kube-controller-manager [9055b4f68636] ...
I0403 15:39:36.157594    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 9055b4f68636"
I0403 15:39:36.174424    2883 logs.go:123] Gathering logs for storage-provisioner [62fc41ad1270] ...
I0403 15:39:36.174431    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 62fc41ad1270"
I0403 15:39:38.683233    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:39:43.684465    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:39:43.684598    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:39:43.692832    2883 logs.go:284] 2 containers: [14caac7d67b1 2f77f96d6667]
I0403 15:39:43.692884    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:39:43.699766    2883 logs.go:284] 2 containers: [b924a1708183 d7a89c2bc54b]
I0403 15:39:43.699825    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:39:43.707456    2883 logs.go:284] 4 containers: [cd07d4a273ba 8f2060347218 7760f7aed06d 83fd7afc80b2]
I0403 15:39:43.707512    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:39:43.714750    2883 logs.go:284] 2 containers: [bc6cd12c51a6 0536a7df6c85]
I0403 15:39:43.714788    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:39:43.721709    2883 logs.go:284] 2 containers: [91d639e0bd94 97226e36242b]
I0403 15:39:43.721729    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:39:43.728468    2883 logs.go:284] 2 containers: [e87664bdd7db 9055b4f68636]
I0403 15:39:43.728508    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:39:43.735152    2883 logs.go:284] 0 containers: []
W0403 15:39:43.735155    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:39:43.735177    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:39:43.742624    2883 logs.go:284] 2 containers: [5f5a3a10483d 62fc41ad1270]
I0403 15:39:43.742635    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:39:43.742639    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:39:43.775247    2883 logs.go:123] Gathering logs for kube-apiserver [2f77f96d6667] ...
I0403 15:39:43.775252    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2f77f96d6667"
I0403 15:39:43.787774    2883 logs.go:123] Gathering logs for coredns [83fd7afc80b2] ...
I0403 15:39:43.787777    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 83fd7afc80b2"
I0403 15:39:43.795808    2883 logs.go:123] Gathering logs for kube-proxy [97226e36242b] ...
I0403 15:39:43.795812    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 97226e36242b"
I0403 15:39:43.803732    2883 logs.go:123] Gathering logs for etcd [d7a89c2bc54b] ...
I0403 15:39:43.803735    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d7a89c2bc54b"
I0403 15:39:43.818794    2883 logs.go:123] Gathering logs for coredns [cd07d4a273ba] ...
I0403 15:39:43.818797    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 cd07d4a273ba"
I0403 15:39:43.832106    2883 logs.go:123] Gathering logs for coredns [8f2060347218] ...
I0403 15:39:43.832108    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8f2060347218"
I0403 15:39:43.839898    2883 logs.go:123] Gathering logs for coredns [7760f7aed06d] ...
I0403 15:39:43.839901    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7760f7aed06d"
I0403 15:39:43.847372    2883 logs.go:123] Gathering logs for storage-provisioner [5f5a3a10483d] ...
I0403 15:39:43.847376    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 5f5a3a10483d"
I0403 15:39:43.864195    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:39:43.864198    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:39:43.905204    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:39:43.905208    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:39:43.984201    2883 logs.go:123] Gathering logs for etcd [b924a1708183] ...
I0403 15:39:43.984209    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b924a1708183"
I0403 15:39:43.996064    2883 logs.go:123] Gathering logs for kube-controller-manager [e87664bdd7db] ...
I0403 15:39:43.996068    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e87664bdd7db"
I0403 15:39:44.010757    2883 logs.go:123] Gathering logs for kube-scheduler [bc6cd12c51a6] ...
I0403 15:39:44.010761    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 bc6cd12c51a6"
I0403 15:39:44.026791    2883 logs.go:123] Gathering logs for kube-scheduler [0536a7df6c85] ...
I0403 15:39:44.026794    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0536a7df6c85"
I0403 15:39:44.035584    2883 logs.go:123] Gathering logs for kube-proxy [91d639e0bd94] ...
I0403 15:39:44.035586    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 91d639e0bd94"
I0403 15:39:44.044958    2883 logs.go:123] Gathering logs for storage-provisioner [62fc41ad1270] ...
I0403 15:39:44.044961    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 62fc41ad1270"
I0403 15:39:44.059495    2883 logs.go:123] Gathering logs for container status ...
I0403 15:39:44.059498    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:39:44.090119    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:39:44.090128    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:39:44.097604    2883 logs.go:123] Gathering logs for kube-apiserver [14caac7d67b1] ...
I0403 15:39:44.097611    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 14caac7d67b1"
I0403 15:39:44.109925    2883 logs.go:123] Gathering logs for kube-controller-manager [9055b4f68636] ...
I0403 15:39:44.109928    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 9055b4f68636"
I0403 15:39:46.624724    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:39:51.626025    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:39:51.626120    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:39:51.633612    2883 logs.go:284] 2 containers: [14caac7d67b1 2f77f96d6667]
I0403 15:39:51.633673    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:39:51.642489    2883 logs.go:284] 2 containers: [b924a1708183 d7a89c2bc54b]
I0403 15:39:51.642542    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:39:51.651697    2883 logs.go:284] 4 containers: [cd07d4a273ba 8f2060347218 7760f7aed06d 83fd7afc80b2]
I0403 15:39:51.651801    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:39:51.661076    2883 logs.go:284] 2 containers: [bc6cd12c51a6 0536a7df6c85]
I0403 15:39:51.661111    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:39:51.668398    2883 logs.go:284] 2 containers: [91d639e0bd94 97226e36242b]
I0403 15:39:51.668496    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:39:51.675974    2883 logs.go:284] 2 containers: [e87664bdd7db 9055b4f68636]
I0403 15:39:51.676007    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:39:51.682675    2883 logs.go:284] 0 containers: []
W0403 15:39:51.682677    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:39:51.682695    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:39:51.689424    2883 logs.go:284] 2 containers: [5f5a3a10483d 62fc41ad1270]
I0403 15:39:51.689435    2883 logs.go:123] Gathering logs for coredns [7760f7aed06d] ...
I0403 15:39:51.689439    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7760f7aed06d"
I0403 15:39:51.697973    2883 logs.go:123] Gathering logs for kube-scheduler [bc6cd12c51a6] ...
I0403 15:39:51.697976    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 bc6cd12c51a6"
I0403 15:39:51.705806    2883 logs.go:123] Gathering logs for kube-controller-manager [9055b4f68636] ...
I0403 15:39:51.705809    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 9055b4f68636"
I0403 15:39:51.720330    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:39:51.720334    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:39:51.750408    2883 logs.go:123] Gathering logs for kube-apiserver [14caac7d67b1] ...
I0403 15:39:51.750411    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 14caac7d67b1"
I0403 15:39:51.767233    2883 logs.go:123] Gathering logs for coredns [8f2060347218] ...
I0403 15:39:51.767238    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8f2060347218"
I0403 15:39:51.776091    2883 logs.go:123] Gathering logs for kube-proxy [91d639e0bd94] ...
I0403 15:39:51.776095    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 91d639e0bd94"
I0403 15:39:51.784587    2883 logs.go:123] Gathering logs for kube-controller-manager [e87664bdd7db] ...
I0403 15:39:51.784590    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e87664bdd7db"
I0403 15:39:51.799474    2883 logs.go:123] Gathering logs for storage-provisioner [5f5a3a10483d] ...
I0403 15:39:51.799476    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 5f5a3a10483d"
I0403 15:39:51.808057    2883 logs.go:123] Gathering logs for storage-provisioner [62fc41ad1270] ...
I0403 15:39:51.808060    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 62fc41ad1270"
I0403 15:39:51.816233    2883 logs.go:123] Gathering logs for etcd [d7a89c2bc54b] ...
I0403 15:39:51.816241    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d7a89c2bc54b"
I0403 15:39:51.827878    2883 logs.go:123] Gathering logs for coredns [83fd7afc80b2] ...
I0403 15:39:51.827882    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 83fd7afc80b2"
I0403 15:39:51.837559    2883 logs.go:123] Gathering logs for kube-scheduler [0536a7df6c85] ...
I0403 15:39:51.837561    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0536a7df6c85"
I0403 15:39:51.845714    2883 logs.go:123] Gathering logs for kube-apiserver [2f77f96d6667] ...
I0403 15:39:51.845718    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2f77f96d6667"
I0403 15:39:51.858989    2883 logs.go:123] Gathering logs for coredns [cd07d4a273ba] ...
I0403 15:39:51.858994    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 cd07d4a273ba"
I0403 15:39:51.868454    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:39:51.868460    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:39:51.930870    2883 logs.go:123] Gathering logs for etcd [b924a1708183] ...
I0403 15:39:51.930877    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b924a1708183"
I0403 15:39:51.942797    2883 logs.go:123] Gathering logs for kube-proxy [97226e36242b] ...
I0403 15:39:51.942801    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 97226e36242b"
I0403 15:39:51.961825    2883 logs.go:123] Gathering logs for container status ...
I0403 15:39:51.961834    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:39:51.993493    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:39:51.993499    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:39:52.037339    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:39:52.037343    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:39:54.544213    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:39:59.545474    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:39:59.545593    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:39:59.563280    2883 logs.go:284] 2 containers: [14caac7d67b1 2f77f96d6667]
I0403 15:39:59.563335    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:39:59.571129    2883 logs.go:284] 2 containers: [b924a1708183 d7a89c2bc54b]
I0403 15:39:59.571202    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:39:59.578325    2883 logs.go:284] 4 containers: [cd07d4a273ba 8f2060347218 7760f7aed06d 83fd7afc80b2]
I0403 15:39:59.578389    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:39:59.585532    2883 logs.go:284] 2 containers: [bc6cd12c51a6 0536a7df6c85]
I0403 15:39:59.585563    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:39:59.593301    2883 logs.go:284] 2 containers: [91d639e0bd94 97226e36242b]
I0403 15:39:59.593323    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:39:59.600507    2883 logs.go:284] 2 containers: [e87664bdd7db 9055b4f68636]
I0403 15:39:59.600534    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:39:59.611108    2883 logs.go:284] 0 containers: []
W0403 15:39:59.611114    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:39:59.611190    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:39:59.618125    2883 logs.go:284] 2 containers: [5f5a3a10483d 62fc41ad1270]
I0403 15:39:59.618136    2883 logs.go:123] Gathering logs for container status ...
I0403 15:39:59.618142    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:39:59.649189    2883 logs.go:123] Gathering logs for kube-apiserver [14caac7d67b1] ...
I0403 15:39:59.649196    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 14caac7d67b1"
I0403 15:39:59.662241    2883 logs.go:123] Gathering logs for coredns [cd07d4a273ba] ...
I0403 15:39:59.662244    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 cd07d4a273ba"
I0403 15:39:59.671038    2883 logs.go:123] Gathering logs for kube-proxy [91d639e0bd94] ...
I0403 15:39:59.671041    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 91d639e0bd94"
I0403 15:39:59.683153    2883 logs.go:123] Gathering logs for kube-proxy [97226e36242b] ...
I0403 15:39:59.683157    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 97226e36242b"
I0403 15:39:59.700001    2883 logs.go:123] Gathering logs for kube-controller-manager [9055b4f68636] ...
I0403 15:39:59.700004    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 9055b4f68636"
I0403 15:39:59.714794    2883 logs.go:123] Gathering logs for storage-provisioner [5f5a3a10483d] ...
I0403 15:39:59.714796    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 5f5a3a10483d"
I0403 15:39:59.722914    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:39:59.722927    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:39:59.732217    2883 logs.go:123] Gathering logs for etcd [d7a89c2bc54b] ...
I0403 15:39:59.732221    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d7a89c2bc54b"
I0403 15:39:59.745154    2883 logs.go:123] Gathering logs for coredns [83fd7afc80b2] ...
I0403 15:39:59.745159    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 83fd7afc80b2"
I0403 15:39:59.754765    2883 logs.go:123] Gathering logs for kube-scheduler [0536a7df6c85] ...
I0403 15:39:59.754787    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0536a7df6c85"
I0403 15:39:59.764106    2883 logs.go:123] Gathering logs for kube-controller-manager [e87664bdd7db] ...
I0403 15:39:59.764110    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e87664bdd7db"
I0403 15:39:59.778839    2883 logs.go:123] Gathering logs for storage-provisioner [62fc41ad1270] ...
I0403 15:39:59.778842    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 62fc41ad1270"
I0403 15:39:59.787103    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:39:59.787110    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:39:59.845961    2883 logs.go:123] Gathering logs for kube-apiserver [2f77f96d6667] ...
I0403 15:39:59.845970    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2f77f96d6667"
I0403 15:39:59.859568    2883 logs.go:123] Gathering logs for etcd [b924a1708183] ...
I0403 15:39:59.859570    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b924a1708183"
I0403 15:39:59.870830    2883 logs.go:123] Gathering logs for coredns [7760f7aed06d] ...
I0403 15:39:59.870832    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7760f7aed06d"
I0403 15:39:59.880019    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:39:59.880023    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:39:59.914726    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:39:59.914730    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:39:59.960540    2883 logs.go:123] Gathering logs for coredns [8f2060347218] ...
I0403 15:39:59.960550    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8f2060347218"
I0403 15:39:59.969707    2883 logs.go:123] Gathering logs for kube-scheduler [bc6cd12c51a6] ...
I0403 15:39:59.969714    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 bc6cd12c51a6"
I0403 15:40:02.484777    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:40:07.486133    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:40:07.486267    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:40:07.495400    2883 logs.go:284] 2 containers: [14caac7d67b1 2f77f96d6667]
I0403 15:40:07.495477    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:40:07.503375    2883 logs.go:284] 2 containers: [b924a1708183 d7a89c2bc54b]
I0403 15:40:07.503448    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:40:07.511283    2883 logs.go:284] 4 containers: [cd07d4a273ba 8f2060347218 7760f7aed06d 83fd7afc80b2]
I0403 15:40:07.511360    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:40:07.519263    2883 logs.go:284] 2 containers: [bc6cd12c51a6 0536a7df6c85]
I0403 15:40:07.519341    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:40:07.527495    2883 logs.go:284] 2 containers: [91d639e0bd94 97226e36242b]
I0403 15:40:07.527566    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:40:07.535287    2883 logs.go:284] 2 containers: [e87664bdd7db 9055b4f68636]
I0403 15:40:07.535383    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:40:07.550768    2883 logs.go:284] 0 containers: []
W0403 15:40:07.550773    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:40:07.550799    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:40:07.565119    2883 logs.go:284] 2 containers: [5f5a3a10483d 62fc41ad1270]
I0403 15:40:07.565128    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:40:07.565132    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:40:07.621818    2883 logs.go:123] Gathering logs for kube-scheduler [bc6cd12c51a6] ...
I0403 15:40:07.621826    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 bc6cd12c51a6"
I0403 15:40:07.632209    2883 logs.go:123] Gathering logs for kube-proxy [91d639e0bd94] ...
I0403 15:40:07.632221    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 91d639e0bd94"
I0403 15:40:07.641648    2883 logs.go:123] Gathering logs for container status ...
I0403 15:40:07.641665    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:40:07.677673    2883 logs.go:123] Gathering logs for etcd [d7a89c2bc54b] ...
I0403 15:40:07.677678    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d7a89c2bc54b"
I0403 15:40:07.689544    2883 logs.go:123] Gathering logs for coredns [8f2060347218] ...
I0403 15:40:07.689550    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8f2060347218"
I0403 15:40:07.698076    2883 logs.go:123] Gathering logs for coredns [7760f7aed06d] ...
I0403 15:40:07.698083    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7760f7aed06d"
I0403 15:40:07.708706    2883 logs.go:123] Gathering logs for coredns [83fd7afc80b2] ...
I0403 15:40:07.708724    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 83fd7afc80b2"
I0403 15:40:07.718653    2883 logs.go:123] Gathering logs for kube-scheduler [0536a7df6c85] ...
I0403 15:40:07.718672    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0536a7df6c85"
I0403 15:40:07.728360    2883 logs.go:123] Gathering logs for storage-provisioner [5f5a3a10483d] ...
I0403 15:40:07.728371    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 5f5a3a10483d"
I0403 15:40:07.738289    2883 logs.go:123] Gathering logs for storage-provisioner [62fc41ad1270] ...
I0403 15:40:07.738293    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 62fc41ad1270"
I0403 15:40:07.749043    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:40:07.749046    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:40:07.756905    2883 logs.go:123] Gathering logs for kube-apiserver [14caac7d67b1] ...
I0403 15:40:07.756911    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 14caac7d67b1"
I0403 15:40:07.768577    2883 logs.go:123] Gathering logs for etcd [b924a1708183] ...
I0403 15:40:07.768580    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b924a1708183"
I0403 15:40:07.781293    2883 logs.go:123] Gathering logs for coredns [cd07d4a273ba] ...
I0403 15:40:07.781299    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 cd07d4a273ba"
I0403 15:40:07.789354    2883 logs.go:123] Gathering logs for kube-controller-manager [e87664bdd7db] ...
I0403 15:40:07.789370    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e87664bdd7db"
I0403 15:40:07.804380    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:40:07.804385    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:40:07.849282    2883 logs.go:123] Gathering logs for kube-apiserver [2f77f96d6667] ...
I0403 15:40:07.849292    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2f77f96d6667"
I0403 15:40:07.863001    2883 logs.go:123] Gathering logs for kube-proxy [97226e36242b] ...
I0403 15:40:07.863015    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 97226e36242b"
I0403 15:40:07.872367    2883 logs.go:123] Gathering logs for kube-controller-manager [9055b4f68636] ...
I0403 15:40:07.872370    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 9055b4f68636"
I0403 15:40:07.888783    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:40:07.888786    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:40:10.422466    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:40:15.423740    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:40:15.423868    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:40:15.435398    2883 logs.go:284] 2 containers: [14caac7d67b1 2f77f96d6667]
I0403 15:40:15.435475    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:40:15.446965    2883 logs.go:284] 2 containers: [b924a1708183 d7a89c2bc54b]
I0403 15:40:15.447022    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:40:15.453574    2883 logs.go:284] 4 containers: [cd07d4a273ba 8f2060347218 7760f7aed06d 83fd7afc80b2]
I0403 15:40:15.453645    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:40:15.461473    2883 logs.go:284] 2 containers: [bc6cd12c51a6 0536a7df6c85]
I0403 15:40:15.461545    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:40:15.471337    2883 logs.go:284] 2 containers: [91d639e0bd94 97226e36242b]
I0403 15:40:15.471385    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:40:15.478359    2883 logs.go:284] 2 containers: [e87664bdd7db 9055b4f68636]
I0403 15:40:15.478438    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:40:15.486341    2883 logs.go:284] 0 containers: []
W0403 15:40:15.486348    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:40:15.486400    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:40:15.495062    2883 logs.go:284] 2 containers: [5f5a3a10483d 62fc41ad1270]
I0403 15:40:15.495073    2883 logs.go:123] Gathering logs for kube-proxy [91d639e0bd94] ...
I0403 15:40:15.495080    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 91d639e0bd94"
I0403 15:40:15.503546    2883 logs.go:123] Gathering logs for kube-controller-manager [9055b4f68636] ...
I0403 15:40:15.503549    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 9055b4f68636"
I0403 15:40:15.519126    2883 logs.go:123] Gathering logs for storage-provisioner [62fc41ad1270] ...
I0403 15:40:15.519130    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 62fc41ad1270"
I0403 15:40:15.527948    2883 logs.go:123] Gathering logs for container status ...
I0403 15:40:15.527952    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:40:15.557969    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:40:15.557973    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:40:15.614081    2883 logs.go:123] Gathering logs for etcd [b924a1708183] ...
I0403 15:40:15.614086    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b924a1708183"
I0403 15:40:15.627373    2883 logs.go:123] Gathering logs for coredns [cd07d4a273ba] ...
I0403 15:40:15.627377    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 cd07d4a273ba"
I0403 15:40:15.635262    2883 logs.go:123] Gathering logs for coredns [7760f7aed06d] ...
I0403 15:40:15.635265    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7760f7aed06d"
I0403 15:40:15.643431    2883 logs.go:123] Gathering logs for kube-controller-manager [e87664bdd7db] ...
I0403 15:40:15.643434    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e87664bdd7db"
I0403 15:40:15.657030    2883 logs.go:123] Gathering logs for storage-provisioner [5f5a3a10483d] ...
I0403 15:40:15.657034    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 5f5a3a10483d"
I0403 15:40:15.665858    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:40:15.665862    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:40:15.695830    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:40:15.695834    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:40:15.743535    2883 logs.go:123] Gathering logs for kube-apiserver [14caac7d67b1] ...
I0403 15:40:15.743539    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 14caac7d67b1"
I0403 15:40:15.755572    2883 logs.go:123] Gathering logs for coredns [83fd7afc80b2] ...
I0403 15:40:15.755576    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 83fd7afc80b2"
I0403 15:40:15.771686    2883 logs.go:123] Gathering logs for kube-scheduler [0536a7df6c85] ...
I0403 15:40:15.771688    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0536a7df6c85"
I0403 15:40:15.780100    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:40:15.780103    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:40:15.788667    2883 logs.go:123] Gathering logs for kube-apiserver [2f77f96d6667] ...
I0403 15:40:15.788671    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2f77f96d6667"
I0403 15:40:15.801722    2883 logs.go:123] Gathering logs for kube-proxy [97226e36242b] ...
I0403 15:40:15.801725    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 97226e36242b"
I0403 15:40:15.820071    2883 logs.go:123] Gathering logs for etcd [d7a89c2bc54b] ...
I0403 15:40:15.820088    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d7a89c2bc54b"
I0403 15:40:15.831817    2883 logs.go:123] Gathering logs for coredns [8f2060347218] ...
I0403 15:40:15.831820    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8f2060347218"
I0403 15:40:15.839587    2883 logs.go:123] Gathering logs for kube-scheduler [bc6cd12c51a6] ...
I0403 15:40:15.839590    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 bc6cd12c51a6"
I0403 15:40:18.349254    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:40:23.350322    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:40:23.350418    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:40:23.358941    2883 logs.go:284] 2 containers: [14caac7d67b1 2f77f96d6667]
I0403 15:40:23.359009    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:40:23.366553    2883 logs.go:284] 2 containers: [b924a1708183 d7a89c2bc54b]
I0403 15:40:23.366603    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:40:23.378587    2883 logs.go:284] 4 containers: [cd07d4a273ba 8f2060347218 7760f7aed06d 83fd7afc80b2]
I0403 15:40:23.378669    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:40:23.386331    2883 logs.go:284] 2 containers: [bc6cd12c51a6 0536a7df6c85]
I0403 15:40:23.386424    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:40:23.395092    2883 logs.go:284] 2 containers: [91d639e0bd94 97226e36242b]
I0403 15:40:23.395153    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:40:23.411037    2883 logs.go:284] 2 containers: [e87664bdd7db 9055b4f68636]
I0403 15:40:23.411077    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:40:23.418944    2883 logs.go:284] 0 containers: []
W0403 15:40:23.418947    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:40:23.418970    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:40:23.427238    2883 logs.go:284] 2 containers: [5f5a3a10483d 62fc41ad1270]
I0403 15:40:23.427246    2883 logs.go:123] Gathering logs for storage-provisioner [5f5a3a10483d] ...
I0403 15:40:23.427249    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 5f5a3a10483d"
I0403 15:40:23.436052    2883 logs.go:123] Gathering logs for kube-apiserver [14caac7d67b1] ...
I0403 15:40:23.436056    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 14caac7d67b1"
I0403 15:40:23.449020    2883 logs.go:123] Gathering logs for coredns [83fd7afc80b2] ...
I0403 15:40:23.449023    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 83fd7afc80b2"
I0403 15:40:23.457372    2883 logs.go:123] Gathering logs for kube-scheduler [bc6cd12c51a6] ...
I0403 15:40:23.457380    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 bc6cd12c51a6"
I0403 15:40:23.467257    2883 logs.go:123] Gathering logs for kube-proxy [97226e36242b] ...
I0403 15:40:23.467264    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 97226e36242b"
I0403 15:40:23.480404    2883 logs.go:123] Gathering logs for kube-controller-manager [9055b4f68636] ...
I0403 15:40:23.480409    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 9055b4f68636"
I0403 15:40:23.497219    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:40:23.497223    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:40:23.526407    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:40:23.526411    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:40:23.566400    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:40:23.566407    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:40:23.634686    2883 logs.go:123] Gathering logs for kube-apiserver [2f77f96d6667] ...
I0403 15:40:23.634693    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2f77f96d6667"
I0403 15:40:23.647438    2883 logs.go:123] Gathering logs for etcd [b924a1708183] ...
I0403 15:40:23.647441    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b924a1708183"
I0403 15:40:23.659186    2883 logs.go:123] Gathering logs for coredns [7760f7aed06d] ...
I0403 15:40:23.659190    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7760f7aed06d"
I0403 15:40:23.669387    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:40:23.669403    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:40:23.678309    2883 logs.go:123] Gathering logs for coredns [cd07d4a273ba] ...
I0403 15:40:23.678331    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 cd07d4a273ba"
I0403 15:40:23.687327    2883 logs.go:123] Gathering logs for kube-scheduler [0536a7df6c85] ...
I0403 15:40:23.687333    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0536a7df6c85"
I0403 15:40:23.696838    2883 logs.go:123] Gathering logs for container status ...
I0403 15:40:23.696845    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:40:23.728742    2883 logs.go:123] Gathering logs for etcd [d7a89c2bc54b] ...
I0403 15:40:23.728749    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d7a89c2bc54b"
I0403 15:40:23.742170    2883 logs.go:123] Gathering logs for coredns [8f2060347218] ...
I0403 15:40:23.742174    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8f2060347218"
I0403 15:40:23.752258    2883 logs.go:123] Gathering logs for kube-proxy [91d639e0bd94] ...
I0403 15:40:23.752270    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 91d639e0bd94"
I0403 15:40:23.762368    2883 logs.go:123] Gathering logs for kube-controller-manager [e87664bdd7db] ...
I0403 15:40:23.762372    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e87664bdd7db"
I0403 15:40:23.778358    2883 logs.go:123] Gathering logs for storage-provisioner [62fc41ad1270] ...
I0403 15:40:23.778363    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 62fc41ad1270"
I0403 15:40:26.288159    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:40:31.289592    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:40:31.289730    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:40:31.298038    2883 logs.go:284] 2 containers: [14caac7d67b1 2f77f96d6667]
I0403 15:40:31.298109    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:40:31.305730    2883 logs.go:284] 2 containers: [b924a1708183 d7a89c2bc54b]
I0403 15:40:31.305759    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:40:31.313167    2883 logs.go:284] 4 containers: [cd07d4a273ba 8f2060347218 7760f7aed06d 83fd7afc80b2]
I0403 15:40:31.313249    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:40:31.321261    2883 logs.go:284] 2 containers: [bc6cd12c51a6 0536a7df6c85]
I0403 15:40:31.321286    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:40:31.336271    2883 logs.go:284] 2 containers: [91d639e0bd94 97226e36242b]
I0403 15:40:31.336360    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:40:31.344829    2883 logs.go:284] 2 containers: [e87664bdd7db 9055b4f68636]
I0403 15:40:31.344873    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:40:31.353205    2883 logs.go:284] 0 containers: []
W0403 15:40:31.353213    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:40:31.353285    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:40:31.368148    2883 logs.go:284] 2 containers: [5f5a3a10483d 62fc41ad1270]
I0403 15:40:31.368158    2883 logs.go:123] Gathering logs for etcd [b924a1708183] ...
I0403 15:40:31.368162    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b924a1708183"
I0403 15:40:31.378384    2883 logs.go:123] Gathering logs for kube-scheduler [bc6cd12c51a6] ...
I0403 15:40:31.378387    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 bc6cd12c51a6"
I0403 15:40:31.387112    2883 logs.go:123] Gathering logs for kube-proxy [91d639e0bd94] ...
I0403 15:40:31.387115    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 91d639e0bd94"
I0403 15:40:31.395043    2883 logs.go:123] Gathering logs for kube-proxy [97226e36242b] ...
I0403 15:40:31.395048    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 97226e36242b"
I0403 15:40:31.403760    2883 logs.go:123] Gathering logs for kube-controller-manager [e87664bdd7db] ...
I0403 15:40:31.403762    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e87664bdd7db"
I0403 15:40:31.423185    2883 logs.go:123] Gathering logs for container status ...
I0403 15:40:31.423188    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:40:31.456823    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:40:31.456831    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:40:31.463978    2883 logs.go:123] Gathering logs for kube-scheduler [0536a7df6c85] ...
I0403 15:40:31.463982    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0536a7df6c85"
I0403 15:40:31.473541    2883 logs.go:123] Gathering logs for coredns [83fd7afc80b2] ...
I0403 15:40:31.473545    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 83fd7afc80b2"
I0403 15:40:31.485468    2883 logs.go:123] Gathering logs for kube-apiserver [14caac7d67b1] ...
I0403 15:40:31.485471    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 14caac7d67b1"
I0403 15:40:31.497102    2883 logs.go:123] Gathering logs for kube-apiserver [2f77f96d6667] ...
I0403 15:40:31.497105    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2f77f96d6667"
I0403 15:40:31.508221    2883 logs.go:123] Gathering logs for coredns [8f2060347218] ...
I0403 15:40:31.508223    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8f2060347218"
I0403 15:40:31.519778    2883 logs.go:123] Gathering logs for kube-controller-manager [9055b4f68636] ...
I0403 15:40:31.519781    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 9055b4f68636"
I0403 15:40:31.534947    2883 logs.go:123] Gathering logs for storage-provisioner [62fc41ad1270] ...
I0403 15:40:31.534949    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 62fc41ad1270"
I0403 15:40:31.545628    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:40:31.545633    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:40:31.577147    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:40:31.577152    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:40:31.633705    2883 logs.go:123] Gathering logs for etcd [d7a89c2bc54b] ...
I0403 15:40:31.633708    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d7a89c2bc54b"
I0403 15:40:31.647782    2883 logs.go:123] Gathering logs for coredns [cd07d4a273ba] ...
I0403 15:40:31.647789    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 cd07d4a273ba"
I0403 15:40:31.664829    2883 logs.go:123] Gathering logs for coredns [7760f7aed06d] ...
I0403 15:40:31.664847    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7760f7aed06d"
I0403 15:40:31.673800    2883 logs.go:123] Gathering logs for storage-provisioner [5f5a3a10483d] ...
I0403 15:40:31.673813    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 5f5a3a10483d"
I0403 15:40:31.686173    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:40:31.686186    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:40:34.228806    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:40:39.230181    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:40:39.230366    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:40:39.238959    2883 logs.go:284] 2 containers: [14caac7d67b1 2f77f96d6667]
I0403 15:40:39.239027    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:40:39.246206    2883 logs.go:284] 2 containers: [b924a1708183 d7a89c2bc54b]
I0403 15:40:39.246284    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:40:39.252986    2883 logs.go:284] 4 containers: [cd07d4a273ba 8f2060347218 7760f7aed06d 83fd7afc80b2]
I0403 15:40:39.253037    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:40:39.261051    2883 logs.go:284] 2 containers: [bc6cd12c51a6 0536a7df6c85]
I0403 15:40:39.261119    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:40:39.268063    2883 logs.go:284] 2 containers: [91d639e0bd94 97226e36242b]
I0403 15:40:39.268136    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:40:39.276488    2883 logs.go:284] 2 containers: [e87664bdd7db 9055b4f68636]
I0403 15:40:39.276548    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:40:39.282996    2883 logs.go:284] 0 containers: []
W0403 15:40:39.283007    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:40:39.283037    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:40:39.290483    2883 logs.go:284] 2 containers: [5f5a3a10483d 62fc41ad1270]
I0403 15:40:39.290491    2883 logs.go:123] Gathering logs for kube-controller-manager [e87664bdd7db] ...
I0403 15:40:39.290494    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e87664bdd7db"
I0403 15:40:39.305746    2883 logs.go:123] Gathering logs for kube-controller-manager [9055b4f68636] ...
I0403 15:40:39.305749    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 9055b4f68636"
I0403 15:40:39.321664    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:40:39.321673    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:40:39.333692    2883 logs.go:123] Gathering logs for etcd [b924a1708183] ...
I0403 15:40:39.333698    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b924a1708183"
I0403 15:40:39.355202    2883 logs.go:123] Gathering logs for etcd [d7a89c2bc54b] ...
I0403 15:40:39.355209    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d7a89c2bc54b"
I0403 15:40:39.370061    2883 logs.go:123] Gathering logs for coredns [8f2060347218] ...
I0403 15:40:39.370066    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8f2060347218"
I0403 15:40:39.390287    2883 logs.go:123] Gathering logs for kube-scheduler [bc6cd12c51a6] ...
I0403 15:40:39.390296    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 bc6cd12c51a6"
I0403 15:40:39.401749    2883 logs.go:123] Gathering logs for kube-proxy [97226e36242b] ...
I0403 15:40:39.401755    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 97226e36242b"
I0403 15:40:39.410676    2883 logs.go:123] Gathering logs for storage-provisioner [5f5a3a10483d] ...
I0403 15:40:39.410680    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 5f5a3a10483d"
I0403 15:40:39.420599    2883 logs.go:123] Gathering logs for kube-proxy [91d639e0bd94] ...
I0403 15:40:39.420606    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 91d639e0bd94"
I0403 15:40:39.434339    2883 logs.go:123] Gathering logs for container status ...
I0403 15:40:39.434343    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:40:39.461625    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:40:39.461629    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:40:39.506759    2883 logs.go:123] Gathering logs for kube-apiserver [2f77f96d6667] ...
I0403 15:40:39.506763    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2f77f96d6667"
I0403 15:40:39.519983    2883 logs.go:123] Gathering logs for coredns [7760f7aed06d] ...
I0403 15:40:39.519987    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7760f7aed06d"
I0403 15:40:39.528434    2883 logs.go:123] Gathering logs for storage-provisioner [62fc41ad1270] ...
I0403 15:40:39.528440    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 62fc41ad1270"
I0403 15:40:39.536679    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:40:39.536683    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:40:39.568393    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:40:39.568397    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:40:39.623946    2883 logs.go:123] Gathering logs for kube-apiserver [14caac7d67b1] ...
I0403 15:40:39.623954    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 14caac7d67b1"
I0403 15:40:39.644840    2883 logs.go:123] Gathering logs for coredns [cd07d4a273ba] ...
I0403 15:40:39.644844    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 cd07d4a273ba"
I0403 15:40:39.652886    2883 logs.go:123] Gathering logs for coredns [83fd7afc80b2] ...
I0403 15:40:39.652888    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 83fd7afc80b2"
I0403 15:40:39.661972    2883 logs.go:123] Gathering logs for kube-scheduler [0536a7df6c85] ...
I0403 15:40:39.661975    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0536a7df6c85"
I0403 15:40:42.172299    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:40:47.173833    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:40:47.173964    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:40:47.182284    2883 logs.go:284] 2 containers: [14caac7d67b1 2f77f96d6667]
I0403 15:40:47.182334    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:40:47.189681    2883 logs.go:284] 2 containers: [b924a1708183 d7a89c2bc54b]
I0403 15:40:47.189775    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:40:47.199042    2883 logs.go:284] 4 containers: [cd07d4a273ba 8f2060347218 7760f7aed06d 83fd7afc80b2]
I0403 15:40:47.199110    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:40:47.207610    2883 logs.go:284] 2 containers: [bc6cd12c51a6 0536a7df6c85]
I0403 15:40:47.207688    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:40:47.215664    2883 logs.go:284] 2 containers: [91d639e0bd94 97226e36242b]
I0403 15:40:47.215730    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:40:47.222850    2883 logs.go:284] 2 containers: [e87664bdd7db 9055b4f68636]
I0403 15:40:47.222899    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:40:47.229967    2883 logs.go:284] 0 containers: []
W0403 15:40:47.229976    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:40:47.230033    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:40:47.236883    2883 logs.go:284] 2 containers: [5f5a3a10483d 62fc41ad1270]
I0403 15:40:47.236889    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:40:47.236893    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:40:47.244279    2883 logs.go:123] Gathering logs for kube-controller-manager [9055b4f68636] ...
I0403 15:40:47.244281    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 9055b4f68636"
I0403 15:40:47.258963    2883 logs.go:123] Gathering logs for storage-provisioner [5f5a3a10483d] ...
I0403 15:40:47.258966    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 5f5a3a10483d"
I0403 15:40:47.274023    2883 logs.go:123] Gathering logs for storage-provisioner [62fc41ad1270] ...
I0403 15:40:47.274026    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 62fc41ad1270"
I0403 15:40:47.282437    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:40:47.282445    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:40:47.315618    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:40:47.315627    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:40:47.367973    2883 logs.go:123] Gathering logs for kube-apiserver [2f77f96d6667] ...
I0403 15:40:47.367979    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2f77f96d6667"
I0403 15:40:47.378984    2883 logs.go:123] Gathering logs for coredns [cd07d4a273ba] ...
I0403 15:40:47.378993    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 cd07d4a273ba"
I0403 15:40:47.387933    2883 logs.go:123] Gathering logs for coredns [8f2060347218] ...
I0403 15:40:47.387942    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8f2060347218"
I0403 15:40:47.398128    2883 logs.go:123] Gathering logs for coredns [7760f7aed06d] ...
I0403 15:40:47.398132    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7760f7aed06d"
I0403 15:40:47.408222    2883 logs.go:123] Gathering logs for kube-scheduler [bc6cd12c51a6] ...
I0403 15:40:47.408225    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 bc6cd12c51a6"
I0403 15:40:47.417722    2883 logs.go:123] Gathering logs for kube-proxy [91d639e0bd94] ...
I0403 15:40:47.417725    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 91d639e0bd94"
I0403 15:40:47.426564    2883 logs.go:123] Gathering logs for kube-controller-manager [e87664bdd7db] ...
I0403 15:40:47.426567    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e87664bdd7db"
I0403 15:40:47.440924    2883 logs.go:123] Gathering logs for container status ...
I0403 15:40:47.440927    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:40:47.468177    2883 logs.go:123] Gathering logs for coredns [83fd7afc80b2] ...
I0403 15:40:47.468182    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 83fd7afc80b2"
I0403 15:40:47.482516    2883 logs.go:123] Gathering logs for kube-scheduler [0536a7df6c85] ...
I0403 15:40:47.482521    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0536a7df6c85"
I0403 15:40:47.491257    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:40:47.491261    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:40:47.535122    2883 logs.go:123] Gathering logs for kube-apiserver [14caac7d67b1] ...
I0403 15:40:47.535127    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 14caac7d67b1"
I0403 15:40:47.547001    2883 logs.go:123] Gathering logs for etcd [b924a1708183] ...
I0403 15:40:47.547004    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b924a1708183"
I0403 15:40:47.562906    2883 logs.go:123] Gathering logs for etcd [d7a89c2bc54b] ...
I0403 15:40:47.562909    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d7a89c2bc54b"
I0403 15:40:47.576852    2883 logs.go:123] Gathering logs for kube-proxy [97226e36242b] ...
I0403 15:40:47.576854    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 97226e36242b"
I0403 15:40:50.085675    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:40:55.086990    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:40:55.087105    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:40:55.096115    2883 logs.go:284] 2 containers: [14caac7d67b1 2f77f96d6667]
I0403 15:40:55.096205    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:40:55.103642    2883 logs.go:284] 2 containers: [b924a1708183 d7a89c2bc54b]
I0403 15:40:55.103713    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:40:55.112055    2883 logs.go:284] 4 containers: [cd07d4a273ba 8f2060347218 7760f7aed06d 83fd7afc80b2]
I0403 15:40:55.112094    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:40:55.127970    2883 logs.go:284] 2 containers: [bc6cd12c51a6 0536a7df6c85]
I0403 15:40:55.128054    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:40:55.135877    2883 logs.go:284] 2 containers: [91d639e0bd94 97226e36242b]
I0403 15:40:55.135911    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:40:55.143565    2883 logs.go:284] 2 containers: [e87664bdd7db 9055b4f68636]
I0403 15:40:55.143639    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:40:55.155972    2883 logs.go:284] 0 containers: []
W0403 15:40:55.155980    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:40:55.156060    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:40:55.162912    2883 logs.go:284] 2 containers: [5f5a3a10483d 62fc41ad1270]
I0403 15:40:55.162921    2883 logs.go:123] Gathering logs for kube-apiserver [2f77f96d6667] ...
I0403 15:40:55.162925    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2f77f96d6667"
I0403 15:40:55.185212    2883 logs.go:123] Gathering logs for coredns [7760f7aed06d] ...
I0403 15:40:55.185222    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7760f7aed06d"
I0403 15:40:55.202997    2883 logs.go:123] Gathering logs for kube-proxy [91d639e0bd94] ...
I0403 15:40:55.203004    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 91d639e0bd94"
I0403 15:40:55.213108    2883 logs.go:123] Gathering logs for coredns [cd07d4a273ba] ...
I0403 15:40:55.213111    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 cd07d4a273ba"
I0403 15:40:55.221469    2883 logs.go:123] Gathering logs for coredns [8f2060347218] ...
I0403 15:40:55.221474    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8f2060347218"
I0403 15:40:55.231269    2883 logs.go:123] Gathering logs for kube-controller-manager [e87664bdd7db] ...
I0403 15:40:55.231273    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e87664bdd7db"
I0403 15:40:55.247841    2883 logs.go:123] Gathering logs for storage-provisioner [5f5a3a10483d] ...
I0403 15:40:55.247845    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 5f5a3a10483d"
I0403 15:40:55.258553    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:40:55.258562    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:40:55.303076    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:40:55.303085    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:40:55.360053    2883 logs.go:123] Gathering logs for kube-apiserver [14caac7d67b1] ...
I0403 15:40:55.360060    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 14caac7d67b1"
I0403 15:40:55.372694    2883 logs.go:123] Gathering logs for coredns [83fd7afc80b2] ...
I0403 15:40:55.372701    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 83fd7afc80b2"
I0403 15:40:55.382069    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:40:55.382073    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:40:55.416745    2883 logs.go:123] Gathering logs for container status ...
I0403 15:40:55.416763    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:40:55.447516    2883 logs.go:123] Gathering logs for kube-scheduler [bc6cd12c51a6] ...
I0403 15:40:55.447523    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 bc6cd12c51a6"
I0403 15:40:55.466136    2883 logs.go:123] Gathering logs for kube-scheduler [0536a7df6c85] ...
I0403 15:40:55.466139    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0536a7df6c85"
I0403 15:40:55.477287    2883 logs.go:123] Gathering logs for kube-proxy [97226e36242b] ...
I0403 15:40:55.477292    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 97226e36242b"
I0403 15:40:55.490601    2883 logs.go:123] Gathering logs for kube-controller-manager [9055b4f68636] ...
I0403 15:40:55.490607    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 9055b4f68636"
I0403 15:40:55.504877    2883 logs.go:123] Gathering logs for storage-provisioner [62fc41ad1270] ...
I0403 15:40:55.504881    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 62fc41ad1270"
I0403 15:40:55.513292    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:40:55.513296    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:40:55.521886    2883 logs.go:123] Gathering logs for etcd [b924a1708183] ...
I0403 15:40:55.521889    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b924a1708183"
I0403 15:40:55.532660    2883 logs.go:123] Gathering logs for etcd [d7a89c2bc54b] ...
I0403 15:40:55.532664    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d7a89c2bc54b"
I0403 15:40:58.045586    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:41:03.046909    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:41:03.047042    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:41:03.056648    2883 logs.go:284] 2 containers: [14caac7d67b1 2f77f96d6667]
I0403 15:41:03.056735    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:41:03.065305    2883 logs.go:284] 2 containers: [b924a1708183 d7a89c2bc54b]
I0403 15:41:03.065360    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:41:03.076429    2883 logs.go:284] 4 containers: [cd07d4a273ba 8f2060347218 7760f7aed06d 83fd7afc80b2]
I0403 15:41:03.076530    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:41:03.086621    2883 logs.go:284] 2 containers: [bc6cd12c51a6 0536a7df6c85]
I0403 15:41:03.086725    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:41:03.098312    2883 logs.go:284] 2 containers: [91d639e0bd94 97226e36242b]
I0403 15:41:03.098346    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:41:03.111806    2883 logs.go:284] 2 containers: [e87664bdd7db 9055b4f68636]
I0403 15:41:03.111842    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:41:03.120384    2883 logs.go:284] 0 containers: []
W0403 15:41:03.120394    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:41:03.120474    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:41:03.128268    2883 logs.go:284] 2 containers: [5f5a3a10483d 62fc41ad1270]
I0403 15:41:03.128278    2883 logs.go:123] Gathering logs for storage-provisioner [5f5a3a10483d] ...
I0403 15:41:03.128281    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 5f5a3a10483d"
I0403 15:41:03.137686    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:41:03.137694    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:41:03.145688    2883 logs.go:123] Gathering logs for kube-apiserver [14caac7d67b1] ...
I0403 15:41:03.145693    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 14caac7d67b1"
I0403 15:41:03.163479    2883 logs.go:123] Gathering logs for etcd [b924a1708183] ...
I0403 15:41:03.163489    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b924a1708183"
I0403 15:41:03.175852    2883 logs.go:123] Gathering logs for coredns [8f2060347218] ...
I0403 15:41:03.175861    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8f2060347218"
I0403 15:41:03.186713    2883 logs.go:123] Gathering logs for coredns [83fd7afc80b2] ...
I0403 15:41:03.186722    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 83fd7afc80b2"
I0403 15:41:03.197135    2883 logs.go:123] Gathering logs for kube-proxy [91d639e0bd94] ...
I0403 15:41:03.197138    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 91d639e0bd94"
I0403 15:41:03.208112    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:41:03.208114    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:41:03.272059    2883 logs.go:123] Gathering logs for kube-proxy [97226e36242b] ...
I0403 15:41:03.272068    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 97226e36242b"
I0403 15:41:03.281903    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:41:03.281910    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:41:03.332261    2883 logs.go:123] Gathering logs for etcd [d7a89c2bc54b] ...
I0403 15:41:03.332272    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d7a89c2bc54b"
I0403 15:41:03.345239    2883 logs.go:123] Gathering logs for coredns [cd07d4a273ba] ...
I0403 15:41:03.345246    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 cd07d4a273ba"
I0403 15:41:03.354223    2883 logs.go:123] Gathering logs for kube-scheduler [0536a7df6c85] ...
I0403 15:41:03.354242    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0536a7df6c85"
I0403 15:41:03.364401    2883 logs.go:123] Gathering logs for storage-provisioner [62fc41ad1270] ...
I0403 15:41:03.364406    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 62fc41ad1270"
I0403 15:41:03.373126    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:41:03.373133    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:41:03.403087    2883 logs.go:123] Gathering logs for kube-apiserver [2f77f96d6667] ...
I0403 15:41:03.403095    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2f77f96d6667"
I0403 15:41:03.415096    2883 logs.go:123] Gathering logs for coredns [7760f7aed06d] ...
I0403 15:41:03.415100    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7760f7aed06d"
I0403 15:41:03.424865    2883 logs.go:123] Gathering logs for kube-scheduler [bc6cd12c51a6] ...
I0403 15:41:03.424870    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 bc6cd12c51a6"
I0403 15:41:03.436367    2883 logs.go:123] Gathering logs for kube-controller-manager [e87664bdd7db] ...
I0403 15:41:03.436372    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e87664bdd7db"
I0403 15:41:03.454275    2883 logs.go:123] Gathering logs for kube-controller-manager [9055b4f68636] ...
I0403 15:41:03.454282    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 9055b4f68636"
I0403 15:41:03.470069    2883 logs.go:123] Gathering logs for container status ...
I0403 15:41:03.470074    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:41:06.006077    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:41:11.007426    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:41:11.007459    2883 kubeadm.go:640] restartCluster took 4m30.434014125s
W0403 15:41:11.007501    2883 out.go:239] 🤦  Unable to restart cluster, will reset it: apiserver health: apiserver healthz never reported healthy: context deadline exceeded
I0403 15:41:11.007569    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm reset --cri-socket /var/run/cri-dockerd.sock --force"
I0403 15:41:14.470448    2883 ssh_runner.go:235] Completed: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm reset --cri-socket /var/run/cri-dockerd.sock --force": (3.462866583s)
I0403 15:41:14.470540    2883 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I0403 15:41:14.476845    2883 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0403 15:41:14.481960    2883 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0403 15:41:14.486914    2883 kubeadm.go:152] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0403 15:41:14.486930    2883 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem"
I0403 15:41:14.514754    2883 kubeadm.go:322] [init] Using Kubernetes version: v1.28.3
I0403 15:41:14.514851    2883 kubeadm.go:322] [preflight] Running pre-flight checks
I0403 15:41:14.597874    2883 kubeadm.go:322] [preflight] Pulling images required for setting up a Kubernetes cluster
I0403 15:41:14.597979    2883 kubeadm.go:322] [preflight] This might take a minute or two, depending on the speed of your internet connection
I0403 15:41:14.598097    2883 kubeadm.go:322] [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
I0403 15:41:14.751205    2883 kubeadm.go:322] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0403 15:41:14.759059    2883 out.go:204]     ▪ Generating certificates and keys ...
I0403 15:41:14.759117    2883 kubeadm.go:322] [certs] Using existing ca certificate authority
I0403 15:41:14.759184    2883 kubeadm.go:322] [certs] Using existing apiserver certificate and key on disk
I0403 15:41:14.759231    2883 kubeadm.go:322] [certs] Using existing apiserver-kubelet-client certificate and key on disk
I0403 15:41:14.759281    2883 kubeadm.go:322] [certs] Using existing front-proxy-ca certificate authority
I0403 15:41:14.759337    2883 kubeadm.go:322] [certs] Using existing front-proxy-client certificate and key on disk
I0403 15:41:14.759372    2883 kubeadm.go:322] [certs] Using existing etcd/ca certificate authority
I0403 15:41:14.759425    2883 kubeadm.go:322] [certs] Using existing etcd/server certificate and key on disk
I0403 15:41:14.759458    2883 kubeadm.go:322] [certs] Using existing etcd/peer certificate and key on disk
I0403 15:41:14.759500    2883 kubeadm.go:322] [certs] Using existing etcd/healthcheck-client certificate and key on disk
I0403 15:41:14.759542    2883 kubeadm.go:322] [certs] Using existing apiserver-etcd-client certificate and key on disk
I0403 15:41:14.759570    2883 kubeadm.go:322] [certs] Using the existing "sa" key
I0403 15:41:14.759609    2883 kubeadm.go:322] [kubeconfig] Using kubeconfig folder "/etc/kubernetes"
I0403 15:41:14.890448    2883 kubeadm.go:322] [kubeconfig] Writing "admin.conf" kubeconfig file
I0403 15:41:15.018783    2883 kubeadm.go:322] [kubeconfig] Writing "kubelet.conf" kubeconfig file
I0403 15:41:15.141989    2883 kubeadm.go:322] [kubeconfig] Writing "controller-manager.conf" kubeconfig file
I0403 15:41:15.370742    2883 kubeadm.go:322] [kubeconfig] Writing "scheduler.conf" kubeconfig file
I0403 15:41:15.370954    2883 kubeadm.go:322] [etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
I0403 15:41:15.373243    2883 kubeadm.go:322] [control-plane] Using manifest folder "/etc/kubernetes/manifests"
I0403 15:41:15.377562    2883 out.go:204]     ▪ Booting up control plane ...
I0403 15:41:15.377665    2883 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-apiserver"
I0403 15:41:15.377765    2883 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-controller-manager"
I0403 15:41:15.377827    2883 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-scheduler"
I0403 15:41:15.382687    2883 kubeadm.go:322] [kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
I0403 15:41:15.382743    2883 kubeadm.go:322] [kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
I0403 15:41:15.382774    2883 kubeadm.go:322] [kubelet-start] Starting the kubelet
I0403 15:41:15.485280    2883 kubeadm.go:322] [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests". This can take up to 4m0s
I0403 15:41:19.986842    2883 kubeadm.go:322] [apiclient] All control plane components are healthy after 4.501562 seconds
I0403 15:41:19.986908    2883 kubeadm.go:322] [upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
I0403 15:41:19.995328    2883 kubeadm.go:322] [kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
I0403 15:41:20.507574    2883 kubeadm.go:322] [upload-certs] Skipping phase. Please see --upload-certs
I0403 15:41:20.507767    2883 kubeadm.go:322] [mark-control-plane] Marking the node minikube as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
I0403 15:41:21.015919    2883 kubeadm.go:322] [bootstrap-token] Using token: vrmg0f.vfavwcf6mcrdagc4
I0403 15:41:21.018940    2883 out.go:204]     ▪ Configuring RBAC rules ...
I0403 15:41:21.019042    2883 kubeadm.go:322] [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
I0403 15:41:21.020250    2883 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
I0403 15:41:21.027438    2883 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
I0403 15:41:21.028887    2883 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
I0403 15:41:21.030883    2883 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
I0403 15:41:21.032331    2883 kubeadm.go:322] [bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
I0403 15:41:21.039314    2883 kubeadm.go:322] [kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
I0403 15:41:21.218519    2883 kubeadm.go:322] [addons] Applied essential addon: CoreDNS
I0403 15:41:21.423383    2883 kubeadm.go:322] [addons] Applied essential addon: kube-proxy
I0403 15:41:21.423959    2883 kubeadm.go:322] 
I0403 15:41:21.423989    2883 kubeadm.go:322] Your Kubernetes control-plane has initialized successfully!
I0403 15:41:21.423991    2883 kubeadm.go:322] 
I0403 15:41:21.424048    2883 kubeadm.go:322] To start using your cluster, you need to run the following as a regular user:
I0403 15:41:21.424056    2883 kubeadm.go:322] 
I0403 15:41:21.424095    2883 kubeadm.go:322]   mkdir -p $HOME/.kube
I0403 15:41:21.424161    2883 kubeadm.go:322]   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
I0403 15:41:21.424192    2883 kubeadm.go:322]   sudo chown $(id -u):$(id -g) $HOME/.kube/config
I0403 15:41:21.424194    2883 kubeadm.go:322] 
I0403 15:41:21.424234    2883 kubeadm.go:322] Alternatively, if you are the root user, you can run:
I0403 15:41:21.424243    2883 kubeadm.go:322] 
I0403 15:41:21.424272    2883 kubeadm.go:322]   export KUBECONFIG=/etc/kubernetes/admin.conf
I0403 15:41:21.424274    2883 kubeadm.go:322] 
I0403 15:41:21.424349    2883 kubeadm.go:322] You should now deploy a pod network to the cluster.
I0403 15:41:21.424426    2883 kubeadm.go:322] Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
I0403 15:41:21.424477    2883 kubeadm.go:322]   https://kubernetes.io/docs/concepts/cluster-administration/addons/
I0403 15:41:21.424480    2883 kubeadm.go:322] 
I0403 15:41:21.424532    2883 kubeadm.go:322] You can now join any number of control-plane nodes by copying certificate authorities
I0403 15:41:21.424585    2883 kubeadm.go:322] and service account keys on each node and then running the following as root:
I0403 15:41:21.424587    2883 kubeadm.go:322] 
I0403 15:41:21.424651    2883 kubeadm.go:322]   kubeadm join control-plane.minikube.internal:8443 --token vrmg0f.vfavwcf6mcrdagc4 \
I0403 15:41:21.424744    2883 kubeadm.go:322] 	--discovery-token-ca-cert-hash sha256:1d5536f8aa0423be1287ee4d8b035451e232c84046a6043d6178944c1e9a35bc \
I0403 15:41:21.424753    2883 kubeadm.go:322] 	--control-plane 
I0403 15:41:21.424756    2883 kubeadm.go:322] 
I0403 15:41:21.424839    2883 kubeadm.go:322] Then you can join any number of worker nodes by running the following on each as root:
I0403 15:41:21.424848    2883 kubeadm.go:322] 
I0403 15:41:21.424941    2883 kubeadm.go:322] kubeadm join control-plane.minikube.internal:8443 --token vrmg0f.vfavwcf6mcrdagc4 \
I0403 15:41:21.425005    2883 kubeadm.go:322] 	--discovery-token-ca-cert-hash sha256:1d5536f8aa0423be1287ee4d8b035451e232c84046a6043d6178944c1e9a35bc 
I0403 15:41:21.425091    2883 kubeadm.go:322] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0403 15:41:21.425099    2883 cni.go:84] Creating CNI manager for ""
I0403 15:41:21.425106    2883 cni.go:158] "qemu2" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0403 15:41:21.428714    2883 out.go:177] 🔗  Configuring bridge CNI (Container Networking Interface) ...
I0403 15:41:21.431414    2883 ssh_runner.go:195] Run: sudo mkdir -p /etc/cni/net.d
I0403 15:41:21.435122    2883 ssh_runner.go:362] scp memory --> /etc/cni/net.d/1-k8s.conflist (457 bytes)
I0403 15:41:21.440961    2883 ssh_runner.go:195] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I0403 15:41:21.441032    2883 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.28.3/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig
I0403 15:41:21.441033    2883 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.28.3/kubectl label nodes minikube.k8s.io/version=v1.32.0 minikube.k8s.io/commit=8220a6eb95f0a4d75f7f2d7b14cef975f050512d minikube.k8s.io/name=minikube minikube.k8s.io/updated_at=2025_04_03T15_41_21_0700 minikube.k8s.io/primary=true --all --overwrite --kubeconfig=/var/lib/minikube/kubeconfig
I0403 15:41:21.510369    2883 ops.go:34] apiserver oom_adj: -16
I0403 15:41:21.510451    2883 kubeadm.go:1081] duration metric: took 69.480875ms to wait for elevateKubeSystemPrivileges.
I0403 15:41:21.510478    2883 host.go:66] Checking if "minikube" exists ...
I0403 15:41:21.511819    2883 main.go:141] libmachine: Using SSH client type: external
I0403 15:41:21.511831    2883 main.go:141] libmachine: Using SSH private key: /Users/T971012/.minikube/machines/minikube/id_rsa (-rw-------)
I0403 15:41:21.511844    2883 main.go:141] libmachine: &{[-F /dev/null -o ConnectionAttempts=3 -o ConnectTimeout=10 -o ControlMaster=no -o ControlPath=none -o LogLevel=quiet -o PasswordAuthentication=no -o ServerAliveInterval=60 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null docker@localhost -o IdentitiesOnly=yes -i /Users/T971012/.minikube/machines/minikube/id_rsa -p 49627] /usr/bin/ssh <nil>}
I0403 15:41:21.511855    2883 main.go:141] libmachine: /usr/bin/ssh -F /dev/null -o ConnectionAttempts=3 -o ConnectTimeout=10 -o ControlMaster=no -o ControlPath=none -o LogLevel=quiet -o PasswordAuthentication=no -o ServerAliveInterval=60 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null docker@localhost -o IdentitiesOnly=yes -i /Users/T971012/.minikube/machines/minikube/id_rsa -p 49627 -f -NTL 49663:localhost:8443
I0403 15:41:21.566096    2883 kubeadm.go:406] StartCluster complete in 4m41.062472541s
I0403 15:41:21.566158    2883 settings.go:142] acquiring lock: {Name:mk5d843978d9860310b779df1acd02925564cc68 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0403 15:41:21.566344    2883 settings.go:150] Updating kubeconfig:  /Users/T971012/.kube/config
I0403 15:41:21.567248    2883 lock.go:35] WriteFile acquiring /Users/T971012/.kube/config: {Name:mk23b63c95b0136afdd6939e96ddddc5ca18c0aa Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0403 15:41:21.567642    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml"
I0403 15:41:21.567611    2883 addons.go:499] enable addons start: toEnable=map[ambassador:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:false default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false helm-tiller:false inaccel:false ingress:false ingress-dns:false inspektor-gadget:false istio:false istio-provisioner:false kong:false kubeflow:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-device-plugin:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false storage-provisioner-rancher:false volumesnapshots:false]
I0403 15:41:21.567750    2883 addons.go:69] Setting storage-provisioner=true in profile "minikube"
I0403 15:41:21.567766    2883 addons.go:231] Setting addon storage-provisioner=true in "minikube"
W0403 15:41:21.567769    2883 addons.go:240] addon storage-provisioner should already be in state true
I0403 15:41:21.567776    2883 addons.go:69] Setting default-storageclass=true in profile "minikube"
I0403 15:41:21.567851    2883 host.go:66] Checking if "minikube" exists ...
I0403 15:41:21.567862    2883 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0403 15:41:21.567951    2883 config.go:182] Loaded profile config "minikube": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.28.3
I0403 15:41:21.571338    2883 out.go:177]     ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
I0403 15:41:21.574347    2883 addons.go:423] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0403 15:41:21.574352    2883 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0403 15:41:21.574358    2883 sshutil.go:53] new ssh client: &{IP:localhost Port:49627 SSHKeyPath:/Users/T971012/.minikube/machines/minikube/id_rsa Username:docker}
I0403 15:41:21.575775    2883 addons.go:231] Setting addon default-storageclass=true in "minikube"
W0403 15:41:21.575779    2883 addons.go:240] addon default-storageclass should already be in state true
I0403 15:41:21.575788    2883 host.go:66] Checking if "minikube" exists ...
I0403 15:41:21.576654    2883 addons.go:423] installing /etc/kubernetes/addons/storageclass.yaml
I0403 15:41:21.576658    2883 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I0403 15:41:21.576662    2883 sshutil.go:53] new ssh client: &{IP:localhost Port:49627 SSHKeyPath:/Users/T971012/.minikube/machines/minikube/id_rsa Username:docker}
I0403 15:41:21.619827    2883 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.28.3/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I0403 15:41:21.633545    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed -e '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           10.0.2.2 host.minikube.internal\n           fallthrough\n        }' -e '/^        errors *$/i \        log' | sudo /var/lib/minikube/binaries/v1.28.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -"
I0403 15:41:21.636536    2883 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.28.3/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0403 15:41:22.089966    2883 start.go:926] {"host.minikube.internal": 10.0.2.2} host record injected into CoreDNS's ConfigMap
W0403 15:41:51.568894    2883 kapi.go:245] failed rescaling "coredns" deployment in "kube-system" namespace and "minikube" context to 1 replicas: non-retryable failure while getting "coredns" deployment scale: Get "https://10.0.2.15:8443/apis/apps/v1/namespaces/kube-system/deployments/coredns/scale": dial tcp 10.0.2.15:8443: i/o timeout
E0403 15:41:51.568907    2883 start.go:219] Unable to scale down deployment "coredns" in namespace "kube-system" to 1 replica: non-retryable failure while getting "coredns" deployment scale: Get "https://10.0.2.15:8443/apis/apps/v1/namespaces/kube-system/deployments/coredns/scale": dial tcp 10.0.2.15:8443: i/o timeout
I0403 15:41:51.568933    2883 start.go:223] Will wait 6m0s for node &{Name: IP:10.0.2.15 Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}
I0403 15:41:51.578221    2883 out.go:177] 🔎  Verifying Kubernetes components...
I0403 15:41:51.581388    2883 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I0403 15:41:51.586986    2883 api_server.go:52] waiting for apiserver process to appear ...
I0403 15:41:51.587051    2883 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0403 15:41:51.591677    2883 api_server.go:72] duration metric: took 22.730459ms to wait for apiserver process to appear ...
I0403 15:41:51.591684    2883 api_server.go:88] waiting for apiserver healthz status ...
I0403 15:41:51.591690    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
W0403 15:41:52.064151    2883 out.go:239] ❗  Enabling 'default-storageclass' returned an error: running callbacks: [Error making standard the default storage class: Error listing StorageClasses: Get "https://10.0.2.15:8443/apis/storage.k8s.io/v1/storageclasses": dial tcp 10.0.2.15:8443: i/o timeout]
I0403 15:41:52.068333    2883 out.go:177] 🌟  Enabled addons: storage-provisioner
I0403 15:41:52.079183    2883 addons.go:502] enable addons completed in 30.511592834s: enabled=[storage-provisioner]
I0403 15:41:56.594246    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:41:56.594283    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:42:01.596510    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:42:02.098625    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:42:07.098968    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:42:07.098981    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:42:12.099351    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:42:12.099365    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:42:17.099915    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:42:17.099942    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:42:22.100594    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:42:22.100611    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:42:27.101427    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:42:27.101469    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:42:32.102490    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:42:32.102507    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:42:37.103927    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:42:37.103951    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:42:42.105663    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:42:42.105689    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:42:47.106011    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:42:47.106025    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:42:52.108167    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:42:52.108270    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:42:52.120625    2883 logs.go:284] 1 containers: [54969944ff79]
I0403 15:42:52.120674    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:42:52.131455    2883 logs.go:284] 1 containers: [f2dc786718d5]
I0403 15:42:52.131539    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:42:52.142493    2883 logs.go:284] 2 containers: [e3e97638f48e 3dd53c654073]
I0403 15:42:52.142583    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:42:52.152212    2883 logs.go:284] 1 containers: [649a72e58afd]
I0403 15:42:52.152280    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:42:52.162610    2883 logs.go:284] 1 containers: [8060ee68e63b]
I0403 15:42:52.162683    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:42:52.173750    2883 logs.go:284] 1 containers: [fef3a791678b]
I0403 15:42:52.173833    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:42:52.183474    2883 logs.go:284] 0 containers: []
W0403 15:42:52.183479    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:42:52.183545    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:42:52.193236    2883 logs.go:284] 1 containers: [a9ce126d3a6b]
I0403 15:42:52.193250    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:42:52.193267    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:42:52.249195    2883 logs.go:123] Gathering logs for coredns [e3e97638f48e] ...
I0403 15:42:52.249201    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e3e97638f48e"
I0403 15:42:52.263070    2883 logs.go:123] Gathering logs for kube-controller-manager [fef3a791678b] ...
I0403 15:42:52.263076    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 fef3a791678b"
I0403 15:42:52.288074    2883 logs.go:123] Gathering logs for storage-provisioner [a9ce126d3a6b] ...
I0403 15:42:52.288080    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a9ce126d3a6b"
I0403 15:42:52.299871    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:42:52.299876    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:42:52.310057    2883 logs.go:123] Gathering logs for coredns [3dd53c654073] ...
I0403 15:42:52.310073    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3dd53c654073"
I0403 15:42:52.321466    2883 logs.go:123] Gathering logs for kube-scheduler [649a72e58afd] ...
I0403 15:42:52.321479    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 649a72e58afd"
I0403 15:42:52.337788    2883 logs.go:123] Gathering logs for kube-proxy [8060ee68e63b] ...
I0403 15:42:52.337794    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8060ee68e63b"
I0403 15:42:52.350267    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:42:52.350276    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:42:52.394300    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:42:52.394310    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:42:52.478954    2883 logs.go:123] Gathering logs for kube-apiserver [54969944ff79] ...
I0403 15:42:52.478958    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 54969944ff79"
I0403 15:42:52.496325    2883 logs.go:123] Gathering logs for etcd [f2dc786718d5] ...
I0403 15:42:52.496328    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 f2dc786718d5"
I0403 15:42:52.512633    2883 logs.go:123] Gathering logs for container status ...
I0403 15:42:52.512643    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:42:55.055948    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:43:00.058321    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:43:00.058455    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:43:00.070016    2883 logs.go:284] 1 containers: [54969944ff79]
I0403 15:43:00.070088    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:43:00.079914    2883 logs.go:284] 1 containers: [f2dc786718d5]
I0403 15:43:00.080000    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:43:00.092935    2883 logs.go:284] 2 containers: [e3e97638f48e 3dd53c654073]
I0403 15:43:00.093032    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:43:00.102192    2883 logs.go:284] 1 containers: [649a72e58afd]
I0403 15:43:00.102267    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:43:00.112797    2883 logs.go:284] 1 containers: [8060ee68e63b]
I0403 15:43:00.112848    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:43:00.124174    2883 logs.go:284] 1 containers: [fef3a791678b]
I0403 15:43:00.124274    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:43:00.134578    2883 logs.go:284] 0 containers: []
W0403 15:43:00.134581    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:43:00.134646    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:43:00.146429    2883 logs.go:284] 1 containers: [a9ce126d3a6b]
I0403 15:43:00.146438    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:43:00.146447    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:43:00.158158    2883 logs.go:123] Gathering logs for kube-apiserver [54969944ff79] ...
I0403 15:43:00.158164    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 54969944ff79"
I0403 15:43:00.176694    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:43:00.176700    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:43:00.217792    2883 logs.go:123] Gathering logs for container status ...
I0403 15:43:00.217799    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:43:00.257337    2883 logs.go:123] Gathering logs for coredns [3dd53c654073] ...
I0403 15:43:00.257349    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3dd53c654073"
I0403 15:43:00.270336    2883 logs.go:123] Gathering logs for kube-proxy [8060ee68e63b] ...
I0403 15:43:00.270352    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8060ee68e63b"
I0403 15:43:00.281989    2883 logs.go:123] Gathering logs for storage-provisioner [a9ce126d3a6b] ...
I0403 15:43:00.282004    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a9ce126d3a6b"
I0403 15:43:00.294730    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:43:00.294736    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:43:00.350695    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:43:00.350704    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:43:00.441895    2883 logs.go:123] Gathering logs for etcd [f2dc786718d5] ...
I0403 15:43:00.441904    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 f2dc786718d5"
I0403 15:43:00.459657    2883 logs.go:123] Gathering logs for kube-scheduler [649a72e58afd] ...
I0403 15:43:00.459664    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 649a72e58afd"
I0403 15:43:00.478492    2883 logs.go:123] Gathering logs for coredns [e3e97638f48e] ...
I0403 15:43:00.478498    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e3e97638f48e"
I0403 15:43:00.490665    2883 logs.go:123] Gathering logs for kube-controller-manager [fef3a791678b] ...
I0403 15:43:00.490677    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 fef3a791678b"
I0403 15:43:03.017609    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:43:08.019879    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:43:08.020075    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:43:08.031172    2883 logs.go:284] 1 containers: [54969944ff79]
I0403 15:43:08.031244    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:43:08.041583    2883 logs.go:284] 1 containers: [f2dc786718d5]
I0403 15:43:08.041662    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:43:08.052410    2883 logs.go:284] 2 containers: [e3e97638f48e 3dd53c654073]
I0403 15:43:08.052459    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:43:08.064364    2883 logs.go:284] 1 containers: [649a72e58afd]
I0403 15:43:08.064444    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:43:08.074078    2883 logs.go:284] 1 containers: [8060ee68e63b]
I0403 15:43:08.074148    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:43:08.084328    2883 logs.go:284] 1 containers: [fef3a791678b]
I0403 15:43:08.084402    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:43:08.093925    2883 logs.go:284] 0 containers: []
W0403 15:43:08.093931    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:43:08.094007    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:43:08.103863    2883 logs.go:284] 1 containers: [a9ce126d3a6b]
I0403 15:43:08.103881    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:43:08.103885    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:43:08.185364    2883 logs.go:123] Gathering logs for container status ...
I0403 15:43:08.185375    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:43:08.229559    2883 logs.go:123] Gathering logs for kube-controller-manager [fef3a791678b] ...
I0403 15:43:08.229565    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 fef3a791678b"
I0403 15:43:08.257280    2883 logs.go:123] Gathering logs for storage-provisioner [a9ce126d3a6b] ...
I0403 15:43:08.257290    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a9ce126d3a6b"
I0403 15:43:08.275491    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:43:08.275497    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:43:08.319870    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:43:08.319875    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:43:08.329701    2883 logs.go:123] Gathering logs for coredns [e3e97638f48e] ...
I0403 15:43:08.329707    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e3e97638f48e"
I0403 15:43:08.346727    2883 logs.go:123] Gathering logs for etcd [f2dc786718d5] ...
I0403 15:43:08.346733    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 f2dc786718d5"
I0403 15:43:08.363294    2883 logs.go:123] Gathering logs for coredns [3dd53c654073] ...
I0403 15:43:08.363311    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3dd53c654073"
I0403 15:43:08.374896    2883 logs.go:123] Gathering logs for kube-scheduler [649a72e58afd] ...
I0403 15:43:08.374902    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 649a72e58afd"
I0403 15:43:08.391480    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:43:08.391487    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:43:08.441705    2883 logs.go:123] Gathering logs for kube-apiserver [54969944ff79] ...
I0403 15:43:08.441713    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 54969944ff79"
I0403 15:43:08.460820    2883 logs.go:123] Gathering logs for kube-proxy [8060ee68e63b] ...
I0403 15:43:08.460826    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8060ee68e63b"
I0403 15:43:10.975422    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:43:15.977831    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:43:15.977956    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:43:15.990268    2883 logs.go:284] 1 containers: [54969944ff79]
I0403 15:43:15.990318    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:43:16.000539    2883 logs.go:284] 1 containers: [f2dc786718d5]
I0403 15:43:16.000619    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:43:16.009809    2883 logs.go:284] 2 containers: [e3e97638f48e 3dd53c654073]
I0403 15:43:16.009850    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:43:16.020954    2883 logs.go:284] 1 containers: [649a72e58afd]
I0403 15:43:16.020976    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:43:16.031441    2883 logs.go:284] 1 containers: [8060ee68e63b]
I0403 15:43:16.031512    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:43:16.044764    2883 logs.go:284] 1 containers: [fef3a791678b]
I0403 15:43:16.044826    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:43:16.056679    2883 logs.go:284] 0 containers: []
W0403 15:43:16.056684    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:43:16.056755    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:43:16.067175    2883 logs.go:284] 1 containers: [a9ce126d3a6b]
I0403 15:43:16.067190    2883 logs.go:123] Gathering logs for kube-proxy [8060ee68e63b] ...
I0403 15:43:16.067196    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8060ee68e63b"
I0403 15:43:16.078922    2883 logs.go:123] Gathering logs for storage-provisioner [a9ce126d3a6b] ...
I0403 15:43:16.078928    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a9ce126d3a6b"
I0403 15:43:16.092369    2883 logs.go:123] Gathering logs for coredns [3dd53c654073] ...
I0403 15:43:16.092374    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3dd53c654073"
I0403 15:43:16.103973    2883 logs.go:123] Gathering logs for kube-scheduler [649a72e58afd] ...
I0403 15:43:16.103983    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 649a72e58afd"
I0403 15:43:16.120455    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:43:16.120461    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:43:16.173839    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:43:16.173846    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:43:16.262287    2883 logs.go:123] Gathering logs for kube-apiserver [54969944ff79] ...
I0403 15:43:16.262294    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 54969944ff79"
I0403 15:43:16.282351    2883 logs.go:123] Gathering logs for coredns [e3e97638f48e] ...
I0403 15:43:16.282354    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e3e97638f48e"
I0403 15:43:16.295227    2883 logs.go:123] Gathering logs for kube-controller-manager [fef3a791678b] ...
I0403 15:43:16.295260    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 fef3a791678b"
I0403 15:43:16.323617    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:43:16.323623    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:43:16.333774    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:43:16.333782    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:43:16.377777    2883 logs.go:123] Gathering logs for container status ...
I0403 15:43:16.377783    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:43:16.422836    2883 logs.go:123] Gathering logs for etcd [f2dc786718d5] ...
I0403 15:43:16.422845    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 f2dc786718d5"
I0403 15:43:18.941144    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:43:23.943428    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:43:23.943576    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:43:23.955240    2883 logs.go:284] 1 containers: [54969944ff79]
I0403 15:43:23.955355    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:43:23.965762    2883 logs.go:284] 1 containers: [f2dc786718d5]
I0403 15:43:23.965794    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:43:23.976210    2883 logs.go:284] 2 containers: [e3e97638f48e 3dd53c654073]
I0403 15:43:23.976228    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:43:23.986714    2883 logs.go:284] 1 containers: [649a72e58afd]
I0403 15:43:23.986810    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:43:23.995112    2883 logs.go:284] 1 containers: [8060ee68e63b]
I0403 15:43:23.995177    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:43:24.004479    2883 logs.go:284] 1 containers: [fef3a791678b]
I0403 15:43:24.004534    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:43:24.015578    2883 logs.go:284] 0 containers: []
W0403 15:43:24.015585    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:43:24.015649    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:43:24.026774    2883 logs.go:284] 1 containers: [a9ce126d3a6b]
I0403 15:43:24.026784    2883 logs.go:123] Gathering logs for kube-apiserver [54969944ff79] ...
I0403 15:43:24.026788    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 54969944ff79"
I0403 15:43:24.044348    2883 logs.go:123] Gathering logs for coredns [e3e97638f48e] ...
I0403 15:43:24.044351    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e3e97638f48e"
I0403 15:43:24.055617    2883 logs.go:123] Gathering logs for kube-controller-manager [fef3a791678b] ...
I0403 15:43:24.055620    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 fef3a791678b"
I0403 15:43:24.075322    2883 logs.go:123] Gathering logs for container status ...
I0403 15:43:24.075325    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:43:24.116367    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:43:24.116397    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:43:24.170453    2883 logs.go:123] Gathering logs for storage-provisioner [a9ce126d3a6b] ...
I0403 15:43:24.170464    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a9ce126d3a6b"
I0403 15:43:24.183122    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:43:24.183128    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:43:24.224348    2883 logs.go:123] Gathering logs for kube-proxy [8060ee68e63b] ...
I0403 15:43:24.224356    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8060ee68e63b"
I0403 15:43:24.237450    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:43:24.237455    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:43:24.320238    2883 logs.go:123] Gathering logs for etcd [f2dc786718d5] ...
I0403 15:43:24.320254    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 f2dc786718d5"
I0403 15:43:24.336597    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:43:24.336607    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:43:24.346469    2883 logs.go:123] Gathering logs for kube-scheduler [649a72e58afd] ...
I0403 15:43:24.346473    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 649a72e58afd"
I0403 15:43:24.372438    2883 logs.go:123] Gathering logs for coredns [3dd53c654073] ...
I0403 15:43:24.372441    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3dd53c654073"
I0403 15:43:26.889482    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:43:31.891915    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:43:31.892071    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:43:31.904660    2883 logs.go:284] 1 containers: [54969944ff79]
I0403 15:43:31.904723    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:43:31.919927    2883 logs.go:284] 1 containers: [f2dc786718d5]
I0403 15:43:31.920007    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:43:31.931901    2883 logs.go:284] 2 containers: [e3e97638f48e 3dd53c654073]
I0403 15:43:31.931946    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:43:31.942031    2883 logs.go:284] 1 containers: [649a72e58afd]
I0403 15:43:31.942095    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:43:31.952369    2883 logs.go:284] 1 containers: [8060ee68e63b]
I0403 15:43:31.952406    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:43:31.962928    2883 logs.go:284] 1 containers: [fef3a791678b]
I0403 15:43:31.962986    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:43:31.973568    2883 logs.go:284] 0 containers: []
W0403 15:43:31.973573    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:43:31.973639    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:43:31.986223    2883 logs.go:284] 1 containers: [a9ce126d3a6b]
I0403 15:43:31.986234    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:43:31.986237    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:43:32.030840    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:43:32.030844    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:43:32.041015    2883 logs.go:123] Gathering logs for kube-apiserver [54969944ff79] ...
I0403 15:43:32.041018    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 54969944ff79"
I0403 15:43:32.058837    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:43:32.058849    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:43:32.101250    2883 logs.go:123] Gathering logs for kube-scheduler [649a72e58afd] ...
I0403 15:43:32.101261    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 649a72e58afd"
I0403 15:43:32.123341    2883 logs.go:123] Gathering logs for kube-proxy [8060ee68e63b] ...
I0403 15:43:32.123349    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8060ee68e63b"
I0403 15:43:32.146097    2883 logs.go:123] Gathering logs for storage-provisioner [a9ce126d3a6b] ...
I0403 15:43:32.146107    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a9ce126d3a6b"
I0403 15:43:32.176040    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:43:32.176052    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:43:32.260474    2883 logs.go:123] Gathering logs for etcd [f2dc786718d5] ...
I0403 15:43:32.260481    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 f2dc786718d5"
I0403 15:43:32.276479    2883 logs.go:123] Gathering logs for coredns [e3e97638f48e] ...
I0403 15:43:32.276482    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e3e97638f48e"
I0403 15:43:32.289417    2883 logs.go:123] Gathering logs for coredns [3dd53c654073] ...
I0403 15:43:32.289438    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3dd53c654073"
I0403 15:43:32.309295    2883 logs.go:123] Gathering logs for kube-controller-manager [fef3a791678b] ...
I0403 15:43:32.309304    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 fef3a791678b"
I0403 15:43:32.332273    2883 logs.go:123] Gathering logs for container status ...
I0403 15:43:32.332279    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:43:34.878182    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:43:39.880548    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:43:39.880644    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:43:39.895078    2883 logs.go:284] 1 containers: [54969944ff79]
I0403 15:43:39.895172    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:43:39.906844    2883 logs.go:284] 1 containers: [f2dc786718d5]
I0403 15:43:39.906878    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:43:39.915916    2883 logs.go:284] 2 containers: [e3e97638f48e 3dd53c654073]
I0403 15:43:39.915953    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:43:39.927432    2883 logs.go:284] 1 containers: [649a72e58afd]
I0403 15:43:39.927494    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:43:39.938096    2883 logs.go:284] 1 containers: [8060ee68e63b]
I0403 15:43:39.938166    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:43:39.950522    2883 logs.go:284] 1 containers: [fef3a791678b]
I0403 15:43:39.950559    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:43:39.960573    2883 logs.go:284] 0 containers: []
W0403 15:43:39.960578    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:43:39.960645    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:43:39.970936    2883 logs.go:284] 1 containers: [a9ce126d3a6b]
I0403 15:43:39.970953    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:43:39.970961    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:43:40.052950    2883 logs.go:123] Gathering logs for storage-provisioner [a9ce126d3a6b] ...
I0403 15:43:40.052956    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a9ce126d3a6b"
I0403 15:43:40.072189    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:43:40.072196    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:43:40.116986    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:43:40.116992    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:43:40.169994    2883 logs.go:123] Gathering logs for etcd [f2dc786718d5] ...
I0403 15:43:40.170001    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 f2dc786718d5"
I0403 15:43:40.187247    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:43:40.187253    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:43:40.196750    2883 logs.go:123] Gathering logs for kube-apiserver [54969944ff79] ...
I0403 15:43:40.196755    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 54969944ff79"
I0403 15:43:40.213891    2883 logs.go:123] Gathering logs for container status ...
I0403 15:43:40.213914    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:43:40.254104    2883 logs.go:123] Gathering logs for coredns [e3e97638f48e] ...
I0403 15:43:40.254118    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e3e97638f48e"
I0403 15:43:40.267816    2883 logs.go:123] Gathering logs for coredns [3dd53c654073] ...
I0403 15:43:40.267822    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3dd53c654073"
I0403 15:43:40.279379    2883 logs.go:123] Gathering logs for kube-scheduler [649a72e58afd] ...
I0403 15:43:40.279385    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 649a72e58afd"
I0403 15:43:40.307110    2883 logs.go:123] Gathering logs for kube-proxy [8060ee68e63b] ...
I0403 15:43:40.307119    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8060ee68e63b"
I0403 15:43:40.325445    2883 logs.go:123] Gathering logs for kube-controller-manager [fef3a791678b] ...
I0403 15:43:40.325451    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 fef3a791678b"
I0403 15:43:42.852369    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:43:47.854601    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:43:47.854746    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:43:47.866614    2883 logs.go:284] 1 containers: [54969944ff79]
I0403 15:43:47.866718    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:43:47.876701    2883 logs.go:284] 1 containers: [f2dc786718d5]
I0403 15:43:47.876764    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:43:47.887043    2883 logs.go:284] 2 containers: [e3e97638f48e 3dd53c654073]
I0403 15:43:47.887100    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:43:47.897524    2883 logs.go:284] 1 containers: [649a72e58afd]
I0403 15:43:47.897603    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:43:47.907792    2883 logs.go:284] 1 containers: [8060ee68e63b]
I0403 15:43:47.907871    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:43:47.917770    2883 logs.go:284] 1 containers: [fef3a791678b]
I0403 15:43:47.917842    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:43:47.927468    2883 logs.go:284] 0 containers: []
W0403 15:43:47.927474    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:43:47.927563    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:43:47.937652    2883 logs.go:284] 1 containers: [a9ce126d3a6b]
I0403 15:43:47.937664    2883 logs.go:123] Gathering logs for coredns [3dd53c654073] ...
I0403 15:43:47.937668    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3dd53c654073"
I0403 15:43:47.949182    2883 logs.go:123] Gathering logs for storage-provisioner [a9ce126d3a6b] ...
I0403 15:43:47.949189    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a9ce126d3a6b"
I0403 15:43:47.965213    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:43:47.965220    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:43:48.003568    2883 logs.go:123] Gathering logs for container status ...
I0403 15:43:48.003574    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:43:48.045859    2883 logs.go:123] Gathering logs for etcd [f2dc786718d5] ...
I0403 15:43:48.045872    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 f2dc786718d5"
I0403 15:43:48.061448    2883 logs.go:123] Gathering logs for coredns [e3e97638f48e] ...
I0403 15:43:48.061453    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e3e97638f48e"
I0403 15:43:48.077610    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:43:48.077617    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:43:48.088948    2883 logs.go:123] Gathering logs for kube-proxy [8060ee68e63b] ...
I0403 15:43:48.088953    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8060ee68e63b"
I0403 15:43:48.102288    2883 logs.go:123] Gathering logs for kube-controller-manager [fef3a791678b] ...
I0403 15:43:48.102294    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 fef3a791678b"
I0403 15:43:48.123968    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:43:48.123975    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:43:48.172136    2883 logs.go:123] Gathering logs for kube-apiserver [54969944ff79] ...
I0403 15:43:48.172142    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 54969944ff79"
I0403 15:43:48.187844    2883 logs.go:123] Gathering logs for kube-scheduler [649a72e58afd] ...
I0403 15:43:48.187850    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 649a72e58afd"
I0403 15:43:48.206166    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:43:48.206177    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:43:50.789494    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:43:55.791704    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:43:55.791829    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:43:55.804350    2883 logs.go:284] 1 containers: [54969944ff79]
I0403 15:43:55.804417    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:43:55.814620    2883 logs.go:284] 1 containers: [f2dc786718d5]
I0403 15:43:55.814676    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:43:55.827282    2883 logs.go:284] 2 containers: [e3e97638f48e 3dd53c654073]
I0403 15:43:55.827352    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:43:55.837370    2883 logs.go:284] 1 containers: [649a72e58afd]
I0403 15:43:55.837448    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:43:55.847423    2883 logs.go:284] 1 containers: [8060ee68e63b]
I0403 15:43:55.847493    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:43:55.857398    2883 logs.go:284] 1 containers: [fef3a791678b]
I0403 15:43:55.857481    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:43:55.872498    2883 logs.go:284] 0 containers: []
W0403 15:43:55.872509    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:43:55.872618    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:43:55.882677    2883 logs.go:284] 1 containers: [a9ce126d3a6b]
I0403 15:43:55.882697    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:43:55.882707    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:43:55.919753    2883 logs.go:123] Gathering logs for container status ...
I0403 15:43:55.919760    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:43:55.959748    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:43:55.959752    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:43:56.004395    2883 logs.go:123] Gathering logs for storage-provisioner [a9ce126d3a6b] ...
I0403 15:43:56.004402    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a9ce126d3a6b"
I0403 15:43:56.017295    2883 logs.go:123] Gathering logs for kube-proxy [8060ee68e63b] ...
I0403 15:43:56.017300    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8060ee68e63b"
I0403 15:43:56.029838    2883 logs.go:123] Gathering logs for kube-controller-manager [fef3a791678b] ...
I0403 15:43:56.029841    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 fef3a791678b"
I0403 15:43:56.050573    2883 logs.go:123] Gathering logs for kube-apiserver [54969944ff79] ...
I0403 15:43:56.050577    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 54969944ff79"
I0403 15:43:56.069247    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:43:56.069254    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:43:56.079354    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:43:56.079385    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:43:56.162533    2883 logs.go:123] Gathering logs for coredns [3dd53c654073] ...
I0403 15:43:56.162547    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3dd53c654073"
I0403 15:43:56.176198    2883 logs.go:123] Gathering logs for kube-scheduler [649a72e58afd] ...
I0403 15:43:56.176204    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 649a72e58afd"
I0403 15:43:56.193156    2883 logs.go:123] Gathering logs for etcd [f2dc786718d5] ...
I0403 15:43:56.193167    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 f2dc786718d5"
I0403 15:43:56.208830    2883 logs.go:123] Gathering logs for coredns [e3e97638f48e] ...
I0403 15:43:56.208841    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e3e97638f48e"
I0403 15:43:58.722422    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:44:03.724695    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:44:03.724814    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:44:03.737207    2883 logs.go:284] 1 containers: [54969944ff79]
I0403 15:44:03.737291    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:44:03.747496    2883 logs.go:284] 1 containers: [f2dc786718d5]
I0403 15:44:03.747604    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:44:03.757534    2883 logs.go:284] 2 containers: [e3e97638f48e 3dd53c654073]
I0403 15:44:03.757649    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:44:03.768221    2883 logs.go:284] 1 containers: [649a72e58afd]
I0403 15:44:03.768302    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:44:03.778315    2883 logs.go:284] 1 containers: [8060ee68e63b]
I0403 15:44:03.778377    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:44:03.788851    2883 logs.go:284] 1 containers: [fef3a791678b]
I0403 15:44:03.788935    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:44:03.798492    2883 logs.go:284] 0 containers: []
W0403 15:44:03.798496    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:44:03.798557    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:44:03.807972    2883 logs.go:284] 1 containers: [a9ce126d3a6b]
I0403 15:44:03.807998    2883 logs.go:123] Gathering logs for etcd [f2dc786718d5] ...
I0403 15:44:03.808003    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 f2dc786718d5"
I0403 15:44:03.824218    2883 logs.go:123] Gathering logs for coredns [e3e97638f48e] ...
I0403 15:44:03.824223    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e3e97638f48e"
I0403 15:44:03.835573    2883 logs.go:123] Gathering logs for coredns [3dd53c654073] ...
I0403 15:44:03.835581    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3dd53c654073"
I0403 15:44:03.846443    2883 logs.go:123] Gathering logs for kube-proxy [8060ee68e63b] ...
I0403 15:44:03.846454    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8060ee68e63b"
I0403 15:44:03.858969    2883 logs.go:123] Gathering logs for kube-apiserver [54969944ff79] ...
I0403 15:44:03.858975    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 54969944ff79"
I0403 15:44:03.876322    2883 logs.go:123] Gathering logs for container status ...
I0403 15:44:03.876341    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:44:03.920349    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:44:03.920358    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:44:03.970363    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:44:03.970375    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:44:03.981807    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:44:03.981816    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:44:04.061433    2883 logs.go:123] Gathering logs for kube-controller-manager [fef3a791678b] ...
I0403 15:44:04.061448    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 fef3a791678b"
I0403 15:44:04.083850    2883 logs.go:123] Gathering logs for kube-scheduler [649a72e58afd] ...
I0403 15:44:04.083854    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 649a72e58afd"
I0403 15:44:04.101864    2883 logs.go:123] Gathering logs for storage-provisioner [a9ce126d3a6b] ...
I0403 15:44:04.101872    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a9ce126d3a6b"
I0403 15:44:04.113512    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:44:04.113526    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:44:06.649611    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:44:11.652012    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:44:11.652130    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:44:11.667249    2883 logs.go:284] 1 containers: [54969944ff79]
I0403 15:44:11.667300    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:44:11.678728    2883 logs.go:284] 1 containers: [f2dc786718d5]
I0403 15:44:11.678748    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:44:11.689526    2883 logs.go:284] 2 containers: [e3e97638f48e 3dd53c654073]
I0403 15:44:11.689546    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:44:11.697800    2883 logs.go:284] 1 containers: [649a72e58afd]
I0403 15:44:11.697853    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:44:11.711222    2883 logs.go:284] 1 containers: [8060ee68e63b]
I0403 15:44:11.711254    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:44:11.720701    2883 logs.go:284] 1 containers: [fef3a791678b]
I0403 15:44:11.720733    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:44:11.731537    2883 logs.go:284] 0 containers: []
W0403 15:44:11.731539    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:44:11.731562    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:44:11.741847    2883 logs.go:284] 1 containers: [a9ce126d3a6b]
I0403 15:44:11.741859    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:44:11.741865    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:44:11.774602    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:44:11.774606    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:44:11.784566    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:44:11.784569    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:44:11.869315    2883 logs.go:123] Gathering logs for coredns [e3e97638f48e] ...
I0403 15:44:11.869323    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e3e97638f48e"
I0403 15:44:11.885063    2883 logs.go:123] Gathering logs for coredns [3dd53c654073] ...
I0403 15:44:11.885069    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3dd53c654073"
I0403 15:44:11.897076    2883 logs.go:123] Gathering logs for kube-controller-manager [fef3a791678b] ...
I0403 15:44:11.897083    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 fef3a791678b"
I0403 15:44:11.913915    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:44:11.913918    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:44:11.953522    2883 logs.go:123] Gathering logs for kube-proxy [8060ee68e63b] ...
I0403 15:44:11.953526    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8060ee68e63b"
I0403 15:44:11.967472    2883 logs.go:123] Gathering logs for container status ...
I0403 15:44:11.967475    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:44:12.007253    2883 logs.go:123] Gathering logs for etcd [f2dc786718d5] ...
I0403 15:44:12.007257    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 f2dc786718d5"
I0403 15:44:12.023902    2883 logs.go:123] Gathering logs for kube-scheduler [649a72e58afd] ...
I0403 15:44:12.023904    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 649a72e58afd"
I0403 15:44:12.040233    2883 logs.go:123] Gathering logs for storage-provisioner [a9ce126d3a6b] ...
I0403 15:44:12.040236    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a9ce126d3a6b"
I0403 15:44:12.053206    2883 logs.go:123] Gathering logs for kube-apiserver [54969944ff79] ...
I0403 15:44:12.053222    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 54969944ff79"
I0403 15:44:14.572199    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:44:19.574477    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:44:19.574636    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:44:19.587207    2883 logs.go:284] 1 containers: [54969944ff79]
I0403 15:44:19.587289    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:44:19.603560    2883 logs.go:284] 1 containers: [f2dc786718d5]
I0403 15:44:19.603614    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:44:19.613660    2883 logs.go:284] 2 containers: [e3e97638f48e 3dd53c654073]
I0403 15:44:19.613721    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:44:19.623449    2883 logs.go:284] 1 containers: [649a72e58afd]
I0403 15:44:19.623525    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:44:19.633395    2883 logs.go:284] 1 containers: [8060ee68e63b]
I0403 15:44:19.633474    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:44:19.643406    2883 logs.go:284] 1 containers: [fef3a791678b]
I0403 15:44:19.643468    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:44:19.657481    2883 logs.go:284] 0 containers: []
W0403 15:44:19.657486    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:44:19.657539    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:44:19.667501    2883 logs.go:284] 1 containers: [a9ce126d3a6b]
I0403 15:44:19.667517    2883 logs.go:123] Gathering logs for kube-apiserver [54969944ff79] ...
I0403 15:44:19.667522    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 54969944ff79"
I0403 15:44:19.683588    2883 logs.go:123] Gathering logs for etcd [f2dc786718d5] ...
I0403 15:44:19.683593    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 f2dc786718d5"
I0403 15:44:19.701942    2883 logs.go:123] Gathering logs for coredns [e3e97638f48e] ...
I0403 15:44:19.701944    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e3e97638f48e"
I0403 15:44:19.713638    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:44:19.713642    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:44:19.756936    2883 logs.go:123] Gathering logs for container status ...
I0403 15:44:19.756945    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:44:19.799926    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:44:19.799943    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:44:19.858524    2883 logs.go:123] Gathering logs for coredns [3dd53c654073] ...
I0403 15:44:19.858530    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3dd53c654073"
I0403 15:44:19.872002    2883 logs.go:123] Gathering logs for storage-provisioner [a9ce126d3a6b] ...
I0403 15:44:19.872008    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a9ce126d3a6b"
I0403 15:44:19.885133    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:44:19.885150    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:44:19.895425    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:44:19.895435    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:44:19.978395    2883 logs.go:123] Gathering logs for kube-scheduler [649a72e58afd] ...
I0403 15:44:19.978411    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 649a72e58afd"
I0403 15:44:19.997533    2883 logs.go:123] Gathering logs for kube-proxy [8060ee68e63b] ...
I0403 15:44:19.997536    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8060ee68e63b"
I0403 15:44:20.007567    2883 logs.go:123] Gathering logs for kube-controller-manager [fef3a791678b] ...
I0403 15:44:20.007571    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 fef3a791678b"
I0403 15:44:22.529971    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:44:27.532270    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:44:27.532402    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:44:27.544654    2883 logs.go:284] 1 containers: [54969944ff79]
I0403 15:44:27.544730    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:44:27.555827    2883 logs.go:284] 1 containers: [f2dc786718d5]
I0403 15:44:27.555855    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:44:27.566880    2883 logs.go:284] 2 containers: [e3e97638f48e 3dd53c654073]
I0403 15:44:27.566957    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:44:27.574994    2883 logs.go:284] 1 containers: [649a72e58afd]
I0403 15:44:27.575039    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:44:27.590157    2883 logs.go:284] 1 containers: [8060ee68e63b]
I0403 15:44:27.590226    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:44:27.601382    2883 logs.go:284] 1 containers: [fef3a791678b]
I0403 15:44:27.601466    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:44:27.611223    2883 logs.go:284] 0 containers: []
W0403 15:44:27.611234    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:44:27.611293    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:44:27.621977    2883 logs.go:284] 1 containers: [a9ce126d3a6b]
I0403 15:44:27.621987    2883 logs.go:123] Gathering logs for kube-controller-manager [fef3a791678b] ...
I0403 15:44:27.622001    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 fef3a791678b"
I0403 15:44:27.644791    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:44:27.644805    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:44:27.699781    2883 logs.go:123] Gathering logs for kube-apiserver [54969944ff79] ...
I0403 15:44:27.699787    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 54969944ff79"
I0403 15:44:27.717481    2883 logs.go:123] Gathering logs for coredns [e3e97638f48e] ...
I0403 15:44:27.717486    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e3e97638f48e"
I0403 15:44:27.729761    2883 logs.go:123] Gathering logs for coredns [3dd53c654073] ...
I0403 15:44:27.729777    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3dd53c654073"
I0403 15:44:27.745348    2883 logs.go:123] Gathering logs for kube-proxy [8060ee68e63b] ...
I0403 15:44:27.745362    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8060ee68e63b"
I0403 15:44:27.757215    2883 logs.go:123] Gathering logs for container status ...
I0403 15:44:27.757220    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:44:27.798179    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:44:27.798189    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:44:27.808779    2883 logs.go:123] Gathering logs for etcd [f2dc786718d5] ...
I0403 15:44:27.808783    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 f2dc786718d5"
I0403 15:44:27.824955    2883 logs.go:123] Gathering logs for kube-scheduler [649a72e58afd] ...
I0403 15:44:27.824961    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 649a72e58afd"
I0403 15:44:27.841733    2883 logs.go:123] Gathering logs for storage-provisioner [a9ce126d3a6b] ...
I0403 15:44:27.841740    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a9ce126d3a6b"
I0403 15:44:27.853252    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:44:27.853257    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:44:27.940277    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:44:27.940286    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:44:30.489600    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:44:35.491975    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:44:35.492093    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:44:35.505110    2883 logs.go:284] 1 containers: [54969944ff79]
I0403 15:44:35.505171    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:44:35.515641    2883 logs.go:284] 1 containers: [f2dc786718d5]
I0403 15:44:35.515681    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:44:35.526001    2883 logs.go:284] 2 containers: [e3e97638f48e 3dd53c654073]
I0403 15:44:35.526056    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:44:35.535313    2883 logs.go:284] 1 containers: [649a72e58afd]
I0403 15:44:35.535365    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:44:35.547887    2883 logs.go:284] 1 containers: [8060ee68e63b]
I0403 15:44:35.547941    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:44:35.557720    2883 logs.go:284] 1 containers: [fef3a791678b]
I0403 15:44:35.557789    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:44:35.565994    2883 logs.go:284] 0 containers: []
W0403 15:44:35.565999    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:44:35.566032    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:44:35.577656    2883 logs.go:284] 1 containers: [a9ce126d3a6b]
I0403 15:44:35.577677    2883 logs.go:123] Gathering logs for coredns [3dd53c654073] ...
I0403 15:44:35.577691    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3dd53c654073"
I0403 15:44:35.591504    2883 logs.go:123] Gathering logs for kube-scheduler [649a72e58afd] ...
I0403 15:44:35.591517    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 649a72e58afd"
I0403 15:44:35.609383    2883 logs.go:123] Gathering logs for kube-controller-manager [fef3a791678b] ...
I0403 15:44:35.609397    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 fef3a791678b"
I0403 15:44:35.633116    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:44:35.633134    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:44:35.674091    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:44:35.674097    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:44:35.760007    2883 logs.go:123] Gathering logs for kube-apiserver [54969944ff79] ...
I0403 15:44:35.760016    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 54969944ff79"
I0403 15:44:35.783026    2883 logs.go:123] Gathering logs for storage-provisioner [a9ce126d3a6b] ...
I0403 15:44:35.783052    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a9ce126d3a6b"
I0403 15:44:35.795335    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:44:35.795368    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:44:35.805793    2883 logs.go:123] Gathering logs for kube-proxy [8060ee68e63b] ...
I0403 15:44:35.805802    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8060ee68e63b"
I0403 15:44:35.820999    2883 logs.go:123] Gathering logs for container status ...
I0403 15:44:35.821015    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:44:35.861128    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:44:35.861137    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:44:35.913970    2883 logs.go:123] Gathering logs for etcd [f2dc786718d5] ...
I0403 15:44:35.913976    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 f2dc786718d5"
I0403 15:44:35.929699    2883 logs.go:123] Gathering logs for coredns [e3e97638f48e] ...
I0403 15:44:35.929705    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e3e97638f48e"
I0403 15:44:38.443351    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:44:43.445637    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:44:43.445726    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:44:43.457246    2883 logs.go:284] 1 containers: [54969944ff79]
I0403 15:44:43.457302    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:44:43.471536    2883 logs.go:284] 1 containers: [f2dc786718d5]
I0403 15:44:43.471559    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:44:43.482877    2883 logs.go:284] 2 containers: [e3e97638f48e 3dd53c654073]
I0403 15:44:43.482961    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:44:43.494468    2883 logs.go:284] 1 containers: [649a72e58afd]
I0403 15:44:43.494494    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:44:43.504592    2883 logs.go:284] 1 containers: [8060ee68e63b]
I0403 15:44:43.504618    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:44:43.515413    2883 logs.go:284] 1 containers: [fef3a791678b]
I0403 15:44:43.515495    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:44:43.525519    2883 logs.go:284] 0 containers: []
W0403 15:44:43.525524    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:44:43.525577    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:44:43.535828    2883 logs.go:284] 1 containers: [a9ce126d3a6b]
I0403 15:44:43.535847    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:44:43.535853    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:44:43.590280    2883 logs.go:123] Gathering logs for kube-apiserver [54969944ff79] ...
I0403 15:44:43.590287    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 54969944ff79"
I0403 15:44:43.608539    2883 logs.go:123] Gathering logs for etcd [f2dc786718d5] ...
I0403 15:44:43.608562    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 f2dc786718d5"
I0403 15:44:43.624127    2883 logs.go:123] Gathering logs for storage-provisioner [a9ce126d3a6b] ...
I0403 15:44:43.624136    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a9ce126d3a6b"
I0403 15:44:43.635640    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:44:43.635659    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:44:43.718894    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:44:43.718910    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:44:43.729570    2883 logs.go:123] Gathering logs for coredns [e3e97638f48e] ...
I0403 15:44:43.729576    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e3e97638f48e"
I0403 15:44:43.741786    2883 logs.go:123] Gathering logs for coredns [3dd53c654073] ...
I0403 15:44:43.741802    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3dd53c654073"
I0403 15:44:43.753119    2883 logs.go:123] Gathering logs for kube-scheduler [649a72e58afd] ...
I0403 15:44:43.753131    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 649a72e58afd"
I0403 15:44:43.769629    2883 logs.go:123] Gathering logs for kube-controller-manager [fef3a791678b] ...
I0403 15:44:43.769637    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 fef3a791678b"
I0403 15:44:43.791371    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:44:43.791376    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:44:43.834540    2883 logs.go:123] Gathering logs for kube-proxy [8060ee68e63b] ...
I0403 15:44:43.834561    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8060ee68e63b"
I0403 15:44:43.846701    2883 logs.go:123] Gathering logs for container status ...
I0403 15:44:43.846706    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:44:46.392468    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:44:51.394933    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:44:51.395063    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:44:51.408005    2883 logs.go:284] 1 containers: [54969944ff79]
I0403 15:44:51.408051    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:44:51.421544    2883 logs.go:284] 1 containers: [f2dc786718d5]
I0403 15:44:51.421564    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:44:51.433331    2883 logs.go:284] 2 containers: [e3e97638f48e 3dd53c654073]
I0403 15:44:51.433396    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:44:51.444043    2883 logs.go:284] 1 containers: [649a72e58afd]
I0403 15:44:51.444097    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:44:51.454791    2883 logs.go:284] 1 containers: [8060ee68e63b]
I0403 15:44:51.454858    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:44:51.467782    2883 logs.go:284] 1 containers: [fef3a791678b]
I0403 15:44:51.467800    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:44:51.479477    2883 logs.go:284] 0 containers: []
W0403 15:44:51.479482    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:44:51.479536    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:44:51.489972    2883 logs.go:284] 1 containers: [a9ce126d3a6b]
I0403 15:44:51.489983    2883 logs.go:123] Gathering logs for kube-proxy [8060ee68e63b] ...
I0403 15:44:51.489993    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8060ee68e63b"
I0403 15:44:51.502569    2883 logs.go:123] Gathering logs for kube-controller-manager [fef3a791678b] ...
I0403 15:44:51.502574    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 fef3a791678b"
I0403 15:44:51.524648    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:44:51.524659    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:44:51.564647    2883 logs.go:123] Gathering logs for etcd [f2dc786718d5] ...
I0403 15:44:51.564664    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 f2dc786718d5"
I0403 15:44:51.581650    2883 logs.go:123] Gathering logs for coredns [e3e97638f48e] ...
I0403 15:44:51.581664    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e3e97638f48e"
I0403 15:44:51.594803    2883 logs.go:123] Gathering logs for storage-provisioner [a9ce126d3a6b] ...
I0403 15:44:51.594814    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a9ce126d3a6b"
I0403 15:44:51.606546    2883 logs.go:123] Gathering logs for kube-apiserver [54969944ff79] ...
I0403 15:44:51.606552    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 54969944ff79"
I0403 15:44:51.633741    2883 logs.go:123] Gathering logs for coredns [3dd53c654073] ...
I0403 15:44:51.633747    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3dd53c654073"
I0403 15:44:51.653236    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:44:51.653247    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:44:51.702377    2883 logs.go:123] Gathering logs for container status ...
I0403 15:44:51.702384    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:44:51.744760    2883 logs.go:123] Gathering logs for kube-scheduler [649a72e58afd] ...
I0403 15:44:51.744773    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 649a72e58afd"
I0403 15:44:51.758623    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:44:51.758628    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:44:51.768930    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:44:51.768933    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:44:54.351263    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:44:59.353521    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:44:59.353673    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:44:59.367411    2883 logs.go:284] 1 containers: [54969944ff79]
I0403 15:44:59.367462    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:44:59.383355    2883 logs.go:284] 1 containers: [f2dc786718d5]
I0403 15:44:59.383449    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:44:59.395268    2883 logs.go:284] 2 containers: [e3e97638f48e 3dd53c654073]
I0403 15:44:59.395341    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:44:59.405439    2883 logs.go:284] 1 containers: [649a72e58afd]
I0403 15:44:59.405544    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:44:59.423736    2883 logs.go:284] 1 containers: [8060ee68e63b]
I0403 15:44:59.423820    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:44:59.434179    2883 logs.go:284] 1 containers: [fef3a791678b]
I0403 15:44:59.434243    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:44:59.446526    2883 logs.go:284] 0 containers: []
W0403 15:44:59.446540    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:44:59.446593    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:44:59.456756    2883 logs.go:284] 1 containers: [a9ce126d3a6b]
I0403 15:44:59.456768    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:44:59.456772    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:44:59.510081    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:44:59.510087    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:44:59.520411    2883 logs.go:123] Gathering logs for etcd [f2dc786718d5] ...
I0403 15:44:59.520419    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 f2dc786718d5"
I0403 15:44:59.540324    2883 logs.go:123] Gathering logs for kube-proxy [8060ee68e63b] ...
I0403 15:44:59.540329    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8060ee68e63b"
I0403 15:44:59.551996    2883 logs.go:123] Gathering logs for kube-controller-manager [fef3a791678b] ...
I0403 15:44:59.552002    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 fef3a791678b"
I0403 15:44:59.573057    2883 logs.go:123] Gathering logs for storage-provisioner [a9ce126d3a6b] ...
I0403 15:44:59.573072    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a9ce126d3a6b"
I0403 15:44:59.584999    2883 logs.go:123] Gathering logs for container status ...
I0403 15:44:59.585005    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:44:59.625986    2883 logs.go:123] Gathering logs for coredns [e3e97638f48e] ...
I0403 15:44:59.625995    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e3e97638f48e"
I0403 15:44:59.638310    2883 logs.go:123] Gathering logs for coredns [3dd53c654073] ...
I0403 15:44:59.638324    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3dd53c654073"
I0403 15:44:59.650741    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:44:59.650750    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:44:59.692027    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:44:59.692034    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:44:59.762630    2883 logs.go:123] Gathering logs for kube-apiserver [54969944ff79] ...
I0403 15:44:59.762639    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 54969944ff79"
I0403 15:44:59.782139    2883 logs.go:123] Gathering logs for kube-scheduler [649a72e58afd] ...
I0403 15:44:59.782150    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 649a72e58afd"
I0403 15:45:02.301203    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:45:07.303759    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:45:07.303889    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:45:07.314466    2883 logs.go:284] 1 containers: [54969944ff79]
I0403 15:45:07.314529    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:45:07.331709    2883 logs.go:284] 1 containers: [f2dc786718d5]
I0403 15:45:07.331785    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:45:07.346316    2883 logs.go:284] 2 containers: [e3e97638f48e 3dd53c654073]
I0403 15:45:07.346346    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:45:07.356462    2883 logs.go:284] 1 containers: [649a72e58afd]
I0403 15:45:07.356481    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:45:07.367440    2883 logs.go:284] 1 containers: [8060ee68e63b]
I0403 15:45:07.367520    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:45:07.378416    2883 logs.go:284] 1 containers: [fef3a791678b]
I0403 15:45:07.378499    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:45:07.389698    2883 logs.go:284] 0 containers: []
W0403 15:45:07.389716    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:45:07.389774    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:45:07.406181    2883 logs.go:284] 1 containers: [a9ce126d3a6b]
I0403 15:45:07.406191    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:45:07.406195    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:45:07.416456    2883 logs.go:123] Gathering logs for kube-proxy [8060ee68e63b] ...
I0403 15:45:07.416462    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8060ee68e63b"
I0403 15:45:07.428810    2883 logs.go:123] Gathering logs for kube-controller-manager [fef3a791678b] ...
I0403 15:45:07.428821    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 fef3a791678b"
I0403 15:45:07.452697    2883 logs.go:123] Gathering logs for storage-provisioner [a9ce126d3a6b] ...
I0403 15:45:07.452707    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a9ce126d3a6b"
I0403 15:45:07.464900    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:45:07.464910    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:45:07.506467    2883 logs.go:123] Gathering logs for container status ...
I0403 15:45:07.506473    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:45:07.548259    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:45:07.548268    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:45:07.602865    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:45:07.602871    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:45:07.684688    2883 logs.go:123] Gathering logs for kube-scheduler [649a72e58afd] ...
I0403 15:45:07.684701    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 649a72e58afd"
I0403 15:45:07.706584    2883 logs.go:123] Gathering logs for kube-apiserver [54969944ff79] ...
I0403 15:45:07.706600    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 54969944ff79"
I0403 15:45:07.723326    2883 logs.go:123] Gathering logs for coredns [e3e97638f48e] ...
I0403 15:45:07.723337    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e3e97638f48e"
I0403 15:45:07.734208    2883 logs.go:123] Gathering logs for coredns [3dd53c654073] ...
I0403 15:45:07.734214    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3dd53c654073"
I0403 15:45:07.745937    2883 logs.go:123] Gathering logs for etcd [f2dc786718d5] ...
I0403 15:45:07.745954    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 f2dc786718d5"
I0403 15:45:10.264266    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:45:15.266607    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:45:15.266699    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:45:15.276134    2883 logs.go:284] 1 containers: [54969944ff79]
I0403 15:45:15.276190    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:45:15.288062    2883 logs.go:284] 1 containers: [f2dc786718d5]
I0403 15:45:15.288133    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:45:15.303194    2883 logs.go:284] 2 containers: [e3e97638f48e 3dd53c654073]
I0403 15:45:15.303265    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:45:15.313915    2883 logs.go:284] 1 containers: [649a72e58afd]
I0403 15:45:15.314012    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:45:15.324757    2883 logs.go:284] 1 containers: [8060ee68e63b]
I0403 15:45:15.324832    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:45:15.334933    2883 logs.go:284] 1 containers: [fef3a791678b]
I0403 15:45:15.335014    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:45:15.348868    2883 logs.go:284] 0 containers: []
W0403 15:45:15.348873    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:45:15.348947    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:45:15.372253    2883 logs.go:284] 1 containers: [a9ce126d3a6b]
I0403 15:45:15.372272    2883 logs.go:123] Gathering logs for kube-apiserver [54969944ff79] ...
I0403 15:45:15.372277    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 54969944ff79"
I0403 15:45:15.392403    2883 logs.go:123] Gathering logs for etcd [f2dc786718d5] ...
I0403 15:45:15.392413    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 f2dc786718d5"
I0403 15:45:15.408428    2883 logs.go:123] Gathering logs for coredns [3dd53c654073] ...
I0403 15:45:15.408438    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3dd53c654073"
I0403 15:45:15.423259    2883 logs.go:123] Gathering logs for kube-proxy [8060ee68e63b] ...
I0403 15:45:15.423265    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8060ee68e63b"
I0403 15:45:15.434799    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:45:15.434804    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:45:15.490677    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:45:15.490686    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:45:15.501050    2883 logs.go:123] Gathering logs for coredns [e3e97638f48e] ...
I0403 15:45:15.501060    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e3e97638f48e"
I0403 15:45:15.515152    2883 logs.go:123] Gathering logs for kube-controller-manager [fef3a791678b] ...
I0403 15:45:15.515158    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 fef3a791678b"
I0403 15:45:15.536632    2883 logs.go:123] Gathering logs for container status ...
I0403 15:45:15.536638    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:45:15.576431    2883 logs.go:123] Gathering logs for kube-scheduler [649a72e58afd] ...
I0403 15:45:15.576445    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 649a72e58afd"
I0403 15:45:15.593881    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:45:15.593885    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:45:15.678201    2883 logs.go:123] Gathering logs for storage-provisioner [a9ce126d3a6b] ...
I0403 15:45:15.678212    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a9ce126d3a6b"
I0403 15:45:15.690994    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:45:15.691000    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:45:18.237249    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:45:23.239559    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:45:23.239719    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:45:23.250883    2883 logs.go:284] 1 containers: [54969944ff79]
I0403 15:45:23.250968    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:45:23.260813    2883 logs.go:284] 1 containers: [f2dc786718d5]
I0403 15:45:23.260879    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:45:23.272976    2883 logs.go:284] 2 containers: [e3e97638f48e 3dd53c654073]
I0403 15:45:23.273046    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:45:23.285261    2883 logs.go:284] 1 containers: [649a72e58afd]
I0403 15:45:23.285329    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:45:23.298154    2883 logs.go:284] 1 containers: [8060ee68e63b]
I0403 15:45:23.298230    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:45:23.309254    2883 logs.go:284] 1 containers: [fef3a791678b]
I0403 15:45:23.309312    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:45:23.318543    2883 logs.go:284] 0 containers: []
W0403 15:45:23.318548    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:45:23.318616    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:45:23.327806    2883 logs.go:284] 1 containers: [a9ce126d3a6b]
I0403 15:45:23.327826    2883 logs.go:123] Gathering logs for coredns [e3e97638f48e] ...
I0403 15:45:23.327831    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e3e97638f48e"
I0403 15:45:23.343112    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:45:23.343118    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:45:23.389020    2883 logs.go:123] Gathering logs for kube-scheduler [649a72e58afd] ...
I0403 15:45:23.389026    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 649a72e58afd"
I0403 15:45:23.406411    2883 logs.go:123] Gathering logs for kube-proxy [8060ee68e63b] ...
I0403 15:45:23.406417    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8060ee68e63b"
I0403 15:45:23.420997    2883 logs.go:123] Gathering logs for etcd [f2dc786718d5] ...
I0403 15:45:23.421003    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 f2dc786718d5"
I0403 15:45:23.436453    2883 logs.go:123] Gathering logs for coredns [3dd53c654073] ...
I0403 15:45:23.436459    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3dd53c654073"
I0403 15:45:23.447705    2883 logs.go:123] Gathering logs for kube-apiserver [54969944ff79] ...
I0403 15:45:23.447717    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 54969944ff79"
I0403 15:45:23.467434    2883 logs.go:123] Gathering logs for kube-controller-manager [fef3a791678b] ...
I0403 15:45:23.467441    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 fef3a791678b"
I0403 15:45:23.490141    2883 logs.go:123] Gathering logs for storage-provisioner [a9ce126d3a6b] ...
I0403 15:45:23.490158    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a9ce126d3a6b"
I0403 15:45:23.509848    2883 logs.go:123] Gathering logs for container status ...
I0403 15:45:23.509857    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:45:23.546064    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:45:23.546072    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:45:23.589245    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:45:23.589254    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:45:23.599771    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:45:23.599781    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:45:26.187669    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:45:31.190030    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:45:31.190178    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:45:31.202128    2883 logs.go:284] 1 containers: [54969944ff79]
I0403 15:45:31.202204    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:45:31.212335    2883 logs.go:284] 1 containers: [f2dc786718d5]
I0403 15:45:31.212380    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:45:31.225699    2883 logs.go:284] 2 containers: [e3e97638f48e 3dd53c654073]
I0403 15:45:31.225786    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:45:31.240761    2883 logs.go:284] 1 containers: [649a72e58afd]
I0403 15:45:31.240824    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:45:31.251535    2883 logs.go:284] 1 containers: [8060ee68e63b]
I0403 15:45:31.251605    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:45:31.271260    2883 logs.go:284] 1 containers: [fef3a791678b]
I0403 15:45:31.271332    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:45:31.282028    2883 logs.go:284] 0 containers: []
W0403 15:45:31.282031    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:45:31.282082    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:45:31.299378    2883 logs.go:284] 1 containers: [a9ce126d3a6b]
I0403 15:45:31.299386    2883 logs.go:123] Gathering logs for coredns [e3e97638f48e] ...
I0403 15:45:31.299389    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e3e97638f48e"
I0403 15:45:31.311053    2883 logs.go:123] Gathering logs for kube-scheduler [649a72e58afd] ...
I0403 15:45:31.311057    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 649a72e58afd"
I0403 15:45:31.329551    2883 logs.go:123] Gathering logs for kube-proxy [8060ee68e63b] ...
I0403 15:45:31.329558    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8060ee68e63b"
I0403 15:45:31.341299    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:45:31.341305    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:45:31.384960    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:45:31.384973    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:45:31.422448    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:45:31.422455    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:45:31.500210    2883 logs.go:123] Gathering logs for kube-apiserver [54969944ff79] ...
I0403 15:45:31.500217    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 54969944ff79"
I0403 15:45:31.521088    2883 logs.go:123] Gathering logs for coredns [3dd53c654073] ...
I0403 15:45:31.521099    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3dd53c654073"
I0403 15:45:31.537548    2883 logs.go:123] Gathering logs for storage-provisioner [a9ce126d3a6b] ...
I0403 15:45:31.537555    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a9ce126d3a6b"
I0403 15:45:31.549933    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:45:31.549939    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:45:31.560128    2883 logs.go:123] Gathering logs for etcd [f2dc786718d5] ...
I0403 15:45:31.560134    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 f2dc786718d5"
I0403 15:45:31.577988    2883 logs.go:123] Gathering logs for kube-controller-manager [fef3a791678b] ...
I0403 15:45:31.577994    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 fef3a791678b"
I0403 15:45:31.600995    2883 logs.go:123] Gathering logs for container status ...
I0403 15:45:31.601003    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:45:34.145122    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:45:39.147646    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:45:39.147787    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:45:39.159318    2883 logs.go:284] 1 containers: [54969944ff79]
I0403 15:45:39.159367    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:45:39.169973    2883 logs.go:284] 1 containers: [f2dc786718d5]
I0403 15:45:39.170000    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:45:39.180318    2883 logs.go:284] 2 containers: [e3e97638f48e 3dd53c654073]
I0403 15:45:39.180427    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:45:39.190341    2883 logs.go:284] 1 containers: [649a72e58afd]
I0403 15:45:39.190404    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:45:39.202466    2883 logs.go:284] 1 containers: [8060ee68e63b]
I0403 15:45:39.202545    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:45:39.213492    2883 logs.go:284] 1 containers: [fef3a791678b]
I0403 15:45:39.213557    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:45:39.226885    2883 logs.go:284] 0 containers: []
W0403 15:45:39.226891    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:45:39.226939    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:45:39.239533    2883 logs.go:284] 1 containers: [a9ce126d3a6b]
I0403 15:45:39.239541    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:45:39.239544    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:45:39.326719    2883 logs.go:123] Gathering logs for kube-apiserver [54969944ff79] ...
I0403 15:45:39.326723    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 54969944ff79"
I0403 15:45:39.350090    2883 logs.go:123] Gathering logs for kube-proxy [8060ee68e63b] ...
I0403 15:45:39.350092    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8060ee68e63b"
I0403 15:45:39.362451    2883 logs.go:123] Gathering logs for storage-provisioner [a9ce126d3a6b] ...
I0403 15:45:39.362455    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a9ce126d3a6b"
I0403 15:45:39.375316    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:45:39.375328    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:45:39.429007    2883 logs.go:123] Gathering logs for coredns [3dd53c654073] ...
I0403 15:45:39.429014    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3dd53c654073"
I0403 15:45:39.447405    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:45:39.447411    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:45:39.490292    2883 logs.go:123] Gathering logs for coredns [e3e97638f48e] ...
I0403 15:45:39.490298    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e3e97638f48e"
I0403 15:45:39.502943    2883 logs.go:123] Gathering logs for kube-scheduler [649a72e58afd] ...
I0403 15:45:39.502950    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 649a72e58afd"
I0403 15:45:39.520077    2883 logs.go:123] Gathering logs for container status ...
I0403 15:45:39.520091    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:45:39.560547    2883 logs.go:123] Gathering logs for etcd [f2dc786718d5] ...
I0403 15:45:39.560555    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 f2dc786718d5"
I0403 15:45:39.579758    2883 logs.go:123] Gathering logs for kube-controller-manager [fef3a791678b] ...
I0403 15:45:39.579764    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 fef3a791678b"
I0403 15:45:39.605616    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:45:39.605623    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:45:42.117735    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:45:47.120047    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:45:47.120233    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0403 15:45:47.132618    2883 logs.go:284] 1 containers: [54969944ff79]
I0403 15:45:47.132691    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0403 15:45:47.143718    2883 logs.go:284] 1 containers: [f2dc786718d5]
I0403 15:45:47.143760    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0403 15:45:47.154419    2883 logs.go:284] 2 containers: [e3e97638f48e 3dd53c654073]
I0403 15:45:47.154496    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0403 15:45:47.165889    2883 logs.go:284] 1 containers: [649a72e58afd]
I0403 15:45:47.165915    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0403 15:45:47.175792    2883 logs.go:284] 1 containers: [8060ee68e63b]
I0403 15:45:47.175828    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0403 15:45:47.186628    2883 logs.go:284] 1 containers: [fef3a791678b]
I0403 15:45:47.186689    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0403 15:45:47.197899    2883 logs.go:284] 0 containers: []
W0403 15:45:47.197907    2883 logs.go:286] No container was found matching "kindnet"
I0403 15:45:47.197980    2883 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0403 15:45:47.208816    2883 logs.go:284] 1 containers: [a9ce126d3a6b]
I0403 15:45:47.208830    2883 logs.go:123] Gathering logs for kube-scheduler [649a72e58afd] ...
I0403 15:45:47.208847    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 649a72e58afd"
I0403 15:45:47.230350    2883 logs.go:123] Gathering logs for kube-controller-manager [fef3a791678b] ...
I0403 15:45:47.230361    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 fef3a791678b"
I0403 15:45:47.251427    2883 logs.go:123] Gathering logs for storage-provisioner [a9ce126d3a6b] ...
I0403 15:45:47.251435    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a9ce126d3a6b"
I0403 15:45:47.263877    2883 logs.go:123] Gathering logs for kubelet ...
I0403 15:45:47.263882    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0403 15:45:47.317867    2883 logs.go:123] Gathering logs for kube-apiserver [54969944ff79] ...
I0403 15:45:47.317873    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 54969944ff79"
I0403 15:45:47.328249    2883 logs.go:123] Gathering logs for etcd [f2dc786718d5] ...
I0403 15:45:47.328252    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 f2dc786718d5"
I0403 15:45:47.344372    2883 logs.go:123] Gathering logs for kube-proxy [8060ee68e63b] ...
I0403 15:45:47.344375    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 8060ee68e63b"
I0403 15:45:47.354574    2883 logs.go:123] Gathering logs for dmesg ...
I0403 15:45:47.354578    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0403 15:45:47.364891    2883 logs.go:123] Gathering logs for describe nodes ...
I0403 15:45:47.364894    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0403 15:45:47.454077    2883 logs.go:123] Gathering logs for coredns [e3e97638f48e] ...
I0403 15:45:47.454083    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e3e97638f48e"
I0403 15:45:47.466973    2883 logs.go:123] Gathering logs for container status ...
I0403 15:45:47.466977    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0403 15:45:47.516395    2883 logs.go:123] Gathering logs for coredns [3dd53c654073] ...
I0403 15:45:47.516404    2883 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3dd53c654073"
I0403 15:45:47.528997    2883 logs.go:123] Gathering logs for Docker ...
I0403 15:45:47.529010    2883 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0403 15:45:50.074183    2883 api_server.go:253] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0403 15:45:55.076531    2883 api_server.go:269] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0403 15:45:55.081950    2883 out.go:177] 
W0403 15:45:55.085037    2883 out.go:239] ❌  Exiting due to GUEST_START: failed to start node: wait 6m0s for node: wait for healthy API server: apiserver healthz never reported healthy: context deadline exceeded
W0403 15:45:55.085046    2883 out.go:239] 
W0403 15:45:55.085578    2883 out.go:239] [31m╭───────────────────────────────────────────────────────────────────────────────────────────╮[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    😿  If the above advice does not help, please let us know:                             [31m│[0m
[31m│[0m    👉  https://github.com/kubernetes/minikube/issues/new/choose                           [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m╰───────────────────────────────────────────────────────────────────────────────────────────╯[0m
I0403 15:45:55.099855    2883 out.go:177] 

* 
* ==> Docker <==
* -- Journal begins at Thu 2025-04-03 19:03:16 UTC, ends at Thu 2025-04-03 19:51:02 UTC. --
Apr 03 19:42:28 minikube dockerd[80477]: time="2025-04-03T19:42:28.440741730Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:28 minikube dockerd[80477]: time="2025-04-03T19:42:28.440747355Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 03 19:42:28 minikube dockerd[80477]: time="2025-04-03T19:42:28.440751313Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:28 minikube cri-dockerd[80735]: time="2025-04-03T19:42:28Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/522f95cc628089c56ee8cd99ea3043a6053e96a281de07b37c59ae73d0ca75e2/resolv.conf as [nameserver 10.0.2.3]"
Apr 03 19:42:28 minikube cri-dockerd[80735]: time="2025-04-03T19:42:28Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/f4f4713fe05129ba8422abd8c27a79aa314c5aee6e99025eb5277f984cc8824c/resolv.conf as [nameserver 10.0.2.3]"
Apr 03 19:42:28 minikube cri-dockerd[80735]: time="2025-04-03T19:42:28Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/90f5dc13a89a8b0b4d66a52534caaa1bc658a81c58b6a4af891a9a17e221f194/resolv.conf as [nameserver 10.0.2.3]"
Apr 03 19:42:28 minikube cri-dockerd[80735]: time="2025-04-03T19:42:28Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/81a073cdc2c52654d7b1f3b4ff4e0732c26fc3312795fdbfba4e9d50d3855e9d/resolv.conf as [nameserver 10.0.2.3]"
Apr 03 19:42:28 minikube dockerd[80477]: time="2025-04-03T19:42:28.703334908Z" level=info msg="loading plugin \"io.containerd.internal.v1.shutdown\"..." runtime=io.containerd.runc.v2 type=io.containerd.internal.v1
Apr 03 19:42:28 minikube dockerd[80477]: time="2025-04-03T19:42:28.703364449Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:28 minikube dockerd[80477]: time="2025-04-03T19:42:28.703371365Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 03 19:42:28 minikube dockerd[80477]: time="2025-04-03T19:42:28.703375740Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:28 minikube dockerd[80477]: time="2025-04-03T19:42:28.715896421Z" level=info msg="loading plugin \"io.containerd.internal.v1.shutdown\"..." runtime=io.containerd.runc.v2 type=io.containerd.internal.v1
Apr 03 19:42:28 minikube dockerd[80477]: time="2025-04-03T19:42:28.715936711Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:28 minikube dockerd[80477]: time="2025-04-03T19:42:28.715943836Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 03 19:42:28 minikube dockerd[80477]: time="2025-04-03T19:42:28.715948003Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:28 minikube dockerd[80477]: time="2025-04-03T19:42:28.744909459Z" level=info msg="loading plugin \"io.containerd.internal.v1.shutdown\"..." runtime=io.containerd.runc.v2 type=io.containerd.internal.v1
Apr 03 19:42:28 minikube dockerd[80477]: time="2025-04-03T19:42:28.744968041Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:28 minikube dockerd[80477]: time="2025-04-03T19:42:28.744979957Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 03 19:42:28 minikube dockerd[80477]: time="2025-04-03T19:42:28.744988373Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:28 minikube dockerd[80477]: time="2025-04-03T19:42:28.756783658Z" level=info msg="loading plugin \"io.containerd.internal.v1.shutdown\"..." runtime=io.containerd.runc.v2 type=io.containerd.internal.v1
Apr 03 19:42:28 minikube dockerd[80477]: time="2025-04-03T19:42:28.764968381Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:28 minikube dockerd[80477]: time="2025-04-03T19:42:28.768955182Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 03 19:42:28 minikube dockerd[80477]: time="2025-04-03T19:42:28.772775156Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:47 minikube dockerd[80477]: time="2025-04-03T19:42:47.080775582Z" level=info msg="loading plugin \"io.containerd.internal.v1.shutdown\"..." runtime=io.containerd.runc.v2 type=io.containerd.internal.v1
Apr 03 19:42:47 minikube dockerd[80477]: time="2025-04-03T19:42:47.080909204Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:47 minikube dockerd[80477]: time="2025-04-03T19:42:47.080969078Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 03 19:42:47 minikube dockerd[80477]: time="2025-04-03T19:42:47.080999327Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:47 minikube cri-dockerd[80735]: time="2025-04-03T19:42:47Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/1eb2e337b52d1f6c0d222d144852b222d6438080451963fc1775126869fee947/resolv.conf as [nameserver 10.0.2.3]"
Apr 03 19:42:47 minikube dockerd[80477]: time="2025-04-03T19:42:47.221453326Z" level=info msg="loading plugin \"io.containerd.internal.v1.shutdown\"..." runtime=io.containerd.runc.v2 type=io.containerd.internal.v1
Apr 03 19:42:47 minikube dockerd[80477]: time="2025-04-03T19:42:47.222193019Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:47 minikube dockerd[80477]: time="2025-04-03T19:42:47.222410348Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 03 19:42:47 minikube dockerd[80477]: time="2025-04-03T19:42:47.222416681Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:47 minikube dockerd[80477]: time="2025-04-03T19:42:47.237025965Z" level=info msg="loading plugin \"io.containerd.internal.v1.shutdown\"..." runtime=io.containerd.runc.v2 type=io.containerd.internal.v1
Apr 03 19:42:47 minikube dockerd[80477]: time="2025-04-03T19:42:47.237055881Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:47 minikube dockerd[80477]: time="2025-04-03T19:42:47.237070714Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 03 19:42:47 minikube dockerd[80477]: time="2025-04-03T19:42:47.237075672Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:47 minikube dockerd[80477]: time="2025-04-03T19:42:47.238739263Z" level=info msg="loading plugin \"io.containerd.internal.v1.shutdown\"..." runtime=io.containerd.runc.v2 type=io.containerd.internal.v1
Apr 03 19:42:47 minikube dockerd[80477]: time="2025-04-03T19:42:47.238781346Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:47 minikube dockerd[80477]: time="2025-04-03T19:42:47.238788887Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 03 19:42:47 minikube dockerd[80477]: time="2025-04-03T19:42:47.238793179Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:47 minikube cri-dockerd[80735]: time="2025-04-03T19:42:47Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/fef9d8e715be2d102746e0ba95a5d8aafb83b8f68a2bd0e89342b057622d5cdf/resolv.conf as [nameserver 10.0.2.3]"
Apr 03 19:42:47 minikube cri-dockerd[80735]: time="2025-04-03T19:42:47Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/b543b774946abb0d8131b72a92567b6b71a9716fef5eae730203c00d767f3e0c/resolv.conf as [nameserver 10.0.2.3]"
Apr 03 19:42:47 minikube dockerd[80477]: time="2025-04-03T19:42:47.581090210Z" level=info msg="loading plugin \"io.containerd.internal.v1.shutdown\"..." runtime=io.containerd.runc.v2 type=io.containerd.internal.v1
Apr 03 19:42:47 minikube dockerd[80477]: time="2025-04-03T19:42:47.581119751Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:47 minikube dockerd[80477]: time="2025-04-03T19:42:47.581126167Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 03 19:42:47 minikube dockerd[80477]: time="2025-04-03T19:42:47.581130334Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:47 minikube dockerd[80477]: time="2025-04-03T19:42:47.581360746Z" level=info msg="loading plugin \"io.containerd.internal.v1.shutdown\"..." runtime=io.containerd.runc.v2 type=io.containerd.internal.v1
Apr 03 19:42:47 minikube dockerd[80477]: time="2025-04-03T19:42:47.581394703Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:47 minikube dockerd[80477]: time="2025-04-03T19:42:47.581445036Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 03 19:42:47 minikube dockerd[80477]: time="2025-04-03T19:42:47.581455494Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:48 minikube dockerd[80477]: time="2025-04-03T19:42:48.041872994Z" level=info msg="loading plugin \"io.containerd.internal.v1.shutdown\"..." runtime=io.containerd.runc.v2 type=io.containerd.internal.v1
Apr 03 19:42:48 minikube dockerd[80477]: time="2025-04-03T19:42:48.042078824Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:48 minikube dockerd[80477]: time="2025-04-03T19:42:48.042125156Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 03 19:42:48 minikube dockerd[80477]: time="2025-04-03T19:42:48.042134989Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:48 minikube cri-dockerd[80735]: time="2025-04-03T19:42:48Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/748aa77624581687abe93e594bd1a686da79a277d6f3c86f8279bd1f8ea28554/resolv.conf as [nameserver 10.0.2.3]"
Apr 03 19:42:48 minikube dockerd[80477]: time="2025-04-03T19:42:48.237275732Z" level=info msg="loading plugin \"io.containerd.internal.v1.shutdown\"..." runtime=io.containerd.runc.v2 type=io.containerd.internal.v1
Apr 03 19:42:48 minikube dockerd[80477]: time="2025-04-03T19:42:48.237323564Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:48 minikube dockerd[80477]: time="2025-04-03T19:42:48.237341022Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 03 19:42:48 minikube dockerd[80477]: time="2025-04-03T19:42:48.237346522Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 03 19:42:53 minikube cri-dockerd[80735]: time="2025-04-03T19:42:53Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:10.244.0.0/24,},}"

* 
* ==> container status <==
* CONTAINER           IMAGE               CREATED             STATE               NAME                      ATTEMPT             POD ID              POD
a9ce126d3a6b7       ba04bb24b9575       8 minutes ago       Running             storage-provisioner       0                   748aa77624581       storage-provisioner
e3e97638f48e8       97e04611ad434       8 minutes ago       Running             coredns                   0                   b543b774946ab       coredns-5dd5756b68-6x69c
3dd53c6540738       97e04611ad434       8 minutes ago       Running             coredns                   0                   fef9d8e715be2       coredns-5dd5756b68-8kts8
8060ee68e63bc       a5dd5cdd6d3ef       8 minutes ago       Running             kube-proxy                0                   1eb2e337b52d1       kube-proxy-z9xs8
f2dc786718d5d       9cdd6470f48c8       8 minutes ago       Running             etcd                      0                   81a073cdc2c52       etcd-minikube
54969944ff79f       537e9a59ee2fd       8 minutes ago       Running             kube-apiserver            0                   90f5dc13a89a8       kube-apiserver-minikube
649a72e58afd4       42a4e73724daa       8 minutes ago       Running             kube-scheduler            0                   f4f4713fe0512       kube-scheduler-minikube
fef3a791678b8       8276439b4f237       8 minutes ago       Running             kube-controller-manager   0                   522f95cc62808       kube-controller-manager-minikube

* 
* ==> coredns [3dd53c654073] <==
* .:53
[INFO] plugin/reload: Running configuration SHA512 = 4369d49e705690634e66dc4876ba448687add67b4e702a1c8bd9cbe26bf81de42209d08c6b52f2167c69004abbe79b233480d7bb5830c218d455f30e7efd3686
CoreDNS-1.10.1
linux/arm64, go1.20, 055b2c3
[INFO] 127.0.0.1:58827 - 17437 "HINFO IN 6978886320426908171.3541944105409907219. udp 57 false 512" NXDOMAIN qr,rd,ra 132 0.070677219s

* 
* ==> coredns [e3e97638f48e] <==
* .:53
[INFO] plugin/reload: Running configuration SHA512 = 4369d49e705690634e66dc4876ba448687add67b4e702a1c8bd9cbe26bf81de42209d08c6b52f2167c69004abbe79b233480d7bb5830c218d455f30e7efd3686
CoreDNS-1.10.1
linux/arm64, go1.20, 055b2c3
[INFO] 127.0.0.1:38175 - 44126 "HINFO IN 7371805556502664850.3113189154647500841. udp 57 false 512" NXDOMAIN qr,rd,ra 132 0.076457767s

* 
* ==> describe nodes <==
* Name:               minikube
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=arm64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=arm64
                    kubernetes.io/hostname=minikube
                    kubernetes.io/os=linux
                    minikube.k8s.io/commit=8220a6eb95f0a4d75f7f2d7b14cef975f050512d
                    minikube.k8s.io/name=minikube
                    minikube.k8s.io/primary=true
                    minikube.k8s.io/updated_at=2025_04_03T15_41_21_0700
                    minikube.k8s.io/version=v1.32.0
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Thu, 03 Apr 2025 19:42:30 +0000
Taints:             <none>
Unschedulable:      false
Lease:
  HolderIdentity:  minikube
  AcquireTime:     <unset>
  RenewTime:       Thu, 03 Apr 2025 19:50:54 +0000
Conditions:
  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----             ------  -----------------                 ------------------                ------                       -------
  MemoryPressure   False   Thu, 03 Apr 2025 19:47:59 +0000   Thu, 03 Apr 2025 19:42:29 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure     False   Thu, 03 Apr 2025 19:47:59 +0000   Thu, 03 Apr 2025 19:42:29 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure      False   Thu, 03 Apr 2025 19:47:59 +0000   Thu, 03 Apr 2025 19:42:29 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready            True    Thu, 03 Apr 2025 19:47:59 +0000   Thu, 03 Apr 2025 19:42:30 +0000   KubeletReady                 kubelet is posting ready status
Addresses:
  InternalIP:  10.0.2.15
  Hostname:    minikube
Capacity:
  cpu:                2
  ephemeral-storage:  17784760Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  hugepages-32Mi:     0
  hugepages-64Ki:     0
  memory:             3905072Ki
  pods:               110
Allocatable:
  cpu:                2
  ephemeral-storage:  17784760Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  hugepages-32Mi:     0
  hugepages-64Ki:     0
  memory:             3905072Ki
  pods:               110
System Info:
  Machine ID:                 ad5a697ae0ec4e08b17d99a758615c5f
  System UUID:                ad5a697ae0ec4e08b17d99a758615c5f
  Boot ID:                    77cc9ce7-f9f8-4b5a-826f-a8818d2e21a0
  Kernel Version:             5.10.57
  OS Image:                   Buildroot 2021.02.12
  Operating System:           linux
  Architecture:               arm64
  Container Runtime Version:  docker://24.0.7
  Kubelet Version:            v1.28.3
  Kube-Proxy Version:         v1.28.3
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (8 in total)
  Namespace                   Name                                CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                ------------  ----------  ---------------  -------------  ---
  kube-system                 coredns-5dd5756b68-6x69c            100m (5%!)(MISSING)     0 (0%!)(MISSING)      70Mi (1%!)(MISSING)        170Mi (4%!)(MISSING)     8m16s
  kube-system                 coredns-5dd5756b68-8kts8            100m (5%!)(MISSING)     0 (0%!)(MISSING)      70Mi (1%!)(MISSING)        170Mi (4%!)(MISSING)     8m16s
  kube-system                 etcd-minikube                       100m (5%!)(MISSING)     0 (0%!)(MISSING)      100Mi (2%!)(MISSING)       0 (0%!)(MISSING)         8m29s
  kube-system                 kube-apiserver-minikube             250m (12%!)(MISSING)    0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         8m31s
  kube-system                 kube-controller-manager-minikube    200m (10%!)(MISSING)    0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         8m29s
  kube-system                 kube-proxy-z9xs8                    0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         8m16s
  kube-system                 kube-scheduler-minikube             100m (5%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         8m29s
  kube-system                 storage-provisioner                 0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         8m28s
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                850m (42%!)(MISSING)  0 (0%!)(MISSING)
  memory             240Mi (6%!)(MISSING)  340Mi (8%!)(MISSING)
  ephemeral-storage  0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-1Gi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-2Mi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-32Mi     0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-64Ki     0 (0%!)(MISSING)      0 (0%!)(MISSING)
Events:
  Type    Reason                   Age    From             Message
  ----    ------                   ----   ----             -------
  Normal  Starting                 8m15s  kube-proxy       
  Normal  Starting                 8m29s  kubelet          Starting kubelet.
  Normal  NodeAllocatableEnforced  8m29s  kubelet          Updated Node Allocatable limit across pods
  Normal  NodeHasSufficientMemory  8m29s  kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    8m29s  kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     8m29s  kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  RegisteredNode           8m17s  node-controller  Node minikube event: Registered Node minikube in Controller

* 
* ==> dmesg <==
* [  +0.095257] systemd-fstab-generator[471]: Ignoring "noauto" for root device
[  +0.842808] systemd-fstab-generator[765]: Ignoring "noauto" for root device
[  +0.212335] systemd-fstab-generator[802]: Ignoring "noauto" for root device
[  +0.106010] systemd-fstab-generator[813]: Ignoring "noauto" for root device
[  +0.089687] systemd-fstab-generator[826]: Ignoring "noauto" for root device
[  +1.301690] systemd-fstab-generator[1006]: Ignoring "noauto" for root device
[  +0.100478] systemd-fstab-generator[1017]: Ignoring "noauto" for root device
[  +0.082190] systemd-fstab-generator[1028]: Ignoring "noauto" for root device
[  +0.091000] systemd-fstab-generator[1039]: Ignoring "noauto" for root device
[  +0.103402] systemd-fstab-generator[1081]: Ignoring "noauto" for root device
[ +11.080171] systemd-fstab-generator[1309]: Ignoring "noauto" for root device
[  +0.209078] kauditd_printk_skb: 67 callbacks suppressed
[Apr 3 19:05] kauditd_printk_skb: 28 callbacks suppressed
[Apr 3 19:08] systemd-fstab-generator[27443]: Ignoring "noauto" for root device
[Apr 3 19:09] systemd-fstab-generator[28324]: Ignoring "noauto" for root device
[Apr 3 19:14] systemd-fstab-generator[36210]: Ignoring "noauto" for root device
[  +0.189320] systemd-fstab-generator[36244]: Ignoring "noauto" for root device
[  +0.127173] systemd-fstab-generator[36256]: Ignoring "noauto" for root device
[  +0.133131] systemd-fstab-generator[36269]: Ignoring "noauto" for root device
[  +5.138462] kauditd_printk_skb: 6 callbacks suppressed
[  +6.248185] systemd-fstab-generator[36893]: Ignoring "noauto" for root device
[  +0.100316] systemd-fstab-generator[36904]: Ignoring "noauto" for root device
[  +0.098205] systemd-fstab-generator[36915]: Ignoring "noauto" for root device
[  +0.089478] systemd-fstab-generator[36926]: Ignoring "noauto" for root device
[  +0.117150] systemd-fstab-generator[36996]: Ignoring "noauto" for root device
[  +5.328699] kauditd_printk_skb: 41 callbacks suppressed
[Apr 3 19:15] systemd-fstab-generator[39296]: Ignoring "noauto" for root device
[ +31.476963] kauditd_printk_skb: 4 callbacks suppressed
[Apr 3 19:19] systemd-fstab-generator[50079]: Ignoring "noauto" for root device
[  +5.133933] systemd-fstab-generator[50685]: Ignoring "noauto" for root device
[Apr 3 19:24] systemd-fstab-generator[57123]: Ignoring "noauto" for root device
[  +0.194034] systemd-fstab-generator[57158]: Ignoring "noauto" for root device
[  +0.111867] systemd-fstab-generator[57169]: Ignoring "noauto" for root device
[  +0.116664] systemd-fstab-generator[57182]: Ignoring "noauto" for root device
[  +5.117333] kauditd_printk_skb: 6 callbacks suppressed
[  +6.356748] systemd-fstab-generator[57784]: Ignoring "noauto" for root device
[  +0.098621] systemd-fstab-generator[57801]: Ignoring "noauto" for root device
[  +0.088693] systemd-fstab-generator[57812]: Ignoring "noauto" for root device
[  +0.078369] systemd-fstab-generator[57823]: Ignoring "noauto" for root device
[  +0.098736] systemd-fstab-generator[57841]: Ignoring "noauto" for root device
[  +5.471797] kauditd_printk_skb: 39 callbacks suppressed
[ +18.547540] systemd-fstab-generator[60140]: Ignoring "noauto" for root device
[Apr 3 19:25] kauditd_printk_skb: 2 callbacks suppressed
[Apr 3 19:28] systemd-fstab-generator[70817]: Ignoring "noauto" for root device
[Apr 3 19:29] systemd-fstab-generator[71405]: Ignoring "noauto" for root device
[Apr 3 19:37] systemd-fstab-generator[79959]: Ignoring "noauto" for root device
[  +0.172252] systemd-fstab-generator[79993]: Ignoring "noauto" for root device
[  +0.096153] systemd-fstab-generator[80004]: Ignoring "noauto" for root device
[  +0.109287] systemd-fstab-generator[80017]: Ignoring "noauto" for root device
[  +5.134227] kauditd_printk_skb: 6 callbacks suppressed
[  +6.301547] systemd-fstab-generator[80622]: Ignoring "noauto" for root device
[  +0.093910] systemd-fstab-generator[80633]: Ignoring "noauto" for root device
[  +0.085767] systemd-fstab-generator[80644]: Ignoring "noauto" for root device
[  +0.079210] systemd-fstab-generator[80655]: Ignoring "noauto" for root device
[  +0.093821] systemd-fstab-generator[80681]: Ignoring "noauto" for root device
[  +5.784907] kauditd_printk_skb: 29 callbacks suppressed
[Apr 3 19:38] kauditd_printk_skb: 2 callbacks suppressed
[  +7.469141] systemd-fstab-generator[83138]: Ignoring "noauto" for root device
[Apr 3 19:42] systemd-fstab-generator[93728]: Ignoring "noauto" for root device
[  +5.662987] systemd-fstab-generator[94326]: Ignoring "noauto" for root device

* 
* ==> etcd [f2dc786718d5] <==
* {"level":"warn","ts":"2025-04-03T19:42:28.85745Z","caller":"embed/config.go:673","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2025-04-03T19:42:28.857487Z","caller":"etcdmain/etcd.go:73","msg":"Running: ","args":["etcd","--advertise-client-urls=https://10.0.2.15:2379","--cert-file=/var/lib/minikube/certs/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/minikube/etcd","--experimental-initial-corrupt-check=true","--experimental-watch-progress-notify-interval=5s","--initial-advertise-peer-urls=https://10.0.2.15:2380","--initial-cluster=minikube=https://10.0.2.15:2380","--key-file=/var/lib/minikube/certs/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://10.0.2.15:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://10.0.2.15:2380","--name=minikube","--peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/var/lib/minikube/certs/etcd/peer.key","--peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt","--proxy-refresh-interval=70000","--snapshot-count=10000","--trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt"]}
{"level":"warn","ts":"2025-04-03T19:42:28.857532Z","caller":"embed/config.go:673","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2025-04-03T19:42:28.857542Z","caller":"embed/etcd.go:127","msg":"configuring peer listeners","listen-peer-urls":["https://10.0.2.15:2380"]}
{"level":"info","ts":"2025-04-03T19:42:28.857554Z","caller":"embed/etcd.go:495","msg":"starting with peer TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/peer.crt, key = /var/lib/minikube/certs/etcd/peer.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2025-04-03T19:42:28.860134Z","caller":"embed/etcd.go:135","msg":"configuring client listeners","listen-client-urls":["https://10.0.2.15:2379","https://127.0.0.1:2379"]}
{"level":"info","ts":"2025-04-03T19:42:28.860512Z","caller":"embed/etcd.go:309","msg":"starting an etcd server","etcd-version":"3.5.9","git-sha":"bdbbde998","go-version":"go1.19.9","go-os":"linux","go-arch":"arm64","max-cpu-set":2,"max-cpu-available":2,"member-initialized":false,"name":"minikube","data-dir":"/var/lib/minikube/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/minikube/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"max-wals":5,"max-snapshots":5,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://10.0.2.15:2380"],"listen-peer-urls":["https://10.0.2.15:2380"],"advertise-client-urls":["https://10.0.2.15:2379"],"listen-client-urls":["https://10.0.2.15:2379","https://127.0.0.1:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"minikube=https://10.0.2.15:2380","initial-cluster-state":"new","initial-cluster-token":"etcd-cluster","quota-backend-bytes":2147483648,"max-request-bytes":1572864,"max-concurrent-streams":4294967295,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","compact-check-time-enabled":false,"compact-check-time-interval":"1m0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2025-04-03T19:42:28.866036Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/minikube/etcd/member/snap/db","took":"5.003189ms"}
{"level":"info","ts":"2025-04-03T19:42:28.86821Z","caller":"etcdserver/raft.go:495","msg":"starting local member","local-member-id":"f074a195de705325","cluster-id":"ef296cf39f5d9d66"}
{"level":"info","ts":"2025-04-03T19:42:28.868249Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"f074a195de705325 switched to configuration voters=()"}
{"level":"info","ts":"2025-04-03T19:42:28.868262Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"f074a195de705325 became follower at term 0"}
{"level":"info","ts":"2025-04-03T19:42:28.868267Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft f074a195de705325 [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]"}
{"level":"info","ts":"2025-04-03T19:42:28.86827Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"f074a195de705325 became follower at term 1"}
{"level":"info","ts":"2025-04-03T19:42:28.868288Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"f074a195de705325 switched to configuration voters=(17326651331455243045)"}
{"level":"warn","ts":"2025-04-03T19:42:28.871522Z","caller":"auth/store.go:1238","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2025-04-03T19:42:28.873421Z","caller":"mvcc/kvstore.go:393","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2025-04-03T19:42:28.880211Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2025-04-03T19:42:28.880943Z","caller":"etcdserver/server.go:854","msg":"starting etcd server","local-member-id":"f074a195de705325","local-server-version":"3.5.9","cluster-version":"to_be_decided"}
{"level":"info","ts":"2025-04-03T19:42:28.888478Z","caller":"embed/etcd.go:726","msg":"starting with client TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/server.crt, key = /var/lib/minikube/certs/etcd/server.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2025-04-03T19:42:28.896856Z","caller":"embed/etcd.go:278","msg":"now serving peer/client/metrics","local-member-id":"f074a195de705325","initial-advertise-peer-urls":["https://10.0.2.15:2380"],"listen-peer-urls":["https://10.0.2.15:2380"],"advertise-client-urls":["https://10.0.2.15:2379"],"listen-client-urls":["https://10.0.2.15:2379","https://127.0.0.1:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2025-04-03T19:42:28.896926Z","caller":"embed/etcd.go:855","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2025-04-03T19:42:28.89179Z","caller":"etcdserver/server.go:738","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"f074a195de705325","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2025-04-03T19:42:28.891978Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2025-04-03T19:42:28.897002Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2025-04-03T19:42:28.897019Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2025-04-03T19:42:28.892006Z","caller":"embed/etcd.go:597","msg":"serving peer traffic","address":"10.0.2.15:2380"}
{"level":"info","ts":"2025-04-03T19:42:28.899746Z","caller":"embed/etcd.go:569","msg":"cmux::serve","address":"10.0.2.15:2380"}
{"level":"info","ts":"2025-04-03T19:42:28.892113Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"f074a195de705325 switched to configuration voters=(17326651331455243045)"}
{"level":"info","ts":"2025-04-03T19:42:28.899963Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"ef296cf39f5d9d66","local-member-id":"f074a195de705325","added-peer-id":"f074a195de705325","added-peer-peer-urls":["https://10.0.2.15:2380"]}
{"level":"info","ts":"2025-04-03T19:42:28.97179Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"f074a195de705325 is starting a new election at term 1"}
{"level":"info","ts":"2025-04-03T19:42:28.971812Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"f074a195de705325 became pre-candidate at term 1"}
{"level":"info","ts":"2025-04-03T19:42:28.971824Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"f074a195de705325 received MsgPreVoteResp from f074a195de705325 at term 1"}
{"level":"info","ts":"2025-04-03T19:42:28.971855Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"f074a195de705325 became candidate at term 2"}
{"level":"info","ts":"2025-04-03T19:42:28.97186Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"f074a195de705325 received MsgVoteResp from f074a195de705325 at term 2"}
{"level":"info","ts":"2025-04-03T19:42:28.971869Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"f074a195de705325 became leader at term 2"}
{"level":"info","ts":"2025-04-03T19:42:28.971873Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: f074a195de705325 elected leader f074a195de705325 at term 2"}
{"level":"info","ts":"2025-04-03T19:42:28.980167Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2025-04-03T19:42:28.980767Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"10.0.2.15:2379"}
{"level":"info","ts":"2025-04-03T19:42:28.980823Z","caller":"etcdserver/server.go:2571","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2025-04-03T19:42:28.980149Z","caller":"etcdserver/server.go:2062","msg":"published local member to cluster through raft","local-member-id":"f074a195de705325","local-member-attributes":"{Name:minikube ClientURLs:[https://10.0.2.15:2379]}","request-path":"/0/members/f074a195de705325/attributes","cluster-id":"ef296cf39f5d9d66","publish-timeout":"7s"}
{"level":"info","ts":"2025-04-03T19:42:28.980913Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2025-04-03T19:42:28.984135Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"ef296cf39f5d9d66","local-member-id":"f074a195de705325","cluster-version":"3.5"}
{"level":"info","ts":"2025-04-03T19:42:28.984224Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2025-04-03T19:42:28.984233Z","caller":"etcdserver/server.go:2595","msg":"cluster version is updated","cluster-version":"3.5"}
{"level":"info","ts":"2025-04-03T19:42:28.984585Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2025-04-03T19:42:28.984597Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2025-04-03T19:42:29.024024Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"127.0.0.1:2379"}

* 
* ==> kernel <==
*  19:51:02 up 46 min,  0 users,  load average: 0.10, 0.25, 0.28
Linux minikube 5.10.57 #1 SMP PREEMPT Tue Nov 7 03:57:18 UTC 2023 aarch64 GNU/Linux
PRETTY_NAME="Buildroot 2021.02.12"

* 
* ==> kube-apiserver [54969944ff79] <==
* I0403 19:42:30.225683       1 secure_serving.go:213] Serving securely on [::]:8443
I0403 19:42:30.225802       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0403 19:42:30.225859       1 dynamic_serving_content.go:132] "Starting controller" name="aggregator-proxy-cert::/var/lib/minikube/certs/front-proxy-client.crt::/var/lib/minikube/certs/front-proxy-client.key"
I0403 19:42:30.225940       1 system_namespaces_controller.go:67] Starting system namespaces controller
I0403 19:42:30.225975       1 apiservice_controller.go:97] Starting APIServiceRegistrationController
I0403 19:42:30.225979       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I0403 19:42:30.226062       1 cluster_authentication_trust_controller.go:440] Starting cluster_authentication_trust_controller controller
I0403 19:42:30.226070       1 shared_informer.go:311] Waiting for caches to sync for cluster_authentication_trust_controller
I0403 19:42:30.226110       1 aggregator.go:164] waiting for initial CRD sync...
I0403 19:42:30.226122       1 handler_discovery.go:412] Starting ResourceDiscoveryManager
I0403 19:42:30.226817       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0403 19:42:30.226901       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0403 19:42:30.227189       1 crdregistration_controller.go:111] Starting crd-autoregister controller
I0403 19:42:30.227198       1 shared_informer.go:311] Waiting for caches to sync for crd-autoregister
I0403 19:42:30.228013       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0403 19:42:30.228169       1 controller.go:78] Starting OpenAPI AggregationController
I0403 19:42:30.228196       1 controller.go:80] Starting OpenAPI V3 AggregationController
I0403 19:42:30.228278       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0403 19:42:30.228332       1 customresource_discovery_controller.go:289] Starting DiscoveryController
I0403 19:42:30.228353       1 available_controller.go:423] Starting AvailableConditionController
I0403 19:42:30.228372       1 cache.go:32] Waiting for caches to sync for AvailableConditionController controller
I0403 19:42:30.228399       1 apf_controller.go:372] Starting API Priority and Fairness config controller
I0403 19:42:30.228480       1 controller.go:116] Starting legacy_token_tracking_controller
I0403 19:42:30.228489       1 shared_informer.go:311] Waiting for caches to sync for configmaps
I0403 19:42:30.260968       1 controller.go:134] Starting OpenAPI controller
I0403 19:42:30.260988       1 controller.go:85] Starting OpenAPI V3 controller
I0403 19:42:30.260998       1 naming_controller.go:291] Starting NamingConditionController
I0403 19:42:30.261004       1 establishing_controller.go:76] Starting EstablishingController
I0403 19:42:30.261010       1 nonstructuralschema_controller.go:192] Starting NonStructuralSchemaConditionController
I0403 19:42:30.261018       1 apiapproval_controller.go:186] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0403 19:42:30.261023       1 crd_finalizer.go:266] Starting CRDFinalizer
I0403 19:42:30.290775       1 shared_informer.go:318] Caches are synced for node_authorizer
I0403 19:42:30.326271       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0403 19:42:30.326288       1 shared_informer.go:318] Caches are synced for cluster_authentication_trust_controller
I0403 19:42:30.326825       1 controller.go:624] quota admission added evaluator for: namespaces
I0403 19:42:30.327325       1 shared_informer.go:318] Caches are synced for crd-autoregister
I0403 19:42:30.327816       1 aggregator.go:166] initial CRD sync complete...
I0403 19:42:30.327842       1 autoregister_controller.go:141] Starting autoregister controller
I0403 19:42:30.327853       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0403 19:42:30.327861       1 cache.go:39] Caches are synced for autoregister controller
I0403 19:42:30.328397       1 cache.go:39] Caches are synced for AvailableConditionController controller
I0403 19:42:30.328415       1 apf_controller.go:377] Running API Priority and Fairness config worker
I0403 19:42:30.328418       1 apf_controller.go:380] Running API Priority and Fairness periodic rebalancing process
I0403 19:42:30.328502       1 shared_informer.go:318] Caches are synced for configmaps
I0403 19:42:30.353035       1 controller.go:624] quota admission added evaluator for: leases.coordination.k8s.io
I0403 19:42:31.229760       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I0403 19:42:31.232720       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I0403 19:42:31.232731       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0403 19:42:31.423904       1 controller.go:624] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0403 19:42:31.438665       1 controller.go:624] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0403 19:42:31.541511       1 alloc.go:330] "allocated clusterIPs" service="default/kubernetes" clusterIPs={"IPv4":"10.96.0.1"}
W0403 19:42:31.543890       1 lease.go:263] Resetting endpoints for master service "kubernetes" to [10.0.2.15]
I0403 19:42:31.544328       1 controller.go:624] quota admission added evaluator for: endpoints
I0403 19:42:31.545875       1 controller.go:624] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0403 19:42:32.274268       1 controller.go:624] quota admission added evaluator for: serviceaccounts
I0403 19:42:33.087682       1 controller.go:624] quota admission added evaluator for: deployments.apps
I0403 19:42:33.092666       1 alloc.go:330] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs={"IPv4":"10.96.0.10"}
I0403 19:42:33.103788       1 controller.go:624] quota admission added evaluator for: daemonsets.apps
I0403 19:42:46.047044       1 controller.go:624] quota admission added evaluator for: replicasets.apps
I0403 19:42:46.697285       1 controller.go:624] quota admission added evaluator for: controllerrevisions.apps

* 
* ==> kube-controller-manager [fef3a791678b] <==
* I0403 19:42:45.885205       1 node_lifecycle_controller.go:1225] "Initializing eviction metric for zone" zone=""
I0403 19:42:45.886972       1 node_lifecycle_controller.go:877] "Missing timestamp for Node. Assuming now as a timestamp" node="minikube"
I0403 19:42:45.887134       1 node_lifecycle_controller.go:1071] "Controller detected that zone is now in new state" zone="" newState="Normal"
I0403 19:42:45.885678       1 event.go:307] "Event occurred" object="minikube" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node minikube event: Registered Node minikube in Controller"
I0403 19:42:45.893428       1 shared_informer.go:318] Caches are synced for TTL after finished
I0403 19:42:45.893495       1 shared_informer.go:318] Caches are synced for disruption
I0403 19:42:45.894552       1 shared_informer.go:318] Caches are synced for deployment
I0403 19:42:45.895213       1 shared_informer.go:318] Caches are synced for GC
I0403 19:42:45.895315       1 shared_informer.go:318] Caches are synced for service account
I0403 19:42:45.895343       1 shared_informer.go:318] Caches are synced for TTL
I0403 19:42:45.895349       1 shared_informer.go:318] Caches are synced for persistent volume
I0403 19:42:45.904948       1 shared_informer.go:318] Caches are synced for node
I0403 19:42:45.904983       1 range_allocator.go:174] "Sending events to api server"
I0403 19:42:45.904994       1 range_allocator.go:178] "Starting range CIDR allocator"
I0403 19:42:45.905006       1 shared_informer.go:311] Waiting for caches to sync for cidrallocator
I0403 19:42:45.905009       1 shared_informer.go:318] Caches are synced for cidrallocator
I0403 19:42:45.908233       1 range_allocator.go:380] "Set node PodCIDR" node="minikube" podCIDRs=["10.244.0.0/24"]
I0403 19:42:45.912050       1 shared_informer.go:318] Caches are synced for attach detach
I0403 19:42:45.918170       1 shared_informer.go:318] Caches are synced for PV protection
I0403 19:42:45.922448       1 shared_informer.go:318] Caches are synced for certificate-csrapproving
I0403 19:42:45.927668       1 shared_informer.go:318] Caches are synced for ClusterRoleAggregator
I0403 19:42:45.931213       1 shared_informer.go:318] Caches are synced for ephemeral
I0403 19:42:45.934451       1 shared_informer.go:318] Caches are synced for daemon sets
I0403 19:42:45.942590       1 shared_informer.go:318] Caches are synced for HPA
I0403 19:42:45.942795       1 shared_informer.go:318] Caches are synced for cronjob
I0403 19:42:45.943837       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kubelet-serving
I0403 19:42:45.943928       1 shared_informer.go:318] Caches are synced for job
I0403 19:42:45.943842       1 shared_informer.go:318] Caches are synced for stateful set
I0403 19:42:45.944961       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kubelet-client
I0403 19:42:45.945034       1 shared_informer.go:318] Caches are synced for ReplicaSet
I0403 19:42:45.944973       1 shared_informer.go:318] Caches are synced for ReplicationController
I0403 19:42:45.945001       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kube-apiserver-client
I0403 19:42:45.945012       1 shared_informer.go:318] Caches are synced for PVC protection
I0403 19:42:45.946233       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-legacy-unknown
I0403 19:42:45.949599       1 shared_informer.go:318] Caches are synced for namespace
I0403 19:42:45.996679       1 shared_informer.go:318] Caches are synced for crt configmap
I0403 19:42:46.044059       1 shared_informer.go:318] Caches are synced for bootstrap_signer
I0403 19:42:46.049938       1 event.go:307] "Event occurred" object="kube-system/coredns" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set coredns-5dd5756b68 to 2"
I0403 19:42:46.083617       1 shared_informer.go:318] Caches are synced for endpoint_slice
I0403 19:42:46.120909       1 shared_informer.go:318] Caches are synced for endpoint
I0403 19:42:46.144224       1 shared_informer.go:318] Caches are synced for endpoint_slice_mirroring
I0403 19:42:46.146450       1 shared_informer.go:318] Caches are synced for resource quota
I0403 19:42:46.146542       1 shared_informer.go:318] Caches are synced for resource quota
I0403 19:42:46.469437       1 shared_informer.go:318] Caches are synced for garbage collector
I0403 19:42:46.493323       1 shared_informer.go:318] Caches are synced for garbage collector
I0403 19:42:46.493403       1 garbagecollector.go:166] "All resource monitors have synced. Proceeding to collect garbage"
I0403 19:42:46.703139       1 event.go:307] "Event occurred" object="kube-system/kube-proxy" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kube-proxy-z9xs8"
I0403 19:42:46.848538       1 event.go:307] "Event occurred" object="kube-system/coredns-5dd5756b68" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-5dd5756b68-8kts8"
I0403 19:42:46.853830       1 event.go:307] "Event occurred" object="kube-system/coredns-5dd5756b68" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-5dd5756b68-6x69c"
I0403 19:42:46.857979       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-5dd5756b68" duration="808.231013ms"
I0403 19:42:46.869024       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-5dd5756b68" duration="10.915189ms"
I0403 19:42:46.869138       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-5dd5756b68" duration="16.833µs"
I0403 19:42:46.872572       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-5dd5756b68" duration="32.624µs"
I0403 19:42:46.896255       1 endpointslice_controller.go:310] "Error syncing endpoint slices for service, retrying" key="kube-system/kube-dns" err="EndpointSlice informer cache is out of date"
I0403 19:42:48.545272       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-5dd5756b68" duration="48.041µs"
I0403 19:42:48.556697       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-5dd5756b68" duration="3.503222ms"
I0403 19:42:48.556807       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-5dd5756b68" duration="26.75µs"
I0403 19:42:48.571782       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-5dd5756b68" duration="38.791µs"
I0403 19:42:48.581747       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-5dd5756b68" duration="3.640386ms"
I0403 19:42:48.581961       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-5dd5756b68" duration="45.707µs"

* 
* ==> kube-proxy [8060ee68e63b] <==
* I0403 19:42:47.331488       1 server_others.go:69] "Using iptables proxy"
I0403 19:42:47.337092       1 node.go:141] Successfully retrieved node IP: 10.0.2.15
I0403 19:42:47.353142       1 server_others.go:121] "No iptables support for family" ipFamily="IPv6"
I0403 19:42:47.353163       1 server.go:634] "kube-proxy running in single-stack mode" ipFamily="IPv4"
I0403 19:42:47.354592       1 server_others.go:152] "Using iptables Proxier"
I0403 19:42:47.354640       1 proxier.go:251] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I0403 19:42:47.354810       1 server.go:846] "Version info" version="v1.28.3"
I0403 19:42:47.354818       1 server.go:848] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0403 19:42:47.355333       1 config.go:188] "Starting service config controller"
I0403 19:42:47.355359       1 shared_informer.go:311] Waiting for caches to sync for service config
I0403 19:42:47.355375       1 config.go:97] "Starting endpoint slice config controller"
I0403 19:42:47.355378       1 shared_informer.go:311] Waiting for caches to sync for endpoint slice config
I0403 19:42:47.357077       1 config.go:315] "Starting node config controller"
I0403 19:42:47.357084       1 shared_informer.go:311] Waiting for caches to sync for node config
I0403 19:42:47.455465       1 shared_informer.go:318] Caches are synced for endpoint slice config
I0403 19:42:47.455509       1 shared_informer.go:318] Caches are synced for service config
I0403 19:42:47.472979       1 shared_informer.go:318] Caches are synced for node config

* 
* ==> kube-scheduler [649a72e58afd] <==
* I0403 19:42:29.527885       1 serving.go:348] Generated self-signed cert in-memory
W0403 19:42:30.269458       1 requestheader_controller.go:193] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W0403 19:42:30.269478       1 authentication.go:368] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W0403 19:42:30.269484       1 authentication.go:369] Continuing without authentication configuration. This may treat all requests as anonymous.
W0403 19:42:30.269490       1 authentication.go:370] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I0403 19:42:30.291935       1 server.go:154] "Starting Kubernetes Scheduler" version="v1.28.3"
I0403 19:42:30.292054       1 server.go:156] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0403 19:42:30.293158       1 secure_serving.go:213] Serving securely on 127.0.0.1:10259
I0403 19:42:30.293258       1 configmap_cafile_content.go:202] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0403 19:42:30.293281       1 shared_informer.go:311] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0403 19:42:30.293302       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
W0403 19:42:30.296006       1 reflector.go:535] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0403 19:42:30.296100       1 reflector.go:147] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0403 19:42:30.303982       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0403 19:42:30.304075       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0403 19:42:30.304126       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0403 19:42:30.304228       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0403 19:42:30.304400       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0403 19:42:30.304440       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0403 19:42:30.304511       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0403 19:42:30.304558       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0403 19:42:30.304617       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0403 19:42:30.304654       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0403 19:42:30.304704       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0403 19:42:30.304988       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0403 19:42:30.304811       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0403 19:42:30.305064       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0403 19:42:30.304867       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0403 19:42:30.305159       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0403 19:42:30.304887       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0403 19:42:30.305218       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0403 19:42:30.304906       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0403 19:42:30.305279       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0403 19:42:30.304931       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0403 19:42:30.305324       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0403 19:42:30.304953       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0403 19:42:30.305386       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0403 19:42:30.304977       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0403 19:42:30.305442       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0403 19:42:30.305317       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0403 19:42:30.305476       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0403 19:42:31.110297       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0403 19:42:31.110319       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0403 19:42:31.216204       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0403 19:42:31.216382       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0403 19:42:31.251809       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0403 19:42:31.251984       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0403 19:42:31.293630       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0403 19:42:31.293750       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0403 19:42:31.335937       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0403 19:42:31.336048       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0403 19:42:31.431357       1 reflector.go:535] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0403 19:42:31.431437       1 reflector.go:147] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
I0403 19:42:33.993377       1 shared_informer.go:318] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file

* 
* ==> kubelet <==
* -- Journal begins at Thu 2025-04-03 19:03:16 UTC, ends at Thu 2025-04-03 19:51:03 UTC. --
Apr 03 19:42:46 minikube kubelet[94339]: I0403 19:42:46.023779   94339 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-wsnvp\" (UniqueName: \"kubernetes.io/projected/ef5e9c93-7b1b-48b0-afe7-5da411c36014-kube-api-access-wsnvp\") pod \"storage-provisioner\" (UID: \"ef5e9c93-7b1b-48b0-afe7-5da411c36014\") " pod="kube-system/storage-provisioner"
Apr 03 19:42:46 minikube kubelet[94339]: I0403 19:42:46.023836   94339 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"tmp\" (UniqueName: \"kubernetes.io/host-path/ef5e9c93-7b1b-48b0-afe7-5da411c36014-tmp\") pod \"storage-provisioner\" (UID: \"ef5e9c93-7b1b-48b0-afe7-5da411c36014\") " pod="kube-system/storage-provisioner"
Apr 03 19:42:46 minikube kubelet[94339]: E0403 19:42:46.129004   94339 projected.go:292] Couldn't get configMap kube-system/kube-root-ca.crt: configmap "kube-root-ca.crt" not found
Apr 03 19:42:46 minikube kubelet[94339]: E0403 19:42:46.129028   94339 projected.go:198] Error preparing data for projected volume kube-api-access-wsnvp for pod kube-system/storage-provisioner: configmap "kube-root-ca.crt" not found
Apr 03 19:42:46 minikube kubelet[94339]: E0403 19:42:46.129068   94339 nestedpendingoperations.go:348] Operation for "{volumeName:kubernetes.io/projected/ef5e9c93-7b1b-48b0-afe7-5da411c36014-kube-api-access-wsnvp podName:ef5e9c93-7b1b-48b0-afe7-5da411c36014 nodeName:}" failed. No retries permitted until 2025-04-03 19:42:46.629055366 +0000 UTC m=+13.556170737 (durationBeforeRetry 500ms). Error: MountVolume.SetUp failed for volume "kube-api-access-wsnvp" (UniqueName: "kubernetes.io/projected/ef5e9c93-7b1b-48b0-afe7-5da411c36014-kube-api-access-wsnvp") pod "storage-provisioner" (UID: "ef5e9c93-7b1b-48b0-afe7-5da411c36014") : configmap "kube-root-ca.crt" not found
Apr 03 19:42:46 minikube kubelet[94339]: I0403 19:42:46.706385   94339 topology_manager.go:215] "Topology Admit Handler" podUID="2a2483c3-1946-4ce7-a47f-88106002f7a6" podNamespace="kube-system" podName="kube-proxy-z9xs8"
Apr 03 19:42:46 minikube kubelet[94339]: E0403 19:42:46.727794   94339 projected.go:292] Couldn't get configMap kube-system/kube-root-ca.crt: configmap "kube-root-ca.crt" not found
Apr 03 19:42:46 minikube kubelet[94339]: E0403 19:42:46.727810   94339 projected.go:198] Error preparing data for projected volume kube-api-access-wsnvp for pod kube-system/storage-provisioner: configmap "kube-root-ca.crt" not found
Apr 03 19:42:46 minikube kubelet[94339]: E0403 19:42:46.727835   94339 nestedpendingoperations.go:348] Operation for "{volumeName:kubernetes.io/projected/ef5e9c93-7b1b-48b0-afe7-5da411c36014-kube-api-access-wsnvp podName:ef5e9c93-7b1b-48b0-afe7-5da411c36014 nodeName:}" failed. No retries permitted until 2025-04-03 19:42:47.727827291 +0000 UTC m=+14.654942662 (durationBeforeRetry 1s). Error: MountVolume.SetUp failed for volume "kube-api-access-wsnvp" (UniqueName: "kubernetes.io/projected/ef5e9c93-7b1b-48b0-afe7-5da411c36014-kube-api-access-wsnvp") pod "storage-provisioner" (UID: "ef5e9c93-7b1b-48b0-afe7-5da411c36014") : configmap "kube-root-ca.crt" not found
Apr 03 19:42:46 minikube kubelet[94339]: I0403 19:42:46.828504   94339 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"lib-modules\" (UniqueName: \"kubernetes.io/host-path/2a2483c3-1946-4ce7-a47f-88106002f7a6-lib-modules\") pod \"kube-proxy-z9xs8\" (UID: \"2a2483c3-1946-4ce7-a47f-88106002f7a6\") " pod="kube-system/kube-proxy-z9xs8"
Apr 03 19:42:46 minikube kubelet[94339]: I0403 19:42:46.828556   94339 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-proxy\" (UniqueName: \"kubernetes.io/configmap/2a2483c3-1946-4ce7-a47f-88106002f7a6-kube-proxy\") pod \"kube-proxy-z9xs8\" (UID: \"2a2483c3-1946-4ce7-a47f-88106002f7a6\") " pod="kube-system/kube-proxy-z9xs8"
Apr 03 19:42:46 minikube kubelet[94339]: I0403 19:42:46.828577   94339 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"xtables-lock\" (UniqueName: \"kubernetes.io/host-path/2a2483c3-1946-4ce7-a47f-88106002f7a6-xtables-lock\") pod \"kube-proxy-z9xs8\" (UID: \"2a2483c3-1946-4ce7-a47f-88106002f7a6\") " pod="kube-system/kube-proxy-z9xs8"
Apr 03 19:42:46 minikube kubelet[94339]: I0403 19:42:46.828606   94339 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-mttjd\" (UniqueName: \"kubernetes.io/projected/2a2483c3-1946-4ce7-a47f-88106002f7a6-kube-api-access-mttjd\") pod \"kube-proxy-z9xs8\" (UID: \"2a2483c3-1946-4ce7-a47f-88106002f7a6\") " pod="kube-system/kube-proxy-z9xs8"
Apr 03 19:42:46 minikube kubelet[94339]: I0403 19:42:46.852867   94339 topology_manager.go:215] "Topology Admit Handler" podUID="7c2c1988-83c8-4248-9ef6-e61cab3a711b" podNamespace="kube-system" podName="coredns-5dd5756b68-8kts8"
Apr 03 19:42:46 minikube kubelet[94339]: I0403 19:42:46.856870   94339 topology_manager.go:215] "Topology Admit Handler" podUID="9133403c-f1bb-4121-90e5-b09efc2a56a7" podNamespace="kube-system" podName="coredns-5dd5756b68-6x69c"
Apr 03 19:42:47 minikube kubelet[94339]: I0403 19:42:47.030483   94339 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"config-volume\" (UniqueName: \"kubernetes.io/configmap/7c2c1988-83c8-4248-9ef6-e61cab3a711b-config-volume\") pod \"coredns-5dd5756b68-8kts8\" (UID: \"7c2c1988-83c8-4248-9ef6-e61cab3a711b\") " pod="kube-system/coredns-5dd5756b68-8kts8"
Apr 03 19:42:47 minikube kubelet[94339]: I0403 19:42:47.030949   94339 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"config-volume\" (UniqueName: \"kubernetes.io/configmap/9133403c-f1bb-4121-90e5-b09efc2a56a7-config-volume\") pod \"coredns-5dd5756b68-6x69c\" (UID: \"9133403c-f1bb-4121-90e5-b09efc2a56a7\") " pod="kube-system/coredns-5dd5756b68-6x69c"
Apr 03 19:42:47 minikube kubelet[94339]: I0403 19:42:47.030974   94339 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-zlfgp\" (UniqueName: \"kubernetes.io/projected/9133403c-f1bb-4121-90e5-b09efc2a56a7-kube-api-access-zlfgp\") pod \"coredns-5dd5756b68-6x69c\" (UID: \"9133403c-f1bb-4121-90e5-b09efc2a56a7\") " pod="kube-system/coredns-5dd5756b68-6x69c"
Apr 03 19:42:47 minikube kubelet[94339]: I0403 19:42:47.030986   94339 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-ppx77\" (UniqueName: \"kubernetes.io/projected/7c2c1988-83c8-4248-9ef6-e61cab3a711b-kube-api-access-ppx77\") pod \"coredns-5dd5756b68-8kts8\" (UID: \"7c2c1988-83c8-4248-9ef6-e61cab3a711b\") " pod="kube-system/coredns-5dd5756b68-8kts8"
Apr 03 19:42:47 minikube kubelet[94339]: I0403 19:42:47.481142   94339 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="fef9d8e715be2d102746e0ba95a5d8aafb83b8f68a2bd0e89342b057622d5cdf"
Apr 03 19:42:47 minikube kubelet[94339]: I0403 19:42:47.510389   94339 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="b543b774946abb0d8131b72a92567b6b71a9716fef5eae730203c00d767f3e0c"
Apr 03 19:42:48 minikube kubelet[94339]: I0403 19:42:48.548096   94339 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/kube-proxy-z9xs8" podStartSLOduration=2.548070691 podCreationTimestamp="2025-04-03 19:42:46 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-04-03 19:42:47.52387584 +0000 UTC m=+14.450991211" watchObservedRunningTime="2025-04-03 19:42:48.548070691 +0000 UTC m=+15.475186062"
Apr 03 19:42:48 minikube kubelet[94339]: I0403 19:42:48.556600   94339 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/coredns-5dd5756b68-6x69c" podStartSLOduration=2.556578186 podCreationTimestamp="2025-04-03 19:42:46 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-04-03 19:42:48.548458183 +0000 UTC m=+15.475573512" watchObservedRunningTime="2025-04-03 19:42:48.556578186 +0000 UTC m=+15.483693515"
Apr 03 19:42:48 minikube kubelet[94339]: I0403 19:42:48.571256   94339 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/storage-provisioner" podStartSLOduration=14.571227892 podCreationTimestamp="2025-04-03 19:42:34 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-04-03 19:42:48.565786293 +0000 UTC m=+15.492901664" watchObservedRunningTime="2025-04-03 19:42:48.571227892 +0000 UTC m=+15.498343263"
Apr 03 19:42:48 minikube kubelet[94339]: I0403 19:42:48.578269   94339 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/coredns-5dd5756b68-8kts8" podStartSLOduration=2.5782512090000003 podCreationTimestamp="2025-04-03 19:42:46 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-04-03 19:42:48.571464554 +0000 UTC m=+15.498579883" watchObservedRunningTime="2025-04-03 19:42:48.578251209 +0000 UTC m=+15.505366580"
Apr 03 19:42:53 minikube kubelet[94339]: I0403 19:42:53.536680   94339 kuberuntime_manager.go:1523] "Updating runtime config through cri with podcidr" CIDR="10.244.0.0/24"
Apr 03 19:42:53 minikube kubelet[94339]: I0403 19:42:53.537252   94339 kubelet_network.go:61] "Updating Pod CIDR" originalPodCIDR="" newPodCIDR="10.244.0.0/24"
Apr 03 19:43:33 minikube kubelet[94339]: E0403 19:43:33.169591   94339 iptables.go:575] "Could not set up iptables canary" err=<
Apr 03 19:43:33 minikube kubelet[94339]:         error creating chain "KUBE-KUBELET-CANARY": exit status 3: ip6tables v1.8.6 (legacy): can't initialize ip6tables table `nat': Table does not exist (do you need to insmod?)
Apr 03 19:43:33 minikube kubelet[94339]:         Perhaps ip6tables or your kernel needs to be upgraded.
Apr 03 19:43:33 minikube kubelet[94339]:  > table="nat" chain="KUBE-KUBELET-CANARY"
Apr 03 19:44:33 minikube kubelet[94339]: E0403 19:44:33.168376   94339 iptables.go:575] "Could not set up iptables canary" err=<
Apr 03 19:44:33 minikube kubelet[94339]:         error creating chain "KUBE-KUBELET-CANARY": exit status 3: ip6tables v1.8.6 (legacy): can't initialize ip6tables table `nat': Table does not exist (do you need to insmod?)
Apr 03 19:44:33 minikube kubelet[94339]:         Perhaps ip6tables or your kernel needs to be upgraded.
Apr 03 19:44:33 minikube kubelet[94339]:  > table="nat" chain="KUBE-KUBELET-CANARY"
Apr 03 19:45:33 minikube kubelet[94339]: E0403 19:45:33.169259   94339 iptables.go:575] "Could not set up iptables canary" err=<
Apr 03 19:45:33 minikube kubelet[94339]:         error creating chain "KUBE-KUBELET-CANARY": exit status 3: ip6tables v1.8.6 (legacy): can't initialize ip6tables table `nat': Table does not exist (do you need to insmod?)
Apr 03 19:45:33 minikube kubelet[94339]:         Perhaps ip6tables or your kernel needs to be upgraded.
Apr 03 19:45:33 minikube kubelet[94339]:  > table="nat" chain="KUBE-KUBELET-CANARY"
Apr 03 19:46:33 minikube kubelet[94339]: E0403 19:46:33.168787   94339 iptables.go:575] "Could not set up iptables canary" err=<
Apr 03 19:46:33 minikube kubelet[94339]:         error creating chain "KUBE-KUBELET-CANARY": exit status 3: ip6tables v1.8.6 (legacy): can't initialize ip6tables table `nat': Table does not exist (do you need to insmod?)
Apr 03 19:46:33 minikube kubelet[94339]:         Perhaps ip6tables or your kernel needs to be upgraded.
Apr 03 19:46:33 minikube kubelet[94339]:  > table="nat" chain="KUBE-KUBELET-CANARY"
Apr 03 19:47:33 minikube kubelet[94339]: E0403 19:47:33.172307   94339 iptables.go:575] "Could not set up iptables canary" err=<
Apr 03 19:47:33 minikube kubelet[94339]:         error creating chain "KUBE-KUBELET-CANARY": exit status 3: ip6tables v1.8.6 (legacy): can't initialize ip6tables table `nat': Table does not exist (do you need to insmod?)
Apr 03 19:47:33 minikube kubelet[94339]:         Perhaps ip6tables or your kernel needs to be upgraded.
Apr 03 19:47:33 minikube kubelet[94339]:  > table="nat" chain="KUBE-KUBELET-CANARY"
Apr 03 19:47:33 minikube kubelet[94339]: W0403 19:47:33.188633   94339 machine.go:65] Cannot read vendor id correctly, set empty.
Apr 03 19:48:33 minikube kubelet[94339]: E0403 19:48:33.168117   94339 iptables.go:575] "Could not set up iptables canary" err=<
Apr 03 19:48:33 minikube kubelet[94339]:         error creating chain "KUBE-KUBELET-CANARY": exit status 3: ip6tables v1.8.6 (legacy): can't initialize ip6tables table `nat': Table does not exist (do you need to insmod?)
Apr 03 19:48:33 minikube kubelet[94339]:         Perhaps ip6tables or your kernel needs to be upgraded.
Apr 03 19:48:33 minikube kubelet[94339]:  > table="nat" chain="KUBE-KUBELET-CANARY"
Apr 03 19:49:33 minikube kubelet[94339]: E0403 19:49:33.167517   94339 iptables.go:575] "Could not set up iptables canary" err=<
Apr 03 19:49:33 minikube kubelet[94339]:         error creating chain "KUBE-KUBELET-CANARY": exit status 3: ip6tables v1.8.6 (legacy): can't initialize ip6tables table `nat': Table does not exist (do you need to insmod?)
Apr 03 19:49:33 minikube kubelet[94339]:         Perhaps ip6tables or your kernel needs to be upgraded.
Apr 03 19:49:33 minikube kubelet[94339]:  > table="nat" chain="KUBE-KUBELET-CANARY"
Apr 03 19:50:33 minikube kubelet[94339]: E0403 19:50:33.169275   94339 iptables.go:575] "Could not set up iptables canary" err=<
Apr 03 19:50:33 minikube kubelet[94339]:         error creating chain "KUBE-KUBELET-CANARY": exit status 3: ip6tables v1.8.6 (legacy): can't initialize ip6tables table `nat': Table does not exist (do you need to insmod?)
Apr 03 19:50:33 minikube kubelet[94339]:         Perhaps ip6tables or your kernel needs to be upgraded.
Apr 03 19:50:33 minikube kubelet[94339]:  > table="nat" chain="KUBE-KUBELET-CANARY"

* 
* ==> storage-provisioner [a9ce126d3a6b] <==
* I0403 19:42:48.286777       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
I0403 19:42:48.290947       1 storage_provisioner.go:141] Storage provisioner initialized, now starting service!
I0403 19:42:48.290976       1 leaderelection.go:243] attempting to acquire leader lease kube-system/k8s.io-minikube-hostpath...
I0403 19:42:48.293998       1 leaderelection.go:253] successfully acquired lease kube-system/k8s.io-minikube-hostpath
I0403 19:42:48.294066       1 controller.go:835] Starting provisioner controller k8s.io/minikube-hostpath_minikube_7401b666-8bbe-46bf-b044-cc0621191896!
I0403 19:42:48.294454       1 event.go:282] Event(v1.ObjectReference{Kind:"Endpoints", Namespace:"kube-system", Name:"k8s.io-minikube-hostpath", UID:"01a9a757-2806-4c3d-ad49-65ea87352848", APIVersion:"v1", ResourceVersion:"370", FieldPath:""}): type: 'Normal' reason: 'LeaderElection' minikube_7401b666-8bbe-46bf-b044-cc0621191896 became leader
I0403 19:42:48.394766       1 controller.go:884] Started provisioner controller k8s.io/minikube-hostpath_minikube_7401b666-8bbe-46bf-b044-cc0621191896!

